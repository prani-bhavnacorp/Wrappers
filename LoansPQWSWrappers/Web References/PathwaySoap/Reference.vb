'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace PathwaySoap
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CmdSpectrumSoapBinding", [Namespace]:="urn:CmdSpectrum")>  _
    Partial Public Class CmdSpectrumService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private submitSIMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitSSPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitSSP1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitSTTIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitSTTI1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private submitXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPathwaysVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTellerStationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getStationsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private reserveStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private releaseStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTellerIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_PathwaySoap_CmdSpectrumService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event submitSIMCompleted As submitSIMCompletedEventHandler
        
        '''<remarks/>
        Public Event submitSSPCompleted As submitSSPCompletedEventHandler
        
        '''<remarks/>
        Public Event submitSSP1Completed As submitSSP1CompletedEventHandler
        
        '''<remarks/>
        Public Event submitSTTICompleted As submitSTTICompletedEventHandler
        
        '''<remarks/>
        Public Event submitSTTI1Completed As submitSTTI1CompletedEventHandler
        
        '''<remarks/>
        Public Event submitXMLCompleted As submitXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event getPathwaysVersionCompleted As getPathwaysVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event getTellerStationsCompleted As getTellerStationsCompletedEventHandler
        
        '''<remarks/>
        Public Event getStationsCompleted As getStationsCompletedEventHandler
        
        '''<remarks/>
        Public Event getStationCompleted As getStationCompletedEventHandler
        
        '''<remarks/>
        Public Event reserveStationCompleted As reserveStationCompletedEventHandler
        
        '''<remarks/>
        Public Event releaseStationCompleted As releaseStationCompletedEventHandler
        
        '''<remarks/>
        Public Event getTellerIdsCompleted As getTellerIdsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function submitSIM(ByVal request As String) As <System.Xml.Serialization.SoapElementAttribute("submitSIMReturn")> String
            Dim results() As Object = Me.Invoke("submitSIM", New Object() {request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitSIM(ByVal request As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitSIM", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitSIM(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitSIMAsync(ByVal request As String)
            Me.submitSIMAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitSIMAsync(ByVal request As String, ByVal userState As Object)
            If (Me.submitSIMOperationCompleted Is Nothing) Then
                Me.submitSIMOperationCompleted = AddressOf Me.OnsubmitSIMOperationCompleted
            End If
            Me.InvokeAsync("submitSIM", New Object() {request}, Me.submitSIMOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitSIMOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitSIMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitSIMCompleted(Me, New submitSIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Overloads Function submitSSP(ByVal serviceContext As ServiceContext, ByVal request As String) As <System.Xml.Serialization.SoapElementAttribute("submitSSPReturn")> SpectrumResponse
            Dim results() As Object = Me.Invoke("submitSSP", New Object() {serviceContext, request})
            Return CType(results(0),SpectrumResponse)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitSSP(ByVal serviceContext As ServiceContext, ByVal request As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitSSP", New Object() {serviceContext, request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitSSP(ByVal asyncResult As System.IAsyncResult) As SpectrumResponse
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),SpectrumResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitSSPAsync(ByVal serviceContext As ServiceContext, ByVal request As String)
            Me.submitSSPAsync(serviceContext, request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitSSPAsync(ByVal serviceContext As ServiceContext, ByVal request As String, ByVal userState As Object)
            If (Me.submitSSPOperationCompleted Is Nothing) Then
                Me.submitSSPOperationCompleted = AddressOf Me.OnsubmitSSPOperationCompleted
            End If
            Me.InvokeAsync("submitSSP", New Object() {serviceContext, request}, Me.submitSSPOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitSSPOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitSSPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitSSPCompleted(Me, New submitSSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="submitSSP1"),  _
         System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Overloads Function submitSSP(ByVal request As String) As <System.Xml.Serialization.SoapElementAttribute("submitSSPReturn")> String
            Dim results() As Object = Me.Invoke("submitSSP1", New Object() {request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitSSP1(ByVal request As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitSSP1", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitSSP1(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitSSP1Async(ByVal request As String)
            Me.submitSSP1Async(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitSSP1Async(ByVal request As String, ByVal userState As Object)
            If (Me.submitSSP1OperationCompleted Is Nothing) Then
                Me.submitSSP1OperationCompleted = AddressOf Me.OnsubmitSSP1OperationCompleted
            End If
            Me.InvokeAsync("submitSSP1", New Object() {request}, Me.submitSSP1OperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitSSP1OperationCompleted(ByVal arg As Object)
            If (Not (Me.submitSSP1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitSSP1Completed(Me, New submitSSP1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Overloads Function submitSTTI(ByVal serviceContext As ServiceContext, ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String) As <System.Xml.Serialization.SoapElementAttribute("submitSTTIReturn")> String
            Dim results() As Object = Me.Invoke("submitSTTI", New Object() {serviceContext, trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitSTTI(ByVal serviceContext As ServiceContext, ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitSTTI", New Object() {serviceContext, trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitSTTI(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitSTTIAsync(ByVal serviceContext As ServiceContext, ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String)
            Me.submitSTTIAsync(serviceContext, trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitSTTIAsync(ByVal serviceContext As ServiceContext, ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String, ByVal userState As Object)
            If (Me.submitSTTIOperationCompleted Is Nothing) Then
                Me.submitSTTIOperationCompleted = AddressOf Me.OnsubmitSTTIOperationCompleted
            End If
            Me.InvokeAsync("submitSTTI", New Object() {serviceContext, trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData}, Me.submitSTTIOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitSTTIOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitSTTICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitSTTICompleted(Me, New submitSTTICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="submitSTTI1"),  _
         System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Overloads Function submitSTTI(ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String) As <System.Xml.Serialization.SoapElementAttribute("submitSTTIReturn")> String
            Dim results() As Object = Me.Invoke("submitSTTI1", New Object() {trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitSTTI1(ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitSTTI1", New Object() {trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitSTTI1(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitSTTI1Async(ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String)
            Me.submitSTTI1Async(trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitSTTI1Async(ByVal trhVerNum As String, ByVal moduleNum As String, ByVal tranCode As String, ByVal tranVerNum As String, ByVal tranByteMap As String, ByVal requestData As String, ByVal userState As Object)
            If (Me.submitSTTI1OperationCompleted Is Nothing) Then
                Me.submitSTTI1OperationCompleted = AddressOf Me.OnsubmitSTTI1OperationCompleted
            End If
            Me.InvokeAsync("submitSTTI1", New Object() {trhVerNum, moduleNum, tranCode, tranVerNum, tranByteMap, requestData}, Me.submitSTTI1OperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitSTTI1OperationCompleted(ByVal arg As Object)
            If (Not (Me.submitSTTI1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitSTTI1Completed(Me, New submitSTTI1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function submitXML(ByVal request As String) As <System.Xml.Serialization.SoapElementAttribute("submitXMLReturn")> String
            Dim results() As Object = Me.Invoke("submitXML", New Object() {request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginsubmitXML(ByVal request As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("submitXML", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndsubmitXML(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub submitXMLAsync(ByVal request As String)
            Me.submitXMLAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub submitXMLAsync(ByVal request As String, ByVal userState As Object)
            If (Me.submitXMLOperationCompleted Is Nothing) Then
                Me.submitXMLOperationCompleted = AddressOf Me.OnsubmitXMLOperationCompleted
            End If
            Me.InvokeAsync("submitXML", New Object() {request}, Me.submitXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnsubmitXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.submitXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent submitXMLCompleted(Me, New submitXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function getPathwaysVersion() As <System.Xml.Serialization.SoapElementAttribute("getPathwaysVersionReturn")> String
            Dim results() As Object = Me.Invoke("getPathwaysVersion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegingetPathwaysVersion(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getPathwaysVersion", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetPathwaysVersion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPathwaysVersionAsync()
            Me.getPathwaysVersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPathwaysVersionAsync(ByVal userState As Object)
            If (Me.getPathwaysVersionOperationCompleted Is Nothing) Then
                Me.getPathwaysVersionOperationCompleted = AddressOf Me.OngetPathwaysVersionOperationCompleted
            End If
            Me.InvokeAsync("getPathwaysVersion", New Object(-1) {}, Me.getPathwaysVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPathwaysVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPathwaysVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPathwaysVersionCompleted(Me, New getPathwaysVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function getTellerStations() As <System.Xml.Serialization.SoapElementAttribute("getTellerStationsReturn")> String()
            Dim results() As Object = Me.Invoke("getTellerStations", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetTellerStations(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getTellerStations", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetTellerStations(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTellerStationsAsync()
            Me.getTellerStationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTellerStationsAsync(ByVal userState As Object)
            If (Me.getTellerStationsOperationCompleted Is Nothing) Then
                Me.getTellerStationsOperationCompleted = AddressOf Me.OngetTellerStationsOperationCompleted
            End If
            Me.InvokeAsync("getTellerStations", New Object(-1) {}, Me.getTellerStationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTellerStationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTellerStationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTellerStationsCompleted(Me, New getTellerStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function getStations() As <System.Xml.Serialization.SoapElementAttribute("getStationsReturn")> Station()
            Dim results() As Object = Me.Invoke("getStations", New Object(-1) {})
            Return CType(results(0),Station())
        End Function
        
        '''<remarks/>
        Public Function BegingetStations(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getStations", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetStations(ByVal asyncResult As System.IAsyncResult) As Station()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Station())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getStationsAsync()
            Me.getStationsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getStationsAsync(ByVal userState As Object)
            If (Me.getStationsOperationCompleted Is Nothing) Then
                Me.getStationsOperationCompleted = AddressOf Me.OngetStationsOperationCompleted
            End If
            Me.InvokeAsync("getStations", New Object(-1) {}, Me.getStationsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetStationsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getStationsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getStationsCompleted(Me, New getStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function getStation(ByVal stationName As String) As <System.Xml.Serialization.SoapElementAttribute("getStationReturn")> Station
            Dim results() As Object = Me.Invoke("getStation", New Object() {stationName})
            Return CType(results(0),Station)
        End Function
        
        '''<remarks/>
        Public Function BegingetStation(ByVal stationName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getStation", New Object() {stationName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetStation(ByVal asyncResult As System.IAsyncResult) As Station
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Station)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getStationAsync(ByVal stationName As String)
            Me.getStationAsync(stationName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getStationAsync(ByVal stationName As String, ByVal userState As Object)
            If (Me.getStationOperationCompleted Is Nothing) Then
                Me.getStationOperationCompleted = AddressOf Me.OngetStationOperationCompleted
            End If
            Me.InvokeAsync("getStation", New Object() {stationName}, Me.getStationOperationCompleted, userState)
        End Sub
        
        Private Sub OngetStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.getStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getStationCompleted(Me, New getStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Sub reserveStation(ByVal station As Station, ByVal force As Boolean)
            Me.Invoke("reserveStation", New Object() {station, force})
        End Sub
        
        '''<remarks/>
        Public Function BeginreserveStation(ByVal station As Station, ByVal force As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("reserveStation", New Object() {station, force}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndreserveStation(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub reserveStationAsync(ByVal station As Station, ByVal force As Boolean)
            Me.reserveStationAsync(station, force, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub reserveStationAsync(ByVal station As Station, ByVal force As Boolean, ByVal userState As Object)
            If (Me.reserveStationOperationCompleted Is Nothing) Then
                Me.reserveStationOperationCompleted = AddressOf Me.OnreserveStationOperationCompleted
            End If
            Me.InvokeAsync("reserveStation", New Object() {station, force}, Me.reserveStationOperationCompleted, userState)
        End Sub
        
        Private Sub OnreserveStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.reserveStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent reserveStationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Sub releaseStation(ByVal station As Station)
            Me.Invoke("releaseStation", New Object() {station})
        End Sub
        
        '''<remarks/>
        Public Function BeginreleaseStation(ByVal station As Station, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("releaseStation", New Object() {station}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndreleaseStation(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub releaseStationAsync(ByVal station As Station)
            Me.releaseStationAsync(station, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub releaseStationAsync(ByVal station As Station, ByVal userState As Object)
            If (Me.releaseStationOperationCompleted Is Nothing) Then
                Me.releaseStationOperationCompleted = AddressOf Me.OnreleaseStationOperationCompleted
            End If
            Me.InvokeAsync("releaseStation", New Object() {station}, Me.releaseStationOperationCompleted, userState)
        End Sub
        
        Private Sub OnreleaseStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.releaseStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent releaseStationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="urn:CmdSpectrum", ResponseNamespace:="urn:CmdSpectrum")>  _
        Public Function getTellerIds() As <System.Xml.Serialization.SoapElementAttribute("getTellerIdsReturn")> String()
            Dim results() As Object = Me.Invoke("getTellerIds", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetTellerIds(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getTellerIds", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetTellerIds(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTellerIdsAsync()
            Me.getTellerIdsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTellerIdsAsync(ByVal userState As Object)
            If (Me.getTellerIdsOperationCompleted Is Nothing) Then
                Me.getTellerIdsOperationCompleted = AddressOf Me.OngetTellerIdsOperationCompleted
            End If
            Me.InvokeAsync("getTellerIds", New Object(-1) {}, Me.getTellerIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTellerIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTellerIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTellerIdsCompleted(Me, New getTellerIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CmdSpectrum")>  _
    Partial Public Class ServiceContext
        
        Private stationIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property stationId() As String
            Get
                Return Me.stationIdField
            End Get
            Set
                Me.stationIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CmdSpectrum")>  _
    Partial Public Class Station
        
        Private hostNameField As String
        
        Private ipAddressField As String
        
        Private stationNameField As String
        
        Private statusField As Integer
        
        Private userNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property hostName() As String
            Get
                Return Me.hostNameField
            End Get
            Set
                Me.hostNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property ipAddress() As String
            Get
                Return Me.ipAddressField
            End Get
            Set
                Me.ipAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property stationName() As String
            Get
                Return Me.stationNameField
            End Get
            Set
                Me.stationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property status() As Integer
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property userName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.SoapTypeAttribute([Namespace]:="urn:CmdSpectrum")>  _
    Partial Public Class SpectrumResponse
        
        Private continuableErrorField As Boolean
        
        Private missingMessagesField() As String
        
        Private moreOutputField As Boolean
        
        Private overridableErrorField As Boolean
        
        Private overrideAuthorizedField As Boolean
        
        Private prefixWord8Field As Integer
        
        Private previousOutputField As Boolean
        
        Private responseField As String
        
        Private ticklersField() As String
        
        '''<remarks/>
        Public Property continuableError() As Boolean
            Get
                Return Me.continuableErrorField
            End Get
            Set
                Me.continuableErrorField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property missingMessages() As String()
            Get
                Return Me.missingMessagesField
            End Get
            Set
                Me.missingMessagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property moreOutput() As Boolean
            Get
                Return Me.moreOutputField
            End Get
            Set
                Me.moreOutputField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property overridableError() As Boolean
            Get
                Return Me.overridableErrorField
            End Get
            Set
                Me.overridableErrorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property overrideAuthorized() As Boolean
            Get
                Return Me.overrideAuthorizedField
            End Get
            Set
                Me.overrideAuthorizedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property prefixWord8() As Integer
            Get
                Return Me.prefixWord8Field
            End Get
            Set
                Me.prefixWord8Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property previousOutput() As Boolean
            Get
                Return Me.previousOutputField
            End Get
            Set
                Me.previousOutputField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property response() As String
            Get
                Return Me.responseField
            End Get
            Set
                Me.responseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.SoapElementAttribute(IsNullable:=true)>  _
        Public Property ticklers() As String()
            Get
                Return Me.ticklersField
            End Get
            Set
                Me.ticklersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitSIMCompletedEventHandler(ByVal sender As Object, ByVal e As submitSIMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitSIMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitSSPCompletedEventHandler(ByVal sender As Object, ByVal e As submitSSPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitSSPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SpectrumResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SpectrumResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitSSP1CompletedEventHandler(ByVal sender As Object, ByVal e As submitSSP1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitSSP1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitSTTICompletedEventHandler(ByVal sender As Object, ByVal e As submitSTTICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitSTTICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitSTTI1CompletedEventHandler(ByVal sender As Object, ByVal e As submitSTTI1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitSTTI1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub submitXMLCompletedEventHandler(ByVal sender As Object, ByVal e As submitXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class submitXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getPathwaysVersionCompletedEventHandler(ByVal sender As Object, ByVal e As getPathwaysVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPathwaysVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getTellerStationsCompletedEventHandler(ByVal sender As Object, ByVal e As getTellerStationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTellerStationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getStationsCompletedEventHandler(ByVal sender As Object, ByVal e As getStationsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getStationsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Station()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Station())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getStationCompletedEventHandler(ByVal sender As Object, ByVal e As getStationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getStationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Station
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Station)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub reserveStationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub releaseStationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub getTellerIdsCompletedEventHandler(ByVal sender As Object, ByVal e As getTellerIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTellerIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
