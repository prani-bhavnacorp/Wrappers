'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5456
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5456.
'
Namespace AccessAdvantage
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EHPRMRSoap", [Namespace]:="FISERV.IS.PAS.EHPRMR.Runtime.WebService")>  _
    Partial Public Class EHPRMR
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Event_2001OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Event_2002OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Event_2003OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Event_2004OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Event_2005OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Event_2100OperationCompleted As System.Threading.SendOrPostCallback
        
        Private PingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignoffOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WSGetInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WSSetInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_AccessAdvantage_EHPRMR
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Event_2001Completed As Event_2001CompletedEventHandler
        
        '''<remarks/>
        Public Event Event_2002Completed As Event_2002CompletedEventHandler
        
        '''<remarks/>
        Public Event Event_2003Completed As Event_2003CompletedEventHandler
        
        '''<remarks/>
        Public Event Event_2004Completed As Event_2004CompletedEventHandler
        
        '''<remarks/>
        Public Event Event_2005Completed As Event_2005CompletedEventHandler
        
        '''<remarks/>
        Public Event Event_2100Completed As Event_2100CompletedEventHandler
        
        '''<remarks/>
        Public Event PingCompleted As PingCompletedEventHandler
        
        '''<remarks/>
        Public Event SignoffCompleted As SignoffCompletedEventHandler
        
        '''<remarks/>
        Public Event SignonCompleted As SignonCompletedEventHandler
        
        '''<remarks/>
        Public Event WSGetInfoCompleted As WSGetInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event WSSetInfoCompleted As WSSetInfoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2001", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2001(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2001", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2001(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2001", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2001(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2001Async(ByVal requestXMLString As String)
            Me.Event_2001Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2001Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2001OperationCompleted Is Nothing) Then
                Me.Event_2001OperationCompleted = AddressOf Me.OnEvent_2001OperationCompleted
            End If
            Me.InvokeAsync("Event_2001", New Object() {requestXMLString}, Me.Event_2001OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2001OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2001CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2001Completed(Me, New Event_2001CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2002", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2002(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2002", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2002(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2002", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2002(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2002Async(ByVal requestXMLString As String)
            Me.Event_2002Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2002Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2002OperationCompleted Is Nothing) Then
                Me.Event_2002OperationCompleted = AddressOf Me.OnEvent_2002OperationCompleted
            End If
            Me.InvokeAsync("Event_2002", New Object() {requestXMLString}, Me.Event_2002OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2002OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2002CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2002Completed(Me, New Event_2002CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2003", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2003(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2003", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2003(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2003", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2003(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2003Async(ByVal requestXMLString As String)
            Me.Event_2003Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2003Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2003OperationCompleted Is Nothing) Then
                Me.Event_2003OperationCompleted = AddressOf Me.OnEvent_2003OperationCompleted
            End If
            Me.InvokeAsync("Event_2003", New Object() {requestXMLString}, Me.Event_2003OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2003OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2003CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2003Completed(Me, New Event_2003CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2004", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2004(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2004", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2004(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2004", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2004(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2004Async(ByVal requestXMLString As String)
            Me.Event_2004Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2004Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2004OperationCompleted Is Nothing) Then
                Me.Event_2004OperationCompleted = AddressOf Me.OnEvent_2004OperationCompleted
            End If
            Me.InvokeAsync("Event_2004", New Object() {requestXMLString}, Me.Event_2004OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2004OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2004CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2004Completed(Me, New Event_2004CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2005", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2005(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2005", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2005(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2005", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2005(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2005Async(ByVal requestXMLString As String)
            Me.Event_2005Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2005Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2005OperationCompleted Is Nothing) Then
                Me.Event_2005OperationCompleted = AddressOf Me.OnEvent_2005OperationCompleted
            End If
            Me.InvokeAsync("Event_2005", New Object() {requestXMLString}, Me.Event_2005OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2005OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2005CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2005Completed(Me, New Event_2005CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Event_2100", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Event_2100(ByVal requestXMLString As String) As String
            Dim results() As Object = Me.Invoke("Event_2100", New Object() {requestXMLString})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEvent_2100(ByVal requestXMLString As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Event_2100", New Object() {requestXMLString}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEvent_2100(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Event_2100Async(ByVal requestXMLString As String)
            Me.Event_2100Async(requestXMLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Event_2100Async(ByVal requestXMLString As String, ByVal userState As Object)
            If (Me.Event_2100OperationCompleted Is Nothing) Then
                Me.Event_2100OperationCompleted = AddressOf Me.OnEvent_2100OperationCompleted
            End If
            Me.InvokeAsync("Event_2100", New Object() {requestXMLString}, Me.Event_2100OperationCompleted, userState)
        End Sub
        
        Private Sub OnEvent_2100OperationCompleted(ByVal arg As Object)
            If (Not (Me.Event_2100CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Event_2100Completed(Me, New Event_2100CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Ping", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ping(ByVal requestXML As String) As String
            Dim results() As Object = Me.Invoke("Ping", New Object() {requestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPing(ByVal requestXML As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Ping", New Object() {requestXML}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPing(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PingAsync(ByVal requestXML As String)
            Me.PingAsync(requestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PingAsync(ByVal requestXML As String, ByVal userState As Object)
            If (Me.PingOperationCompleted Is Nothing) Then
                Me.PingOperationCompleted = AddressOf Me.OnPingOperationCompleted
            End If
            Me.InvokeAsync("Ping", New Object() {requestXML}, Me.PingOperationCompleted, userState)
        End Sub
        
        Private Sub OnPingOperationCompleted(ByVal arg As Object)
            If (Not (Me.PingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PingCompleted(Me, New PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Signoff", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Signoff(ByVal requestXML As String) As String
            Dim results() As Object = Me.Invoke("Signoff", New Object() {requestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginSignoff(ByVal requestXML As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Signoff", New Object() {requestXML}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSignoff(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SignoffAsync(ByVal requestXML As String)
            Me.SignoffAsync(requestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignoffAsync(ByVal requestXML As String, ByVal userState As Object)
            If (Me.SignoffOperationCompleted Is Nothing) Then
                Me.SignoffOperationCompleted = AddressOf Me.OnSignoffOperationCompleted
            End If
            Me.InvokeAsync("Signoff", New Object() {requestXML}, Me.SignoffOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignoffOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignoffCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignoffCompleted(Me, New SignoffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/Signon", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Signon(ByVal requestXML As String) As String
            Dim results() As Object = Me.Invoke("Signon", New Object() {requestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginSignon(ByVal requestXML As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Signon", New Object() {requestXML}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSignon(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SignonAsync(ByVal requestXML As String)
            Me.SignonAsync(requestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignonAsync(ByVal requestXML As String, ByVal userState As Object)
            If (Me.SignonOperationCompleted Is Nothing) Then
                Me.SignonOperationCompleted = AddressOf Me.OnSignonOperationCompleted
            End If
            Me.InvokeAsync("Signon", New Object() {requestXML}, Me.SignonOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignonOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignonCompleted(Me, New SignonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/WSGetInfo", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WSGetInfo(ByVal requestXML As String) As String
            Dim results() As Object = Me.Invoke("WSGetInfo", New Object() {requestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginWSGetInfo(ByVal requestXML As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WSGetInfo", New Object() {requestXML}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndWSGetInfo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WSGetInfoAsync(ByVal requestXML As String)
            Me.WSGetInfoAsync(requestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WSGetInfoAsync(ByVal requestXML As String, ByVal userState As Object)
            If (Me.WSGetInfoOperationCompleted Is Nothing) Then
                Me.WSGetInfoOperationCompleted = AddressOf Me.OnWSGetInfoOperationCompleted
            End If
            Me.InvokeAsync("WSGetInfo", New Object() {requestXML}, Me.WSGetInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWSGetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WSGetInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WSGetInfoCompleted(Me, New WSGetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("FISERV.IS.PAS.EHPRMR.Runtime.WebService/WSSetInfo", RequestNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", ResponseNamespace:="FISERV.IS.PAS.EHPRMR.Runtime.WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WSSetInfo(ByVal requestXML As String) As String
            Dim results() As Object = Me.Invoke("WSSetInfo", New Object() {requestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginWSSetInfo(ByVal requestXML As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("WSSetInfo", New Object() {requestXML}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndWSSetInfo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WSSetInfoAsync(ByVal requestXML As String)
            Me.WSSetInfoAsync(requestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WSSetInfoAsync(ByVal requestXML As String, ByVal userState As Object)
            If (Me.WSSetInfoOperationCompleted Is Nothing) Then
                Me.WSSetInfoOperationCompleted = AddressOf Me.OnWSSetInfoOperationCompleted
            End If
            Me.InvokeAsync("WSSetInfo", New Object() {requestXML}, Me.WSSetInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWSSetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WSSetInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WSSetInfoCompleted(Me, New WSSetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2001CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2001CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2001CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2002CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2002CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2002CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2003CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2003CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2003CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2004CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2004CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2004CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2005CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2005CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2005CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Event_2100CompletedEventHandler(ByVal sender As Object, ByVal e As Event_2100CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Event_2100CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub PingCompletedEventHandler(ByVal sender As Object, ByVal e As PingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SignoffCompletedEventHandler(ByVal sender As Object, ByVal e As SignoffCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SignoffCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SignonCompletedEventHandler(ByVal sender As Object, ByVal e As SignonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SignonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub WSGetInfoCompletedEventHandler(ByVal sender As Object, ByVal e As WSGetInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WSGetInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub WSSetInfoCompletedEventHandler(ByVal sender As Object, ByVal e As WSSetInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WSSetInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
