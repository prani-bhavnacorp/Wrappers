'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.832.
'
Namespace CCMService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CcmWebServiceSoap", [Namespace]:="http://www.opensolutions.com/CCM/CcmWebService")>  _
    Partial Public Class CcmWebServiceWse
        Inherits Microsoft.Web.Services3.WebServicesClientProtocol
        
        Private credentialsHeaderValueField As CredentialsHeader
        
        Private GetPersonNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMessageStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMessageNodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMultiMessageNodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_CCMService_CcmWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property CredentialsHeaderValue() As CredentialsHeader
            Get
                Return Me.credentialsHeaderValueField
            End Get
            Set
                Me.credentialsHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetPersonNameCompleted As GetPersonNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessCompleted As ProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMessageStringCompleted As ProcessMessageStringCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMessageNodeCompleted As ProcessMessageNodeCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMultiMessageNodeCompleted As ProcessMultiMessageNodeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/GetPersonName", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPersonName(ByVal partyId As String) As String
            Dim results() As Object = Me.Invoke("GetPersonName", New Object() {partyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPersonNameAsync(ByVal partyId As String)
            Me.GetPersonNameAsync(partyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPersonNameAsync(ByVal partyId As String, ByVal userState As Object)
            If (Me.GetPersonNameOperationCompleted Is Nothing) Then
                Me.GetPersonNameOperationCompleted = AddressOf Me.OnGetPersonNameOperationCompleted
            End If
            Me.InvokeAsync("GetPersonName", New Object() {partyId}, Me.GetPersonNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPersonNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPersonNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPersonNameCompleted(Me, New GetPersonNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/Process", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Process(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal request() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("Process", New Object() {request})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessAsync(ByVal request() As Byte)
            Me.ProcessAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessAsync(ByVal request() As Byte, ByVal userState As Object)
            If (Me.ProcessOperationCompleted Is Nothing) Then
                Me.ProcessOperationCompleted = AddressOf Me.OnProcessOperationCompleted
            End If
            Me.InvokeAsync("Process", New Object() {request}, Me.ProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessCompleted(Me, New ProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessMessageString", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMessageString(ByVal request As String) As String
            Dim results() As Object = Me.Invoke("ProcessMessageString", New Object() {request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageStringAsync(ByVal request As String)
            Me.ProcessMessageStringAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageStringAsync(ByVal request As String, ByVal userState As Object)
            If (Me.ProcessMessageStringOperationCompleted Is Nothing) Then
                Me.ProcessMessageStringOperationCompleted = AddressOf Me.OnProcessMessageStringOperationCompleted
            End If
            Me.InvokeAsync("ProcessMessageString", New Object() {request}, Me.ProcessMessageStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMessageStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMessageStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMessageStringCompleted(Me, New ProcessMessageStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessNativeMessage", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMessageNode(ByVal request As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ProcessMessageNode", New Object() {request})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageNodeAsync(ByVal request As System.Xml.XmlNode)
            Me.ProcessMessageNodeAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageNodeAsync(ByVal request As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ProcessMessageNodeOperationCompleted Is Nothing) Then
                Me.ProcessMessageNodeOperationCompleted = AddressOf Me.OnProcessMessageNodeOperationCompleted
            End If
            Me.InvokeAsync("ProcessMessageNode", New Object() {request}, Me.ProcessMessageNodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMessageNodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMessageNodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMessageNodeCompleted(Me, New ProcessMessageNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessNativeMultiMessage", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMultiMessageNode(ByVal request As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ProcessMultiMessageNode", New Object() {request})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMultiMessageNodeAsync(ByVal request As System.Xml.XmlNode)
            Me.ProcessMultiMessageNodeAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMultiMessageNodeAsync(ByVal request As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ProcessMultiMessageNodeOperationCompleted Is Nothing) Then
                Me.ProcessMultiMessageNodeOperationCompleted = AddressOf Me.OnProcessMultiMessageNodeOperationCompleted
            End If
            Me.InvokeAsync("ProcessMultiMessageNode", New Object() {request}, Me.ProcessMultiMessageNodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMultiMessageNodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMultiMessageNodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMultiMessageNodeCompleted(Me, New ProcessMultiMessageNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CcmWebServiceSoap", [Namespace]:="http://www.opensolutions.com/CCM/CcmWebService")>  _
    Partial Public Class CcmWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private credentialsHeaderValueField As CredentialsHeader
        
        Private GetPersonNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMessageStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMessageNodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMultiMessageNodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_CCMService_CcmWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property CredentialsHeaderValue() As CredentialsHeader
            Get
                Return Me.credentialsHeaderValueField
            End Get
            Set
                Me.credentialsHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetPersonNameCompleted As GetPersonNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessCompleted As ProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMessageStringCompleted As ProcessMessageStringCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMessageNodeCompleted As ProcessMessageNodeCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMultiMessageNodeCompleted As ProcessMultiMessageNodeCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/GetPersonName", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPersonName(ByVal partyId As String) As String
            Dim results() As Object = Me.Invoke("GetPersonName", New Object() {partyId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPersonName(ByVal partyId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPersonName", New Object() {partyId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPersonName(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPersonNameAsync(ByVal partyId As String)
            Me.GetPersonNameAsync(partyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPersonNameAsync(ByVal partyId As String, ByVal userState As Object)
            If (Me.GetPersonNameOperationCompleted Is Nothing) Then
                Me.GetPersonNameOperationCompleted = AddressOf Me.OnGetPersonNameOperationCompleted
            End If
            Me.InvokeAsync("GetPersonName", New Object() {partyId}, Me.GetPersonNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPersonNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPersonNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPersonNameCompleted(Me, New GetPersonNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/Process", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Process(<System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal request() As Byte) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("Process", New Object() {request})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BeginProcess(ByVal request() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Process", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcess(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessAsync(ByVal request() As Byte)
            Me.ProcessAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessAsync(ByVal request() As Byte, ByVal userState As Object)
            If (Me.ProcessOperationCompleted Is Nothing) Then
                Me.ProcessOperationCompleted = AddressOf Me.OnProcessOperationCompleted
            End If
            Me.InvokeAsync("Process", New Object() {request}, Me.ProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessCompleted(Me, New ProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessMessageString", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMessageString(ByVal request As String) As String
            Dim results() As Object = Me.Invoke("ProcessMessageString", New Object() {request})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginProcessMessageString(ByVal request As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcessMessageString", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcessMessageString(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageStringAsync(ByVal request As String)
            Me.ProcessMessageStringAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageStringAsync(ByVal request As String, ByVal userState As Object)
            If (Me.ProcessMessageStringOperationCompleted Is Nothing) Then
                Me.ProcessMessageStringOperationCompleted = AddressOf Me.OnProcessMessageStringOperationCompleted
            End If
            Me.InvokeAsync("ProcessMessageString", New Object() {request}, Me.ProcessMessageStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMessageStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMessageStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMessageStringCompleted(Me, New ProcessMessageStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessNativeMessage", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMessageNode(ByVal request As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ProcessMessageNode", New Object() {request})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginProcessMessageNode(ByVal request As System.Xml.XmlNode, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcessMessageNode", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcessMessageNode(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageNodeAsync(ByVal request As System.Xml.XmlNode)
            Me.ProcessMessageNodeAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMessageNodeAsync(ByVal request As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ProcessMessageNodeOperationCompleted Is Nothing) Then
                Me.ProcessMessageNodeOperationCompleted = AddressOf Me.OnProcessMessageNodeOperationCompleted
            End If
            Me.InvokeAsync("ProcessMessageNode", New Object() {request}, Me.ProcessMessageNodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMessageNodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMessageNodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMessageNodeCompleted(Me, New ProcessMessageNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("CredentialsHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.opensolutions.com/CCM/CcmWebService/ProcessNativeMultiMessage", RequestNamespace:="http://www.opensolutions.com/CCM/CcmWebService", ResponseNamespace:="http://www.opensolutions.com/CCM/CcmWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMultiMessageNode(ByVal request As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("ProcessMultiMessageNode", New Object() {request})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Function BeginProcessMultiMessageNode(ByVal request As System.Xml.XmlNode, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcessMultiMessageNode", New Object() {request}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcessMultiMessageNode(ByVal asyncResult As System.IAsyncResult) As System.Xml.XmlNode
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMultiMessageNodeAsync(ByVal request As System.Xml.XmlNode)
            Me.ProcessMultiMessageNodeAsync(request, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMultiMessageNodeAsync(ByVal request As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.ProcessMultiMessageNodeOperationCompleted Is Nothing) Then
                Me.ProcessMultiMessageNodeOperationCompleted = AddressOf Me.OnProcessMultiMessageNodeOperationCompleted
            End If
            Me.InvokeAsync("ProcessMultiMessageNode", New Object() {request}, Me.ProcessMultiMessageNodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMultiMessageNodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMultiMessageNodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMultiMessageNodeCompleted(Me, New ProcessMultiMessageNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.opensolutions.com/CCM/CcmWebService"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://www.opensolutions.com/CCM/CcmWebService", IsNullable:=false)>  _
    Partial Public Class CredentialsHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private facilityField As String
        
        Private cultureIdField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Facility() As String
            Get
                Return Me.facilityField
            End Get
            Set
                Me.facilityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CultureId() As String
            Get
                Return Me.cultureIdField
            End Get
            Set
                Me.cultureIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetPersonNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetPersonNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPersonNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub ProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub ProcessMessageStringCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessMessageStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessMessageStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub ProcessMessageNodeCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessMessageNodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessMessageNodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub ProcessMultiMessageNodeCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessMultiMessageNodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessMultiMessageNodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
End Namespace
