<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 (http://www.altova.com) by Terence L Zimmer (private) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="FisCommonRspHdr" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="FisCommonRspHdr" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="RspHdr" type="tRspHdr"/>	
	<xs:complexType name="tRspHdr">
		<xs:sequence>
			<xs:element name="RspHdrVer">
				<xs:annotation>
					<xs:documentation>Response Header Version.   Currently 2.0.0</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:length value="5"/>
						<xs:enumeration value="2.0.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RtnCde" type="xs:string">
				<xs:annotation>
					<xs:documentation>Return code. Indicates success or failure processing the service request.  MsgLst contains detailed description of informational or error messages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MsgUuid" type="tUuid">
				<xs:annotation>
					<xs:documentation>Tracking Id that was sent in the request header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ActyId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Consumer defined used for tracking purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Lcl" type="tLocale">
				<xs:annotation>
					<xs:documentation>Must follow standard specificed by internationalization project RFC4646.  Format is two letters followed by a dash followed by two letters, example: en-US</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServPrmtrsLst" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ServPrmtrs" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Each ServPrmtrs aggregate represents service parameters for a service  that is a part of a bundled services request.  Ignore otherwise.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="FeId" type="xs:string">
										<xs:annotation>
											<xs:documentation>Financial entity Id</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ServId" type="xs:string">
										<xs:annotation>
											<xs:documentation>Service Identifier</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ServVer" type="xs:string">
										<xs:annotation>
											<xs:documentation>Consumer supplied version number.  Format is major.minor.revision </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ApplId" type="xs:string">
										<xs:annotation>
											<xs:documentation>Application associated with this service request.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DataLnkId" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique ID that is used to associate these paramenters with the corresponding response data.  (Used for bundled service reponses)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="FldLst" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Fld" maxOccurs="unbounded">
													<xs:complexType>
														<xs:sequence>
															<xs:element name="FldNme" type="xs:string"/>
															<xs:element name="FldVal" type="xs:string"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MsgLst" type="tMsgLst" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tFldLst">
		<xs:sequence/>
	</xs:complexType>
	<xs:simpleType name="tLocale">
		<xs:restriction base="xs:string">
			<xs:length value="5"/>
			<xs:pattern value="[a-z]{2}-[A-Z]{2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tMsgLst">
		<xs:annotation>
			<xs:documentation>This is an ordered list of messages that occurred in the service.  The first message in the list was generated by the client-facing service.  Any subsequent messages were generated by any subsystem service(s).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Msg" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="MsgCde" type="xs:string">
							<xs:annotation>
								<xs:documentation>The code uniquely identifying the message.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Typ" type="tMsgType">
							<xs:annotation>
								<xs:documentation>System Error - example:  network connection has been dropped
				Application Error - example:  transactions cannot be processed against closed account
				Validation Error - example:  expiration date falls before start date
				Informational Message - example:  customer address found but is missing zip code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DataLnkId" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique ID that is used to associate this message with the corresponding response data.  (Used for bundled service responses)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MsgLcl" type="tLocale" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Locale of this message. Must follow standard specified by internationalization project RFC4646.  Format is two letters followed by a dash followed by two letters, example: en-US</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Txt" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Text node may contain parameter specifications.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrmtrLst" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Prmtr" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="SpcfrId" type="tSpcfrId">
													<xs:annotation>
														<xs:documentation>Specifies parameter's index in the message.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="PrmtrTyp" type="tPrmtrTyp">
													<xs:annotation>
														<xs:documentation>Specifies whether a parameter is of type Code, Value Code, or Value. Code parameter types represent items defined in a business glossary or data dictionary.  Value Code parameter types are unique codes, each code representing one of acceptable values of a particular business glossary or data dictionary item. Value parameter types represent values.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Cde" type="xs:string">
													<xs:annotation>
														<xs:documentation>Business item code as specified in the Business Glossary. If set to "0", the parameter does not represent any business item</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ValCde" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>If PrmtrTyp element is "Value Code", this field represents one of the acceptable codes of the business item identified by the Cde element.  Ignore otherwise.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Val" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>If PrmtrTyp element is "Value", this field represents a value: if Cde element is not "0", the value of this field is associated with the business item identified by the Cde element.  Ignore if PrmtrTyp is not "Value".</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="tMsgType">
		<xs:annotation>
			<xs:documentation>
				system error - example:  network connection has been dropped
				Application Error - example:  numeric overflow
                Business Logic Error - example:  transactions cannot be processed against closed account
				Validation Error - example:  expiration date falls before start date
                Informational Message - example:  customer address found but is missing zip code</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="System Error"/>
			<xs:enumeration value="Application Error"/>
			<xs:enumeration value="Validation Error"/>
			<xs:enumeration value="Informational Message"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tPrmtrTyp">
		<xs:annotation>
			<xs:documentation>
    Specifies whether a parameter is of type code, value code, or value. Code
    parameters represents items from the Business Glossary. Value code
    parameters are unique codes, each code representing one of acceptable values
    of a particular Business Glossary item. Value parameters represent values.
   </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Code"/>
			<xs:enumeration value="Value"/>
			<xs:enumeration value="Value Code"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tSpcfrId">
		<xs:annotation>
			<xs:documentation>Value between 0 - 99 specifying a place holder with the message template</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="99"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tUuid">
		<xs:restriction base="xs:string">
			<xs:length value="36"/>
			<xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
