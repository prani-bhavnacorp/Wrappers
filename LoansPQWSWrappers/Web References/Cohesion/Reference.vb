'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
'
Namespace Cohesion
    
    '''<remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), _
	 System.Diagnostics.DebuggerStepThroughAttribute(), _
	 System.ComponentModel.DesignerCategoryAttribute("code"), _
	 System.Web.Services.WebServiceBindingAttribute(Name:="CohesionConnectSoap", [Namespace]:="http://fidelityifs.com/webservices")> _
	Partial Public Class CohesionConnect
		Inherits Microsoft.Web.Services3.WebServicesClientProtocol
		'Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

		Private LogonOperationCompleted As System.Threading.SendOrPostCallback

		Private LogoffOperationCompleted As System.Threading.SendOrPostCallback

		Private IsSessionPresentOperationCompleted As System.Threading.SendOrPostCallback

		Private GetHostReplyOperationCompleted As System.Threading.SendOrPostCallback

		Private SessionCreateOperationCompleted As System.Threading.SendOrPostCallback

		Private SessionEndOperationCompleted As System.Threading.SendOrPostCallback

		Private SessionDisconnectOperationCompleted As System.Threading.SendOrPostCallback

		Private SessionGetHostReplyOperationCompleted As System.Threading.SendOrPostCallback

		Private useDefaultCredentialsSetExplicitly As Boolean

		'''<remarks/>
		Public Sub New()
			MyBase.New()
			Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_Cohesion_CohesionConnect
			If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
				Me.UseDefaultCredentials = True
				Me.useDefaultCredentialsSetExplicitly = False
			Else
				Me.useDefaultCredentialsSetExplicitly = True
			End If
		End Sub

		Public Shadows Property Url() As String
			Get
				Return MyBase.Url
			End Get
			Set(value As String)
				If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) _
							AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) _
							AndAlso (Me.IsLocalFileSystemWebService(value) = False)) Then
					MyBase.UseDefaultCredentials = False
				End If
				MyBase.Url = value
			End Set
		End Property

		Public Shadows Property UseDefaultCredentials() As Boolean
			Get
				Return MyBase.UseDefaultCredentials
			End Get
			Set(value As Boolean)
				MyBase.UseDefaultCredentials = value
				Me.useDefaultCredentialsSetExplicitly = True
			End Set
		End Property

		'''<remarks/>
		Public Event LogonCompleted As LogonCompletedEventHandler

		'''<remarks/>
		Public Event LogoffCompleted As LogoffCompletedEventHandler

		'''<remarks/>
		Public Event IsSessionPresentCompleted As IsSessionPresentCompletedEventHandler

		'''<remarks/>
		Public Event GetHostReplyCompleted As GetHostReplyCompletedEventHandler

		'''<remarks/>
		Public Event SessionCreateCompleted As SessionCreateCompletedEventHandler

		'''<remarks/>
		Public Event SessionEndCompleted As SessionEndCompletedEventHandler

		'''<remarks/>
		Public Event SessionDisconnectCompleted As SessionDisconnectCompletedEventHandler

		'''<remarks/>
		Public Event SessionGetHostReplyCompleted As SessionGetHostReplyCompletedEventHandler

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/Logon", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function Logon(ByVal stationName As String, ByVal tellerNbr As String, ByVal pin As String, ByVal cashBoxNbr As String) As String
			Dim results() As Object = Me.Invoke("Logon", New Object() {stationName, tellerNbr, pin, cashBoxNbr})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Function BeginLogon(ByVal stationName As String, ByVal tellerNbr As String, ByVal pin As String, ByVal cashBoxNbr As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("Logon", New Object() {stationName, tellerNbr, pin, cashBoxNbr}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndLogon(ByVal asyncResult As System.IAsyncResult) As String
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub LogonAsync(ByVal stationName As String, ByVal tellerNbr As String, ByVal pin As String, ByVal cashBoxNbr As String)
			Me.LogonAsync(stationName, tellerNbr, pin, cashBoxNbr, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub LogonAsync(ByVal stationName As String, ByVal tellerNbr As String, ByVal pin As String, ByVal cashBoxNbr As String, ByVal userState As Object)
			If (Me.LogonOperationCompleted Is Nothing) Then
				Me.LogonOperationCompleted = AddressOf Me.OnLogonOperationCompleted
			End If
			Me.InvokeAsync("Logon", New Object() {stationName, tellerNbr, pin, cashBoxNbr}, Me.LogonOperationCompleted, userState)
		End Sub

		Private Sub OnLogonOperationCompleted(ByVal arg As Object)
			If (Not (Me.LogonCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent LogonCompleted(Me, New LogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/Logoff", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function Logoff() As Boolean
			Dim results() As Object = Me.Invoke("Logoff", New Object(-1) {})
			Return CType(results(0), Boolean)
		End Function

		'''<remarks/>
		Public Function BeginLogoff(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("Logoff", New Object(-1) {}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndLogoff(ByVal asyncResult As System.IAsyncResult) As Boolean
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), Boolean)
		End Function

		'''<remarks/>
		Public Overloads Sub LogoffAsync()
			Me.LogoffAsync(Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub LogoffAsync(ByVal userState As Object)
			If (Me.LogoffOperationCompleted Is Nothing) Then
				Me.LogoffOperationCompleted = AddressOf Me.OnLogoffOperationCompleted
			End If
			Me.InvokeAsync("Logoff", New Object(-1) {}, Me.LogoffOperationCompleted, userState)
		End Sub

		Private Sub OnLogoffOperationCompleted(ByVal arg As Object)
			If (Not (Me.LogoffCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent LogoffCompleted(Me, New LogoffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/IsSessionPresent", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function IsSessionPresent() As Boolean
			Dim results() As Object = Me.Invoke("IsSessionPresent", New Object(-1) {})
			Return CType(results(0), Boolean)
		End Function

		'''<remarks/>
		Public Function BeginIsSessionPresent(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("IsSessionPresent", New Object(-1) {}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndIsSessionPresent(ByVal asyncResult As System.IAsyncResult) As Boolean
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), Boolean)
		End Function

		'''<remarks/>
		Public Overloads Sub IsSessionPresentAsync()
			Me.IsSessionPresentAsync(Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub IsSessionPresentAsync(ByVal userState As Object)
			If (Me.IsSessionPresentOperationCompleted Is Nothing) Then
				Me.IsSessionPresentOperationCompleted = AddressOf Me.OnIsSessionPresentOperationCompleted
			End If
			Me.InvokeAsync("IsSessionPresent", New Object(-1) {}, Me.IsSessionPresentOperationCompleted, userState)
		End Sub

		Private Sub OnIsSessionPresentOperationCompleted(ByVal arg As Object)
			If (Not (Me.IsSessionPresentCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent IsSessionPresentCompleted(Me, New IsSessionPresentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/GetHostReply", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function GetHostReply(ByVal sTran As String) As String
			Dim results() As Object = Me.Invoke("GetHostReply", New Object() {sTran})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Function BeginGetHostReply(ByVal sTran As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("GetHostReply", New Object() {sTran}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndGetHostReply(ByVal asyncResult As System.IAsyncResult) As String
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub GetHostReplyAsync(ByVal sTran As String)
			Me.GetHostReplyAsync(sTran, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub GetHostReplyAsync(ByVal sTran As String, ByVal userState As Object)
			If (Me.GetHostReplyOperationCompleted Is Nothing) Then
				Me.GetHostReplyOperationCompleted = AddressOf Me.OnGetHostReplyOperationCompleted
			End If
			Me.InvokeAsync("GetHostReply", New Object() {sTran}, Me.GetHostReplyOperationCompleted, userState)
		End Sub

		Private Sub OnGetHostReplyOperationCompleted(ByVal arg As Object)
			If (Not (Me.GetHostReplyCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent GetHostReplyCompleted(Me, New GetHostReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/SessionCreate", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function SessionCreate(ByVal station As MiserStation) As LogonResult
			Dim results() As Object = Me.Invoke("SessionCreate", New Object() {station})
			Return CType(results(0), LogonResult)
		End Function

		'''<remarks/>
		Public Function BeginSessionCreate(ByVal station As MiserStation, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("SessionCreate", New Object() {station}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndSessionCreate(ByVal asyncResult As System.IAsyncResult) As LogonResult
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), LogonResult)
		End Function

		'''<remarks/>
		Public Overloads Sub SessionCreateAsync(ByVal station As MiserStation)
			Me.SessionCreateAsync(station, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionCreateAsync(ByVal station As MiserStation, ByVal userState As Object)
			If (Me.SessionCreateOperationCompleted Is Nothing) Then
				Me.SessionCreateOperationCompleted = AddressOf Me.OnSessionCreateOperationCompleted
			End If
			Me.InvokeAsync("SessionCreate", New Object() {station}, Me.SessionCreateOperationCompleted, userState)
		End Sub

		Private Sub OnSessionCreateOperationCompleted(ByVal arg As Object)
			If (Not (Me.SessionCreateCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent SessionCreateCompleted(Me, New SessionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/SessionEnd", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Sub SessionEnd(ByVal sessionID As String)
			Me.Invoke("SessionEnd", New Object() {sessionID})
		End Sub

		'''<remarks/>
		Public Function BeginSessionEnd(ByVal sessionID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("SessionEnd", New Object() {sessionID}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Sub EndSessionEnd(ByVal asyncResult As System.IAsyncResult)
			Me.EndInvoke(asyncResult)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionEndAsync(ByVal sessionID As String)
			Me.SessionEndAsync(sessionID, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionEndAsync(ByVal sessionID As String, ByVal userState As Object)
			If (Me.SessionEndOperationCompleted Is Nothing) Then
				Me.SessionEndOperationCompleted = AddressOf Me.OnSessionEndOperationCompleted
			End If
			Me.InvokeAsync("SessionEnd", New Object() {sessionID}, Me.SessionEndOperationCompleted, userState)
		End Sub

		Private Sub OnSessionEndOperationCompleted(ByVal arg As Object)
			If (Not (Me.SessionEndCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent SessionEndCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/SessionDisconnect", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Sub SessionDisconnect(ByVal sessionID As String, ByVal inactivateTeller As Boolean)
			Me.Invoke("SessionDisconnect", New Object() {sessionID, inactivateTeller})
		End Sub

		'''<remarks/>
		Public Function BeginSessionDisconnect(ByVal sessionID As String, ByVal inactivateTeller As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("SessionDisconnect", New Object() {sessionID, inactivateTeller}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Sub EndSessionDisconnect(ByVal asyncResult As System.IAsyncResult)
			Me.EndInvoke(asyncResult)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionDisconnectAsync(ByVal sessionID As String, ByVal inactivateTeller As Boolean)
			Me.SessionDisconnectAsync(sessionID, inactivateTeller, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionDisconnectAsync(ByVal sessionID As String, ByVal inactivateTeller As Boolean, ByVal userState As Object)
			If (Me.SessionDisconnectOperationCompleted Is Nothing) Then
				Me.SessionDisconnectOperationCompleted = AddressOf Me.OnSessionDisconnectOperationCompleted
			End If
			Me.InvokeAsync("SessionDisconnect", New Object() {sessionID, inactivateTeller}, Me.SessionDisconnectOperationCompleted, userState)
		End Sub

		Private Sub OnSessionDisconnectOperationCompleted(ByVal arg As Object)
			If (Not (Me.SessionDisconnectCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent SessionDisconnectCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://fidelityifs.com/webservices/SessionGetHostReply", RequestNamespace:="http://fidelityifs.com/webservices", ResponseNamespace:="http://fidelityifs.com/webservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
		Public Function SessionGetHostReply(ByVal sessionID As String, ByVal sTran As String) As String
			Dim results() As Object = Me.Invoke("SessionGetHostReply", New Object() {sessionID, sTran})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Function BeginSessionGetHostReply(ByVal sessionID As String, ByVal sTran As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
			Return Me.BeginInvoke("SessionGetHostReply", New Object() {sessionID, sTran}, callback, asyncState)
		End Function

		'''<remarks/>
		Public Function EndSessionGetHostReply(ByVal asyncResult As System.IAsyncResult) As String
			Dim results() As Object = Me.EndInvoke(asyncResult)
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub SessionGetHostReplyAsync(ByVal sessionID As String, ByVal sTran As String)
			Me.SessionGetHostReplyAsync(sessionID, sTran, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub SessionGetHostReplyAsync(ByVal sessionID As String, ByVal sTran As String, ByVal userState As Object)
			If (Me.SessionGetHostReplyOperationCompleted Is Nothing) Then
				Me.SessionGetHostReplyOperationCompleted = AddressOf Me.OnSessionGetHostReplyOperationCompleted
			End If
			Me.InvokeAsync("SessionGetHostReply", New Object() {sessionID, sTran}, Me.SessionGetHostReplyOperationCompleted, userState)
		End Sub

		Private Sub OnSessionGetHostReplyOperationCompleted(ByVal arg As Object)
			If (Not (Me.SessionGetHostReplyCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent SessionGetHostReplyCompleted(Me, New SessionGetHostReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		Public Shadows Sub CancelAsync(ByVal userState As Object)
			MyBase.CancelAsync(userState)
		End Sub

		Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
			If ((url Is Nothing) _
						OrElse (url Is String.Empty)) Then
				Return False
			End If
			Dim wsUri As System.Uri = New System.Uri(url)
			If ((wsUri.Port >= 1024) _
						AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
				Return True
			End If
			Return False
		End Function
	End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fidelityifs.com/webservices")>  _
    Partial Public Class MiserStation
        
        Private stationNameField As String
        
        Private tellerNumberField As String
        
        Private postingDateField As String
        
        Private dailyVariableDateField As String
        
        Private pinField As String
        
        Private cashBoxNumberField As String
        
        Private beginningCashField As String
        
        '''<remarks/>
        Public Property StationName() As String
            Get
                Return Me.stationNameField
            End Get
            Set
                Me.stationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TellerNumber() As String
            Get
                Return Me.tellerNumberField
            End Get
            Set
                Me.tellerNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostingDate() As String
            Get
                Return Me.postingDateField
            End Get
            Set
                Me.postingDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DailyVariableDate() As String
            Get
                Return Me.dailyVariableDateField
            End Get
            Set
                Me.dailyVariableDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Pin() As String
            Get
                Return Me.pinField
            End Get
            Set
                Me.pinField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CashBoxNumber() As String
            Get
                Return Me.cashBoxNumberField
            End Get
            Set
                Me.cashBoxNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BeginningCash() As String
            Get
                Return Me.beginningCashField
            End Get
            Set
                Me.beginningCashField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://fidelityifs.com/webservices")>  _
    Partial Public Class LogonResult
        
        Private resultField As Boolean
        
        Private tokenField As String
        
        Private messageField As String
        
        '''<remarks/>
        Public Property Result() As Boolean
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Token() As String
            Get
                Return Me.tokenField
            End Get
            Set
                Me.tokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LogonCompletedEventHandler(ByVal sender As Object, ByVal e As LogonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LogoffCompletedEventHandler(ByVal sender As Object, ByVal e As LogoffCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogoffCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub IsSessionPresentCompletedEventHandler(ByVal sender As Object, ByVal e As IsSessionPresentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsSessionPresentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetHostReplyCompletedEventHandler(ByVal sender As Object, ByVal e As GetHostReplyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHostReplyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SessionCreateCompletedEventHandler(ByVal sender As Object, ByVal e As SessionCreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionCreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LogonResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LogonResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SessionEndCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SessionDisconnectCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SessionGetHostReplyCompletedEventHandler(ByVal sender As Object, ByVal e As SessionGetHostReplyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SessionGetHostReplyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
