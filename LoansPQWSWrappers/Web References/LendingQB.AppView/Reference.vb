'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace LendingQB.AppView

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),
	 System.Web.Services.WebServiceBindingAttribute(Name:="AppViewSoap", [Namespace]:="http://www.lendersoffice.com/los/webservices/")>
	Partial Public Class AppViewWse
		Inherits Microsoft.Web.Services3.WebServicesClientProtocol

		Private GetViewLoanUrlOperationCompleted As System.Threading.SendOrPostCallback

		Private GetViewDesktopUrlOperationCompleted As System.Threading.SendOrPostCallback

		Private GetPmlPipelineUrlOperationCompleted As System.Threading.SendOrPostCallback

		Private GetPmlLoanUrlOperationCompleted As System.Threading.SendOrPostCallback

		Private useDefaultCredentialsSetExplicitly As Boolean

		'''<remarks/>
		Public Sub New()
			MyBase.New
			Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_LendingQBAppView_LendingQB_AppView_AppView
			If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
				Me.UseDefaultCredentials = True
				Me.useDefaultCredentialsSetExplicitly = False
			Else
				Me.useDefaultCredentialsSetExplicitly = True
			End If
		End Sub

		Public Shadows Property Url() As String
			Get
				Return MyBase.Url
			End Get
			Set
				If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) _
							AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) _
							AndAlso (Me.IsLocalFileSystemWebService(Value) = False)) Then
					MyBase.UseDefaultCredentials = False
				End If
				MyBase.Url = Value
			End Set
		End Property

		Public Shadows Property UseDefaultCredentials() As Boolean
			Get
				Return MyBase.UseDefaultCredentials
			End Get
			Set
				MyBase.UseDefaultCredentials = Value
				Me.useDefaultCredentialsSetExplicitly = True
			End Set
		End Property

		'''<remarks/>
		Public Event GetViewLoanUrlCompleted As GetViewLoanUrlCompletedEventHandler

		'''<remarks/>
		Public Event GetViewDesktopUrlCompleted As GetViewDesktopUrlCompletedEventHandler

		'''<remarks/>
		Public Event GetPmlPipelineUrlCompleted As GetPmlPipelineUrlCompletedEventHandler

		'''<remarks/>
		Public Event GetPmlLoanUrlCompleted As GetPmlLoanUrlCompletedEventHandler

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lendersoffice.com/los/webservices/GetViewLoanUrl", RequestNamespace:="http://www.lendersoffice.com/los/webservices/", ResponseNamespace:="http://www.lendersoffice.com/los/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
		Public Function GetViewLoanUrl(ByVal sTicket As String, ByVal sLoanName As String) As String
			Dim results() As Object = Me.Invoke("GetViewLoanUrl", New Object() {sTicket, sLoanName})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub GetViewLoanUrlAsync(ByVal sTicket As String, ByVal sLoanName As String)
			Me.GetViewLoanUrlAsync(sTicket, sLoanName, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub GetViewLoanUrlAsync(ByVal sTicket As String, ByVal sLoanName As String, ByVal userState As Object)
			If (Me.GetViewLoanUrlOperationCompleted Is Nothing) Then
				Me.GetViewLoanUrlOperationCompleted = AddressOf Me.OnGetViewLoanUrlOperationCompleted
			End If
			Me.InvokeAsync("GetViewLoanUrl", New Object() {sTicket, sLoanName}, Me.GetViewLoanUrlOperationCompleted, userState)
		End Sub

		Private Sub OnGetViewLoanUrlOperationCompleted(ByVal arg As Object)
			If (Not (Me.GetViewLoanUrlCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent GetViewLoanUrlCompleted(Me, New GetViewLoanUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lendersoffice.com/los/webservices/GetViewDesktopUrl", RequestNamespace:="http://www.lendersoffice.com/los/webservices/", ResponseNamespace:="http://www.lendersoffice.com/los/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
		Public Function GetViewDesktopUrl(ByVal sTicket As String) As String
			Dim results() As Object = Me.Invoke("GetViewDesktopUrl", New Object() {sTicket})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub GetViewDesktopUrlAsync(ByVal sTicket As String)
			Me.GetViewDesktopUrlAsync(sTicket, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub GetViewDesktopUrlAsync(ByVal sTicket As String, ByVal userState As Object)
			If (Me.GetViewDesktopUrlOperationCompleted Is Nothing) Then
				Me.GetViewDesktopUrlOperationCompleted = AddressOf Me.OnGetViewDesktopUrlOperationCompleted
			End If
			Me.InvokeAsync("GetViewDesktopUrl", New Object() {sTicket}, Me.GetViewDesktopUrlOperationCompleted, userState)
		End Sub

		Private Sub OnGetViewDesktopUrlOperationCompleted(ByVal arg As Object)
			If (Not (Me.GetViewDesktopUrlCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent GetViewDesktopUrlCompleted(Me, New GetViewDesktopUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lendersoffice.com/los/webservices/GetPmlPipelineUrl", RequestNamespace:="http://www.lendersoffice.com/los/webservices/", ResponseNamespace:="http://www.lendersoffice.com/los/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
		Public Function GetPmlPipelineUrl(ByVal sTicket As String) As String
			Dim results() As Object = Me.Invoke("GetPmlPipelineUrl", New Object() {sTicket})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub GetPmlPipelineUrlAsync(ByVal sTicket As String)
			Me.GetPmlPipelineUrlAsync(sTicket, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub GetPmlPipelineUrlAsync(ByVal sTicket As String, ByVal userState As Object)
			If (Me.GetPmlPipelineUrlOperationCompleted Is Nothing) Then
				Me.GetPmlPipelineUrlOperationCompleted = AddressOf Me.OnGetPmlPipelineUrlOperationCompleted
			End If
			Me.InvokeAsync("GetPmlPipelineUrl", New Object() {sTicket}, Me.GetPmlPipelineUrlOperationCompleted, userState)
		End Sub

		Private Sub OnGetPmlPipelineUrlOperationCompleted(ByVal arg As Object)
			If (Not (Me.GetPmlPipelineUrlCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent GetPmlPipelineUrlCompleted(Me, New GetPmlPipelineUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		<System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.lendersoffice.com/los/webservices/GetPmlLoanUrl", RequestNamespace:="http://www.lendersoffice.com/los/webservices/", ResponseNamespace:="http://www.lendersoffice.com/los/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
		Public Function GetPmlLoanUrl(ByVal sTicket As String, ByVal sLoanName As String) As String
			Dim results() As Object = Me.Invoke("GetPmlLoanUrl", New Object() {sTicket, sLoanName})
			Return CType(results(0), String)
		End Function

		'''<remarks/>
		Public Overloads Sub GetPmlLoanUrlAsync(ByVal sTicket As String, ByVal sLoanName As String)
			Me.GetPmlLoanUrlAsync(sTicket, sLoanName, Nothing)
		End Sub

		'''<remarks/>
		Public Overloads Sub GetPmlLoanUrlAsync(ByVal sTicket As String, ByVal sLoanName As String, ByVal userState As Object)
			If (Me.GetPmlLoanUrlOperationCompleted Is Nothing) Then
				Me.GetPmlLoanUrlOperationCompleted = AddressOf Me.OnGetPmlLoanUrlOperationCompleted
			End If
			Me.InvokeAsync("GetPmlLoanUrl", New Object() {sTicket, sLoanName}, Me.GetPmlLoanUrlOperationCompleted, userState)
		End Sub

		Private Sub OnGetPmlLoanUrlOperationCompleted(ByVal arg As Object)
			If (Not (Me.GetPmlLoanUrlCompletedEvent) Is Nothing) Then
				Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
				RaiseEvent GetPmlLoanUrlCompleted(Me, New GetPmlLoanUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
			End If
		End Sub

		'''<remarks/>
		Public Shadows Sub CancelAsync(ByVal userState As Object)
			MyBase.CancelAsync(userState)
		End Sub

		Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
			If ((url Is Nothing) _
						OrElse (url Is String.Empty)) Then
				Return False
			End If
			Dim wsUri As System.Uri = New System.Uri(url)
			If ((wsUri.Port >= 1024) _
						AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
				Return True
			End If
			Return False
		End Function
	End Class

	'''<remarks/>
	<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetViewLoanUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetViewLoanUrlCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetViewLoanUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetViewDesktopUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetViewDesktopUrlCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetViewDesktopUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetPmlPipelineUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetPmlPipelineUrlCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPmlPipelineUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetPmlLoanUrlCompletedEventHandler(ByVal sender As Object, ByVal e As GetPmlLoanUrlCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPmlLoanUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
