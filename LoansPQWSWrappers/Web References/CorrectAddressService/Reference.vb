'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3603
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
'
Namespace CorrectAddressService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CorrectAddressWebServiceSoap", [Namespace]:="http://www.intelligentsearch.com/HostedWebServices/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CorrectAddress))>  _
    Partial Public Class CorrectAddressWebServiceWse
        Inherits Microsoft.Web.Services3.WebServicesClientProtocol
        
        Private wsGetAccountInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetAccountAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsCreateBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsDeleteBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetBatchListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetPS3553formOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindCityStateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindCityCountyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindZipCityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsCorrectAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsTigerCAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsStreetSearch2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_CorrectAddressService_CorrectAddressWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event wsGetAccountInfoCompleted As wsGetAccountInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetAccountAccessCompleted As wsGetAccountAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event wsCreateBatchCompleted As wsCreateBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event wsDeleteBatchCompleted As wsDeleteBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetBatchListCompleted As wsGetBatchListCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetPS3553formCompleted As wsGetPS3553formCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindCityStateCompleted As wsFindCityStateCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindCityCountyCompleted As wsFindCityCountyCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindZipCityCompleted As wsFindZipCityCompletedEventHandler
        
        '''<remarks/>
        Public Event wsCorrectACompleted As wsCorrectACompletedEventHandler
        
        '''<remarks/>
        Public Event wsTigerCACompleted As wsTigerCACompletedEventHandler
        
        '''<remarks/>
        Public Event wsStreetSearch2Completed As wsStreetSearch2CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetAccountInfo", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetAccountInfo(ByVal username As String, ByVal password As String) As WsAccountInfo
            Dim results() As Object = Me.Invoke("wsGetAccountInfo", New Object() {username, password})
            Return CType(results(0),WsAccountInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountInfoAsync(ByVal username As String, ByVal password As String)
            Me.wsGetAccountInfoAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountInfoAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetAccountInfoOperationCompleted Is Nothing) Then
                Me.wsGetAccountInfoOperationCompleted = AddressOf Me.OnwsGetAccountInfoOperationCompleted
            End If
            Me.InvokeAsync("wsGetAccountInfo", New Object() {username, password}, Me.wsGetAccountInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetAccountInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetAccountInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetAccountInfoCompleted(Me, New wsGetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetAccountAccess", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetAccountAccess(ByVal username As String, ByVal password As String) As WsAccountAccess
            Dim results() As Object = Me.Invoke("wsGetAccountAccess", New Object() {username, password})
            Return CType(results(0),WsAccountAccess)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountAccessAsync(ByVal username As String, ByVal password As String)
            Me.wsGetAccountAccessAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountAccessAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetAccountAccessOperationCompleted Is Nothing) Then
                Me.wsGetAccountAccessOperationCompleted = AddressOf Me.OnwsGetAccountAccessOperationCompleted
            End If
            Me.InvokeAsync("wsGetAccountAccess", New Object() {username, password}, Me.wsGetAccountAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetAccountAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetAccountAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetAccountAccessCompleted(Me, New wsGetAccountAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsCreateBatch", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsCreateBatch(ByVal username As String, ByVal password As String, ByVal batchname As String) As Boolean
            Dim results() As Object = Me.Invoke("wsCreateBatch", New Object() {username, password, batchname})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsCreateBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsCreateBatchAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsCreateBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsCreateBatchOperationCompleted Is Nothing) Then
                Me.wsCreateBatchOperationCompleted = AddressOf Me.OnwsCreateBatchOperationCompleted
            End If
            Me.InvokeAsync("wsCreateBatch", New Object() {username, password, batchname}, Me.wsCreateBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsCreateBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsCreateBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsCreateBatchCompleted(Me, New wsCreateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsDeleteBatch", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsDeleteBatch(ByVal username As String, ByVal password As String, ByVal batchname As String) As Boolean
            Dim results() As Object = Me.Invoke("wsDeleteBatch", New Object() {username, password, batchname})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsDeleteBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsDeleteBatchAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsDeleteBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsDeleteBatchOperationCompleted Is Nothing) Then
                Me.wsDeleteBatchOperationCompleted = AddressOf Me.OnwsDeleteBatchOperationCompleted
            End If
            Me.InvokeAsync("wsDeleteBatch", New Object() {username, password, batchname}, Me.wsDeleteBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsDeleteBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsDeleteBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsDeleteBatchCompleted(Me, New wsDeleteBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetBatchList", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetBatchList(ByVal username As String, ByVal password As String) As String()
            Dim results() As Object = Me.Invoke("wsGetBatchList", New Object() {username, password})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetBatchListAsync(ByVal username As String, ByVal password As String)
            Me.wsGetBatchListAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetBatchListAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetBatchListOperationCompleted Is Nothing) Then
                Me.wsGetBatchListOperationCompleted = AddressOf Me.OnwsGetBatchListOperationCompleted
            End If
            Me.InvokeAsync("wsGetBatchList", New Object() {username, password}, Me.wsGetBatchListOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetBatchListOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetBatchListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetBatchListCompleted(Me, New wsGetBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetPS3553form", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetPS3553form(ByVal username As String, ByVal password As String, ByVal batchname As String) As WsPS3553
            Dim results() As Object = Me.Invoke("wsGetPS3553form", New Object() {username, password, batchname})
            Return CType(results(0),WsPS3553)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetPS3553formAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsGetPS3553formAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetPS3553formAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsGetPS3553formOperationCompleted Is Nothing) Then
                Me.wsGetPS3553formOperationCompleted = AddressOf Me.OnwsGetPS3553formOperationCompleted
            End If
            Me.InvokeAsync("wsGetPS3553form", New Object() {username, password, batchname}, Me.wsGetPS3553formOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetPS3553formOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetPS3553formCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetPS3553formCompleted(Me, New wsGetPS3553formCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindCityState", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindCityState(ByVal username As String, ByVal password As String, ByVal zip As String) As WsCityState()
            Dim results() As Object = Me.Invoke("wsFindCityState", New Object() {username, password, zip})
            Return CType(results(0),WsCityState())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindCityStateAsync(ByVal username As String, ByVal password As String, ByVal zip As String)
            Me.wsFindCityStateAsync(username, password, zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindCityStateAsync(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal userState As Object)
            If (Me.wsFindCityStateOperationCompleted Is Nothing) Then
                Me.wsFindCityStateOperationCompleted = AddressOf Me.OnwsFindCityStateOperationCompleted
            End If
            Me.InvokeAsync("wsFindCityState", New Object() {username, password, zip}, Me.wsFindCityStateOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindCityStateOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindCityStateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindCityStateCompleted(Me, New wsFindCityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindCityCounty", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindCityCounty(ByVal username As String, ByVal password As String, ByVal zip As String) As WsCityCounty
            Dim results() As Object = Me.Invoke("wsFindCityCounty", New Object() {username, password, zip})
            Return CType(results(0),WsCityCounty)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindCityCountyAsync(ByVal username As String, ByVal password As String, ByVal zip As String)
            Me.wsFindCityCountyAsync(username, password, zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindCityCountyAsync(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal userState As Object)
            If (Me.wsFindCityCountyOperationCompleted Is Nothing) Then
                Me.wsFindCityCountyOperationCompleted = AddressOf Me.OnwsFindCityCountyOperationCompleted
            End If
            Me.InvokeAsync("wsFindCityCounty", New Object() {username, password, zip}, Me.wsFindCityCountyOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindCityCountyOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindCityCountyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindCityCountyCompleted(Me, New wsFindCityCountyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindZipCity", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindZipCity(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String) As WsZipCity()
            Dim results() As Object = Me.Invoke("wsFindZipCity", New Object() {username, password, city, state})
            Return CType(results(0),WsZipCity())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindZipCityAsync(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String)
            Me.wsFindZipCityAsync(username, password, city, state, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindZipCityAsync(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String, ByVal userState As Object)
            If (Me.wsFindZipCityOperationCompleted Is Nothing) Then
                Me.wsFindZipCityOperationCompleted = AddressOf Me.OnwsFindZipCityOperationCompleted
            End If
            Me.InvokeAsync("wsFindZipCity", New Object() {username, password, city, state}, Me.wsFindZipCityOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindZipCityOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindZipCityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindZipCityCompleted(Me, New wsFindZipCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsCorrectA", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsCorrectA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String) As WsCorrectAddress()
            Dim results() As Object = Me.Invoke("wsCorrectA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname})
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsCorrectAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String)
            Me.wsCorrectAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsCorrectAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsCorrectAOperationCompleted Is Nothing) Then
                Me.wsCorrectAOperationCompleted = AddressOf Me.OnwsCorrectAOperationCompleted
            End If
            Me.InvokeAsync("wsCorrectA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, Me.wsCorrectAOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsCorrectAOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsCorrectACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsCorrectACompleted(Me, New wsCorrectACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsTigerCA", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsTigerCA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String) As WsCorrectAddress()
            Dim results() As Object = Me.Invoke("wsTigerCA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname})
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsTigerCAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String)
            Me.wsTigerCAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsTigerCAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsTigerCAOperationCompleted Is Nothing) Then
                Me.wsTigerCAOperationCompleted = AddressOf Me.OnwsTigerCAOperationCompleted
            End If
            Me.InvokeAsync("wsTigerCA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, Me.wsTigerCAOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsTigerCAOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsTigerCACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsTigerCACompleted(Me, New wsTigerCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsStreetSearch2", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsStreetSearch2(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String) As WsStreetSearch()
            Dim results() As Object = Me.Invoke("wsStreetSearch2", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip})
            Return CType(results(0),WsStreetSearch())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsStreetSearch2Async(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String)
            Me.wsStreetSearch2Async(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsStreetSearch2Async(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal userState As Object)
            If (Me.wsStreetSearch2OperationCompleted Is Nothing) Then
                Me.wsStreetSearch2OperationCompleted = AddressOf Me.OnwsStreetSearch2OperationCompleted
            End If
            Me.InvokeAsync("wsStreetSearch2", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip}, Me.wsStreetSearch2OperationCompleted, userState)
        End Sub
        
        Private Sub OnwsStreetSearch2OperationCompleted(ByVal arg As Object)
            If (Not (Me.wsStreetSearch2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsStreetSearch2Completed(Me, New wsStreetSearch2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CorrectAddressWebServiceSoap", [Namespace]:="http://www.intelligentsearch.com/HostedWebServices/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(CorrectAddress))>  _
    Partial Public Class CorrectAddressWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private wsGetAccountInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetAccountAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsCreateBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsDeleteBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetBatchListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsGetPS3553formOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindCityStateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindCityCountyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsFindZipCityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsCorrectAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsTigerCAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private wsStreetSearch2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWSWrappers_CorrectAddressService_CorrectAddressWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event wsGetAccountInfoCompleted As wsGetAccountInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetAccountAccessCompleted As wsGetAccountAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event wsCreateBatchCompleted As wsCreateBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event wsDeleteBatchCompleted As wsDeleteBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetBatchListCompleted As wsGetBatchListCompletedEventHandler
        
        '''<remarks/>
        Public Event wsGetPS3553formCompleted As wsGetPS3553formCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindCityStateCompleted As wsFindCityStateCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindCityCountyCompleted As wsFindCityCountyCompletedEventHandler
        
        '''<remarks/>
        Public Event wsFindZipCityCompleted As wsFindZipCityCompletedEventHandler
        
        '''<remarks/>
        Public Event wsCorrectACompleted As wsCorrectACompletedEventHandler
        
        '''<remarks/>
        Public Event wsTigerCACompleted As wsTigerCACompletedEventHandler
        
        '''<remarks/>
        Public Event wsStreetSearch2Completed As wsStreetSearch2CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetAccountInfo", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetAccountInfo(ByVal username As String, ByVal password As String) As WsAccountInfo
            Dim results() As Object = Me.Invoke("wsGetAccountInfo", New Object() {username, password})
            Return CType(results(0),WsAccountInfo)
        End Function
        
        '''<remarks/>
        Public Function BeginwsGetAccountInfo(ByVal username As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsGetAccountInfo", New Object() {username, password}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsGetAccountInfo(ByVal asyncResult As System.IAsyncResult) As WsAccountInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsAccountInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountInfoAsync(ByVal username As String, ByVal password As String)
            Me.wsGetAccountInfoAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountInfoAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetAccountInfoOperationCompleted Is Nothing) Then
                Me.wsGetAccountInfoOperationCompleted = AddressOf Me.OnwsGetAccountInfoOperationCompleted
            End If
            Me.InvokeAsync("wsGetAccountInfo", New Object() {username, password}, Me.wsGetAccountInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetAccountInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetAccountInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetAccountInfoCompleted(Me, New wsGetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetAccountAccess", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetAccountAccess(ByVal username As String, ByVal password As String) As WsAccountAccess
            Dim results() As Object = Me.Invoke("wsGetAccountAccess", New Object() {username, password})
            Return CType(results(0),WsAccountAccess)
        End Function
        
        '''<remarks/>
        Public Function BeginwsGetAccountAccess(ByVal username As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsGetAccountAccess", New Object() {username, password}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsGetAccountAccess(ByVal asyncResult As System.IAsyncResult) As WsAccountAccess
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsAccountAccess)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountAccessAsync(ByVal username As String, ByVal password As String)
            Me.wsGetAccountAccessAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetAccountAccessAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetAccountAccessOperationCompleted Is Nothing) Then
                Me.wsGetAccountAccessOperationCompleted = AddressOf Me.OnwsGetAccountAccessOperationCompleted
            End If
            Me.InvokeAsync("wsGetAccountAccess", New Object() {username, password}, Me.wsGetAccountAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetAccountAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetAccountAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetAccountAccessCompleted(Me, New wsGetAccountAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsCreateBatch", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsCreateBatch(ByVal username As String, ByVal password As String, ByVal batchname As String) As Boolean
            Dim results() As Object = Me.Invoke("wsCreateBatch", New Object() {username, password, batchname})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginwsCreateBatch(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsCreateBatch", New Object() {username, password, batchname}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsCreateBatch(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsCreateBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsCreateBatchAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsCreateBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsCreateBatchOperationCompleted Is Nothing) Then
                Me.wsCreateBatchOperationCompleted = AddressOf Me.OnwsCreateBatchOperationCompleted
            End If
            Me.InvokeAsync("wsCreateBatch", New Object() {username, password, batchname}, Me.wsCreateBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsCreateBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsCreateBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsCreateBatchCompleted(Me, New wsCreateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsDeleteBatch", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsDeleteBatch(ByVal username As String, ByVal password As String, ByVal batchname As String) As Boolean
            Dim results() As Object = Me.Invoke("wsDeleteBatch", New Object() {username, password, batchname})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginwsDeleteBatch(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsDeleteBatch", New Object() {username, password, batchname}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsDeleteBatch(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsDeleteBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsDeleteBatchAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsDeleteBatchAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsDeleteBatchOperationCompleted Is Nothing) Then
                Me.wsDeleteBatchOperationCompleted = AddressOf Me.OnwsDeleteBatchOperationCompleted
            End If
            Me.InvokeAsync("wsDeleteBatch", New Object() {username, password, batchname}, Me.wsDeleteBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsDeleteBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsDeleteBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsDeleteBatchCompleted(Me, New wsDeleteBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetBatchList", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetBatchList(ByVal username As String, ByVal password As String) As String()
            Dim results() As Object = Me.Invoke("wsGetBatchList", New Object() {username, password})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginwsGetBatchList(ByVal username As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsGetBatchList", New Object() {username, password}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsGetBatchList(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetBatchListAsync(ByVal username As String, ByVal password As String)
            Me.wsGetBatchListAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetBatchListAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.wsGetBatchListOperationCompleted Is Nothing) Then
                Me.wsGetBatchListOperationCompleted = AddressOf Me.OnwsGetBatchListOperationCompleted
            End If
            Me.InvokeAsync("wsGetBatchList", New Object() {username, password}, Me.wsGetBatchListOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetBatchListOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetBatchListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetBatchListCompleted(Me, New wsGetBatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsGetPS3553form", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsGetPS3553form(ByVal username As String, ByVal password As String, ByVal batchname As String) As WsPS3553
            Dim results() As Object = Me.Invoke("wsGetPS3553form", New Object() {username, password, batchname})
            Return CType(results(0),WsPS3553)
        End Function
        
        '''<remarks/>
        Public Function BeginwsGetPS3553form(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsGetPS3553form", New Object() {username, password, batchname}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsGetPS3553form(ByVal asyncResult As System.IAsyncResult) As WsPS3553
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsPS3553)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsGetPS3553formAsync(ByVal username As String, ByVal password As String, ByVal batchname As String)
            Me.wsGetPS3553formAsync(username, password, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsGetPS3553formAsync(ByVal username As String, ByVal password As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsGetPS3553formOperationCompleted Is Nothing) Then
                Me.wsGetPS3553formOperationCompleted = AddressOf Me.OnwsGetPS3553formOperationCompleted
            End If
            Me.InvokeAsync("wsGetPS3553form", New Object() {username, password, batchname}, Me.wsGetPS3553formOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsGetPS3553formOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsGetPS3553formCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsGetPS3553formCompleted(Me, New wsGetPS3553formCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindCityState", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindCityState(ByVal username As String, ByVal password As String, ByVal zip As String) As WsCityState()
            Dim results() As Object = Me.Invoke("wsFindCityState", New Object() {username, password, zip})
            Return CType(results(0),WsCityState())
        End Function
        
        '''<remarks/>
        Public Function BeginwsFindCityState(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsFindCityState", New Object() {username, password, zip}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsFindCityState(ByVal asyncResult As System.IAsyncResult) As WsCityState()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsCityState())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindCityStateAsync(ByVal username As String, ByVal password As String, ByVal zip As String)
            Me.wsFindCityStateAsync(username, password, zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindCityStateAsync(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal userState As Object)
            If (Me.wsFindCityStateOperationCompleted Is Nothing) Then
                Me.wsFindCityStateOperationCompleted = AddressOf Me.OnwsFindCityStateOperationCompleted
            End If
            Me.InvokeAsync("wsFindCityState", New Object() {username, password, zip}, Me.wsFindCityStateOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindCityStateOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindCityStateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindCityStateCompleted(Me, New wsFindCityStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindCityCounty", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindCityCounty(ByVal username As String, ByVal password As String, ByVal zip As String) As WsCityCounty
            Dim results() As Object = Me.Invoke("wsFindCityCounty", New Object() {username, password, zip})
            Return CType(results(0),WsCityCounty)
        End Function
        
        '''<remarks/>
        Public Function BeginwsFindCityCounty(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsFindCityCounty", New Object() {username, password, zip}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsFindCityCounty(ByVal asyncResult As System.IAsyncResult) As WsCityCounty
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsCityCounty)
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindCityCountyAsync(ByVal username As String, ByVal password As String, ByVal zip As String)
            Me.wsFindCityCountyAsync(username, password, zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindCityCountyAsync(ByVal username As String, ByVal password As String, ByVal zip As String, ByVal userState As Object)
            If (Me.wsFindCityCountyOperationCompleted Is Nothing) Then
                Me.wsFindCityCountyOperationCompleted = AddressOf Me.OnwsFindCityCountyOperationCompleted
            End If
            Me.InvokeAsync("wsFindCityCounty", New Object() {username, password, zip}, Me.wsFindCityCountyOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindCityCountyOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindCityCountyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindCityCountyCompleted(Me, New wsFindCityCountyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsFindZipCity", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsFindZipCity(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String) As WsZipCity()
            Dim results() As Object = Me.Invoke("wsFindZipCity", New Object() {username, password, city, state})
            Return CType(results(0),WsZipCity())
        End Function
        
        '''<remarks/>
        Public Function BeginwsFindZipCity(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsFindZipCity", New Object() {username, password, city, state}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsFindZipCity(ByVal asyncResult As System.IAsyncResult) As WsZipCity()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsZipCity())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsFindZipCityAsync(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String)
            Me.wsFindZipCityAsync(username, password, city, state, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsFindZipCityAsync(ByVal username As String, ByVal password As String, ByVal city As String, ByVal state As String, ByVal userState As Object)
            If (Me.wsFindZipCityOperationCompleted Is Nothing) Then
                Me.wsFindZipCityOperationCompleted = AddressOf Me.OnwsFindZipCityOperationCompleted
            End If
            Me.InvokeAsync("wsFindZipCity", New Object() {username, password, city, state}, Me.wsFindZipCityOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsFindZipCityOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsFindZipCityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsFindZipCityCompleted(Me, New wsFindZipCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsCorrectA", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsCorrectA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String) As WsCorrectAddress()
            Dim results() As Object = Me.Invoke("wsCorrectA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname})
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Function BeginwsCorrectA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsCorrectA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsCorrectA(ByVal asyncResult As System.IAsyncResult) As WsCorrectAddress()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsCorrectAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String)
            Me.wsCorrectAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsCorrectAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsCorrectAOperationCompleted Is Nothing) Then
                Me.wsCorrectAOperationCompleted = AddressOf Me.OnwsCorrectAOperationCompleted
            End If
            Me.InvokeAsync("wsCorrectA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, Me.wsCorrectAOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsCorrectAOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsCorrectACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsCorrectACompleted(Me, New wsCorrectACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsTigerCA", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsTigerCA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String) As WsCorrectAddress()
            Dim results() As Object = Me.Invoke("wsTigerCA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname})
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Function BeginwsTigerCA(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsTigerCA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsTigerCA(ByVal asyncResult As System.IAsyncResult) As WsCorrectAddress()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsCorrectAddress())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsTigerCAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String)
            Me.wsTigerCAAsync(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsTigerCAAsync(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal ca_codes As String, ByVal ca_filler As String, ByVal batchname As String, ByVal userState As Object)
            If (Me.wsTigerCAOperationCompleted Is Nothing) Then
                Me.wsTigerCAOperationCompleted = AddressOf Me.OnwsTigerCAOperationCompleted
            End If
            Me.InvokeAsync("wsTigerCA", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, ca_codes, ca_filler, batchname}, Me.wsTigerCAOperationCompleted, userState)
        End Sub
        
        Private Sub OnwsTigerCAOperationCompleted(ByVal arg As Object)
            If (Not (Me.wsTigerCACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsTigerCACompleted(Me, New wsTigerCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.intelligentsearch.com/HostedWebServices/wsStreetSearch2", RequestNamespace:="http://www.intelligentsearch.com/HostedWebServices/", ResponseNamespace:="http://www.intelligentsearch.com/HostedWebServices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function wsStreetSearch2(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String) As WsStreetSearch()
            Dim results() As Object = Me.Invoke("wsStreetSearch2", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip})
            Return CType(results(0),WsStreetSearch())
        End Function
        
        '''<remarks/>
        Public Function BeginwsStreetSearch2(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("wsStreetSearch2", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndwsStreetSearch2(ByVal asyncResult As System.IAsyncResult) As WsStreetSearch()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),WsStreetSearch())
        End Function
        
        '''<remarks/>
        Public Overloads Sub wsStreetSearch2Async(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String)
            Me.wsStreetSearch2Async(username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub wsStreetSearch2Async(ByVal username As String, ByVal password As String, ByVal firmname As String, ByVal urbanization As String, ByVal delivery_line_1 As String, ByVal delivery_line_2 As String, ByVal city_state_zip As String, ByVal userState As Object)
            If (Me.wsStreetSearch2OperationCompleted Is Nothing) Then
                Me.wsStreetSearch2OperationCompleted = AddressOf Me.OnwsStreetSearch2OperationCompleted
            End If
            Me.InvokeAsync("wsStreetSearch2", New Object() {username, password, firmname, urbanization, delivery_line_1, delivery_line_2, city_state_zip}, Me.wsStreetSearch2OperationCompleted, userState)
        End Sub
        
        Private Sub OnwsStreetSearch2OperationCompleted(ByVal arg As Object)
            If (Not (Me.wsStreetSearch2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent wsStreetSearch2Completed(Me, New wsStreetSearch2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsAccountInfo
        
        Private searchesLeftField As Integer
        
        Private returnCodeField As Integer
        
        '''<remarks/>
        Public Property SearchesLeft() As Integer
            Get
                Return Me.searchesLeftField
            End Get
            Set
                Me.searchesLeftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnCode() As Integer
            Get
                Return Me.returnCodeField
            End Get
            Set
                Me.returnCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsStreetSearch
        
        Private streetNumberField As String
        
        Private preDirectionalField As String
        
        Private streetNameField As String
        
        Private streetSuffixField As String
        
        Private postDirectionalField As String
        
        Private secondaryDesignationField As String
        
        Private secondaryNumberField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipAddonField As String
        
        Private zipField As String
        
        Private addonField As String
        
        Private recordTypeField As String
        
        Private carrierRouteField As String
        
        Private firmRecipientField As String
        
        Private urbanizationField As String
        
        Private financeNumberField As String
        
        Private errorDescField As String
        
        Private searchesLeftField As Integer
        
        Private scoreField As String
        
        '''<remarks/>
        Public Property StreetNumber() As String
            Get
                Return Me.streetNumberField
            End Get
            Set
                Me.streetNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreDirectional() As String
            Get
                Return Me.preDirectionalField
            End Get
            Set
                Me.preDirectionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetName() As String
            Get
                Return Me.streetNameField
            End Get
            Set
                Me.streetNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetSuffix() As String
            Get
                Return Me.streetSuffixField
            End Get
            Set
                Me.streetSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostDirectional() As String
            Get
                Return Me.postDirectionalField
            End Get
            Set
                Me.postDirectionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecondaryDesignation() As String
            Get
                Return Me.secondaryDesignationField
            End Get
            Set
                Me.secondaryDesignationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecondaryNumber() As String
            Get
                Return Me.secondaryNumberField
            End Get
            Set
                Me.secondaryNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZipAddon() As String
            Get
                Return Me.zipAddonField
            End Get
            Set
                Me.zipAddonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addon() As String
            Get
                Return Me.addonField
            End Get
            Set
                Me.addonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecordType() As String
            Get
                Return Me.recordTypeField
            End Get
            Set
                Me.recordTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarrierRoute() As String
            Get
                Return Me.carrierRouteField
            End Get
            Set
                Me.carrierRouteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirmRecipient() As String
            Get
                Return Me.firmRecipientField
            End Get
            Set
                Me.firmRecipientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Urbanization() As String
            Get
                Return Me.urbanizationField
            End Get
            Set
                Me.urbanizationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FinanceNumber() As String
            Get
                Return Me.financeNumberField
            End Get
            Set
                Me.financeNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchesLeft() As Integer
            Get
                Return Me.searchesLeftField
            End Get
            Set
                Me.searchesLeftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Score() As String
            Get
                Return Me.scoreField
            End Get
            Set
                Me.scoreField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(WsCorrectAddress)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class CorrectAddress
        
        Private streetNumberField As String
        
        Private preDirectionalField As String
        
        Private streetNameField As String
        
        Private streetSuffixField As String
        
        Private postDirectionalField As String
        
        Private secondaryDesignationField As String
        
        Private secondaryNumberField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipAddonField As String
        
        Private zipField As String
        
        Private addonField As String
        
        Private lOTNumberField As String
        
        Private dPCCheckdigitField As String
        
        Private recordTypeField As String
        
        Private deliveryLine1Field As String
        
        Private deliveryLine2Field As String
        
        Private lastLineField As String
        
        Private lACSField As String
        
        Private carrierRouteField As String
        
        Private pMBDesignatorField As String
        
        Private firmRecipientField As String
        
        Private urbanizationField As String
        
        Private countyNameField As String
        
        Private countyNumberField As String
        
        Private fillerField As String
        
        Private geoTLIDField As String
        
        Private geoMatchFlagField As String
        
        Private geoTractField As String
        
        Private geoBlockField As String
        
        Private geofLatField As String
        
        Private geotLatField As String
        
        Private geofLongField As String
        
        Private geotLongField As String
        
        Private geoAddonEndField As String
        
        Private geoAddonStartField As String
        
        Private geoRetCodeField As String
        
        Private geoErrCodesField As String
        
        Private returnCodesField As String
        
        Private errorCodesField As String
        
        Private errorDescField As String
        
        Private searchesLeftField As Integer
        
        '''<remarks/>
        Public Property StreetNumber() As String
            Get
                Return Me.streetNumberField
            End Get
            Set
                Me.streetNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PreDirectional() As String
            Get
                Return Me.preDirectionalField
            End Get
            Set
                Me.preDirectionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetName() As String
            Get
                Return Me.streetNameField
            End Get
            Set
                Me.streetNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StreetSuffix() As String
            Get
                Return Me.streetSuffixField
            End Get
            Set
                Me.streetSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostDirectional() As String
            Get
                Return Me.postDirectionalField
            End Get
            Set
                Me.postDirectionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecondaryDesignation() As String
            Get
                Return Me.secondaryDesignationField
            End Get
            Set
                Me.secondaryDesignationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SecondaryNumber() As String
            Get
                Return Me.secondaryNumberField
            End Get
            Set
                Me.secondaryNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZipAddon() As String
            Get
                Return Me.zipAddonField
            End Get
            Set
                Me.zipAddonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addon() As String
            Get
                Return Me.addonField
            End Get
            Set
                Me.addonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LOTNumber() As String
            Get
                Return Me.lOTNumberField
            End Get
            Set
                Me.lOTNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DPCCheckdigit() As String
            Get
                Return Me.dPCCheckdigitField
            End Get
            Set
                Me.dPCCheckdigitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecordType() As String
            Get
                Return Me.recordTypeField
            End Get
            Set
                Me.recordTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeliveryLine1() As String
            Get
                Return Me.deliveryLine1Field
            End Get
            Set
                Me.deliveryLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeliveryLine2() As String
            Get
                Return Me.deliveryLine2Field
            End Get
            Set
                Me.deliveryLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastLine() As String
            Get
                Return Me.lastLineField
            End Get
            Set
                Me.lastLineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LACS() As String
            Get
                Return Me.lACSField
            End Get
            Set
                Me.lACSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CarrierRoute() As String
            Get
                Return Me.carrierRouteField
            End Get
            Set
                Me.carrierRouteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PMBDesignator() As String
            Get
                Return Me.pMBDesignatorField
            End Get
            Set
                Me.pMBDesignatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirmRecipient() As String
            Get
                Return Me.firmRecipientField
            End Get
            Set
                Me.firmRecipientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Urbanization() As String
            Get
                Return Me.urbanizationField
            End Get
            Set
                Me.urbanizationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyName() As String
            Get
                Return Me.countyNameField
            End Get
            Set
                Me.countyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyNumber() As String
            Get
                Return Me.countyNumberField
            End Get
            Set
                Me.countyNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filler() As String
            Get
                Return Me.fillerField
            End Get
            Set
                Me.fillerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoTLID() As String
            Get
                Return Me.geoTLIDField
            End Get
            Set
                Me.geoTLIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoMatchFlag() As String
            Get
                Return Me.geoMatchFlagField
            End Get
            Set
                Me.geoMatchFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoTract() As String
            Get
                Return Me.geoTractField
            End Get
            Set
                Me.geoTractField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoBlock() As String
            Get
                Return Me.geoBlockField
            End Get
            Set
                Me.geoBlockField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeofLat() As String
            Get
                Return Me.geofLatField
            End Get
            Set
                Me.geofLatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeotLat() As String
            Get
                Return Me.geotLatField
            End Get
            Set
                Me.geotLatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeofLong() As String
            Get
                Return Me.geofLongField
            End Get
            Set
                Me.geofLongField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeotLong() As String
            Get
                Return Me.geotLongField
            End Get
            Set
                Me.geotLongField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoAddonEnd() As String
            Get
                Return Me.geoAddonEndField
            End Get
            Set
                Me.geoAddonEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoAddonStart() As String
            Get
                Return Me.geoAddonStartField
            End Get
            Set
                Me.geoAddonStartField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoRetCode() As String
            Get
                Return Me.geoRetCodeField
            End Get
            Set
                Me.geoRetCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GeoErrCodes() As String
            Get
                Return Me.geoErrCodesField
            End Get
            Set
                Me.geoErrCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReturnCodes() As String
            Get
                Return Me.returnCodesField
            End Get
            Set
                Me.returnCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCodes() As String
            Get
                Return Me.errorCodesField
            End Get
            Set
                Me.errorCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchesLeft() As Integer
            Get
                Return Me.searchesLeftField
            End Get
            Set
                Me.searchesLeftField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsCorrectAddress
        Inherits CorrectAddress
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsZipCity
        
        Private cityField As String
        
        Private stateField As String
        
        Private zipField As String
        
        Private searchLeftField As Integer
        
        Private errorDescField As String
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchLeft() As Integer
            Get
                Return Me.searchLeftField
            End Get
            Set
                Me.searchLeftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsCityCounty
        
        Private zipField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private countyNameField As String
        
        Private countyNumField As String
        
        Private searchLeftField As Integer
        
        Private errorDescField As String
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyName() As String
            Get
                Return Me.countyNameField
            End Get
            Set
                Me.countyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyNum() As String
            Get
                Return Me.countyNumField
            End Get
            Set
                Me.countyNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchLeft() As Integer
            Get
                Return Me.searchLeftField
            End Get
            Set
                Me.searchLeftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsCityState
        
        Private zipField As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private countyNameField As String
        
        Private searchLeftField As Integer
        
        Private errorDescField As String
        
        '''<remarks/>
        Public Property Zip() As String
            Get
                Return Me.zipField
            End Get
            Set
                Me.zipField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountyName() As String
            Get
                Return Me.countyNameField
            End Get
            Set
                Me.countyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SearchLeft() As Integer
            Get
                Return Me.searchLeftField
            End Get
            Set
                Me.searchLeftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorDesc() As String
            Get
                Return Me.errorDescField
            End Get
            Set
                Me.errorDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsPS3553
        
        Private cAdateField As String
        
        Private companyField As String
        
        Private softwareField As String
        
        Private configurationField As String
        
        Private recordCountField As Integer
        
        Private zipCountField As Integer
        
        Private addonCountField As Integer
        
        Private cRouteCountField As Integer
        
        Private lOTCountField As Integer
        
        Private dPCCountField As Integer
        
        Private lACSCountField As Integer
        
        Private eWSCountField As Integer
        
        Private dPVCountField As Integer
        
        Private hDefaultCountField As Integer
        
        Private hExactCountField As Integer
        
        Private rRDefaultCountField As Integer
        
        Private rRExactCountField As Integer
        
        Private rDICountField As Integer
        
        Private messageField As String
        
        '''<remarks/>
        Public Property CAdate() As String
            Get
                Return Me.cAdateField
            End Get
            Set
                Me.cAdateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Software() As String
            Get
                Return Me.softwareField
            End Get
            Set
                Me.softwareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Configuration() As String
            Get
                Return Me.configurationField
            End Get
            Set
                Me.configurationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RecordCount() As Integer
            Get
                Return Me.recordCountField
            End Get
            Set
                Me.recordCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ZipCount() As Integer
            Get
                Return Me.zipCountField
            End Get
            Set
                Me.zipCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddonCount() As Integer
            Get
                Return Me.addonCountField
            End Get
            Set
                Me.addonCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CRouteCount() As Integer
            Get
                Return Me.cRouteCountField
            End Get
            Set
                Me.cRouteCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LOTCount() As Integer
            Get
                Return Me.lOTCountField
            End Get
            Set
                Me.lOTCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DPCCount() As Integer
            Get
                Return Me.dPCCountField
            End Get
            Set
                Me.dPCCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LACSCount() As Integer
            Get
                Return Me.lACSCountField
            End Get
            Set
                Me.lACSCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EWSCount() As Integer
            Get
                Return Me.eWSCountField
            End Get
            Set
                Me.eWSCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DPVCount() As Integer
            Get
                Return Me.dPVCountField
            End Get
            Set
                Me.dPVCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HDefaultCount() As Integer
            Get
                Return Me.hDefaultCountField
            End Get
            Set
                Me.hDefaultCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HExactCount() As Integer
            Get
                Return Me.hExactCountField
            End Get
            Set
                Me.hExactCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RRDefaultCount() As Integer
            Get
                Return Me.rRDefaultCountField
            End Get
            Set
                Me.rRDefaultCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RRExactCount() As Integer
            Get
                Return Me.rRExactCountField
            End Get
            Set
                Me.rRExactCountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RDICount() As Integer
            Get
                Return Me.rDICountField
            End Get
            Set
                Me.rDICountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.intelligentsearch.com/HostedWebServices/")>  _
    Partial Public Class WsAccountAccess
        
        Private caField As Boolean
        
        Private geoField As Boolean
        
        Private dpvField As Boolean
        
        Private lACSLinkField As Boolean
        
        Private officeAddinField As Boolean
        
        Private webClientField As Boolean
        
        Private currentDateField As String
        
        '''<remarks/>
        Public Property Ca() As Boolean
            Get
                Return Me.caField
            End Get
            Set
                Me.caField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Geo() As Boolean
            Get
                Return Me.geoField
            End Get
            Set
                Me.geoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Dpv() As Boolean
            Get
                Return Me.dpvField
            End Get
            Set
                Me.dpvField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LACSLink() As Boolean
            Get
                Return Me.lACSLinkField
            End Get
            Set
                Me.lACSLinkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OfficeAddin() As Boolean
            Get
                Return Me.officeAddinField
            End Get
            Set
                Me.officeAddinField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WebClient() As Boolean
            Get
                Return Me.webClientField
            End Get
            Set
                Me.webClientField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentDate() As String
            Get
                Return Me.currentDateField
            End Get
            Set
                Me.currentDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsGetAccountInfoCompletedEventHandler(ByVal sender As Object, ByVal e As wsGetAccountInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsGetAccountInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsAccountInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsAccountInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsGetAccountAccessCompletedEventHandler(ByVal sender As Object, ByVal e As wsGetAccountAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsGetAccountAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsAccountAccess
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsAccountAccess)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsCreateBatchCompletedEventHandler(ByVal sender As Object, ByVal e As wsCreateBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsCreateBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsDeleteBatchCompletedEventHandler(ByVal sender As Object, ByVal e As wsDeleteBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsDeleteBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsGetBatchListCompletedEventHandler(ByVal sender As Object, ByVal e As wsGetBatchListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsGetBatchListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsGetPS3553formCompletedEventHandler(ByVal sender As Object, ByVal e As wsGetPS3553formCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsGetPS3553formCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsPS3553
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsPS3553)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsFindCityStateCompletedEventHandler(ByVal sender As Object, ByVal e As wsFindCityStateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsFindCityStateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsCityState()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsCityState())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsFindCityCountyCompletedEventHandler(ByVal sender As Object, ByVal e As wsFindCityCountyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsFindCityCountyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsCityCounty
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsCityCounty)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsFindZipCityCompletedEventHandler(ByVal sender As Object, ByVal e As wsFindZipCityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsFindZipCityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsZipCity()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsZipCity())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsCorrectACompletedEventHandler(ByVal sender As Object, ByVal e As wsCorrectACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsCorrectACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsCorrectAddress()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsCorrectAddress())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsTigerCACompletedEventHandler(ByVal sender As Object, ByVal e As wsTigerCACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsTigerCACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsCorrectAddress()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsCorrectAddress())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub wsStreetSearch2CompletedEventHandler(ByVal sender As Object, ByVal e As wsStreetSearch2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class wsStreetSearch2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WsStreetSearch()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WsStreetSearch())
            End Get
        End Property
    End Class
End Namespace
