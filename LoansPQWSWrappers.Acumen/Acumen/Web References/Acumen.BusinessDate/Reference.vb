'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3634
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3634.
'
Namespace Acumen.BusinessDate
    
    'CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BusinessDateImplPortBinding", [Namespace]:="http://api.webservice.configuration.ispectrum.summitsite.com/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsBaseInfo))>  _
    Partial Public Class BusinessDateWse
        Inherits Microsoft.Web.Services3.WebServicesClientProtocol
        
        Private getBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private doBusinessDateTransitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessCalendarFromRealTimestampOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessDateFromRealTimestampOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessDateHistoryRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getISpectrumDBVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPreviousBizDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByUserIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUndoSuspenseDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByLogonNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByDrawerCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAvailableDrawerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllDrawerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerAggregateByUserIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDefaultDrawerForUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getForcedClosedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDefaultDrawerForUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInstitutionFtpPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInstitutionPeriodicPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSystemDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findDrawerDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByPrimaryKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private doDrawerAdjustOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createUpdateDeleteDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private closeDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawersOnBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSystemDateForSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByUserIdAndFinControlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByLogonNameAndFincontrolsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByDrawerCodeAndFinControlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllDrawerListByDeletedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDefaultDrawerForUserByResetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWrappers_Acumen_Configuration_BusinessDate
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getBusinessDateCompleted As getBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event doBusinessDateTransitionCompleted As doBusinessDateTransitionCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessCalendarFromRealTimestampCompleted As getBusinessCalendarFromRealTimestampCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessDateFromRealTimestampCompleted As getBusinessDateFromRealTimestampCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessDateHistoryRecordsCompleted As getBusinessDateHistoryRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event getISpectrumDBVersionCompleted As getISpectrumDBVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event getPreviousBizDateCompleted As getPreviousBizDateCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByUserIdCompleted As getDrawerByUserIdCompletedEventHandler
        
        '''<remarks/>
        Public Event getUndoSuspenseDetailsCompleted As getUndoSuspenseDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByLogonNameCompleted As getDrawerByLogonNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByDrawerCodeCompleted As getDrawerByDrawerCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event getAvailableDrawerListCompleted As getAvailableDrawerListCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllDrawerListCompleted As getAllDrawerListCompletedEventHandler
        
        '''<remarks/>
        Public Event openDrawerCompleted As openDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerAggregateByUserIdCompleted As getDrawerAggregateByUserIdCompletedEventHandler
        
        '''<remarks/>
        Public Event openDefaultDrawerForUserCompleted As openDefaultDrawerForUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getForcedClosedCompleted As getForcedClosedCompletedEventHandler
        
        '''<remarks/>
        Public Event getDefaultDrawerForUserCompleted As getDefaultDrawerForUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getInstitutionFtpPathCompleted As getInstitutionFtpPathCompletedEventHandler
        
        '''<remarks/>
        Public Event getInstitutionPeriodicPathCompleted As getInstitutionPeriodicPathCompletedEventHandler
        
        '''<remarks/>
        Public Event getSystemDateCompleted As getSystemDateCompletedEventHandler
        
        '''<remarks/>
        Public Event findDrawerDetailsCompleted As findDrawerDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByPrimaryKeyCompleted As getDrawerByPrimaryKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event doDrawerAdjustCompleted As doDrawerAdjustCompletedEventHandler
        
        '''<remarks/>
        Public Event createUpdateDeleteDrawerCompleted As createUpdateDeleteDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event closeDrawerCompleted As closeDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawersOnBranchCompleted As getDrawersOnBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event getSystemDateForSchemaCompleted As getSystemDateForSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByUserIdAndFinControlsCompleted As getDrawerByUserIdAndFinControlsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByLogonNameAndFincontrolsCompleted As getDrawerByLogonNameAndFincontrolsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByDrawerCodeAndFinControlsCompleted As getDrawerByDrawerCodeAndFinControlsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllDrawerListByDeletedCompleted As getAllDrawerListByDeletedCompletedEventHandler
        
        '''<remarks/>
        Public Event openDefaultDrawerForUserByResetCompleted As openDefaultDrawerForUserByResetCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getBusinessDate(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getBusinessDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getBusinessDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getBusinessDate", New Object() {ispecContext})
            getBusinessDateResponse = CType(results(0),Date)
            getBusinessDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getBusinessDateAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getBusinessDateOperationCompleted Is Nothing) Then
                Me.getBusinessDateOperationCompleted = AddressOf Me.OngetBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDate", New Object() {ispecContext}, Me.getBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateCompleted(Me, New getBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:doBusinessDateTransition", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub doBusinessDateTransition(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal newBusinessDate As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal newBusinessDateSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal checkTransBefTransition As Boolean)
            Me.Invoke("doBusinessDateTransition", New Object() {ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doBusinessDateTransitionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal newBusinessDate As Date, ByVal newBusinessDateSpecified As Boolean, ByVal checkTransBefTransition As Boolean)
            Me.doBusinessDateTransitionAsync(ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doBusinessDateTransitionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal newBusinessDate As Date, ByVal newBusinessDateSpecified As Boolean, ByVal checkTransBefTransition As Boolean, ByVal userState As Object)
            If (Me.doBusinessDateTransitionOperationCompleted Is Nothing) Then
                Me.doBusinessDateTransitionOperationCompleted = AddressOf Me.OndoBusinessDateTransitionOperationCompleted
            End If
            Me.InvokeAsync("doBusinessDateTransition", New Object() {ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition}, Me.doBusinessDateTransitionOperationCompleted, userState)
        End Sub
        
        Private Sub OndoBusinessDateTransitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.doBusinessDateTransitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent doBusinessDateTransitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessCalendarFromRealTimestamp", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getBusinessCalendarFromRealTimestamp(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal timestamp As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal timestampSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getBusinessCalendarFromRealTimestampResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getBusinessCalendarFromRealTimestampResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getBusinessCalendarFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified})
            getBusinessCalendarFromRealTimestampResponse = CType(results(0),Date)
            getBusinessCalendarFromRealTimestampResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessCalendarFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean)
            Me.getBusinessCalendarFromRealTimestampAsync(ispecContext, timestamp, timestampSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessCalendarFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean, ByVal userState As Object)
            If (Me.getBusinessCalendarFromRealTimestampOperationCompleted Is Nothing) Then
                Me.getBusinessCalendarFromRealTimestampOperationCompleted = AddressOf Me.OngetBusinessCalendarFromRealTimestampOperationCompleted
            End If
            Me.InvokeAsync("getBusinessCalendarFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified}, Me.getBusinessCalendarFromRealTimestampOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessCalendarFromRealTimestampOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessCalendarFromRealTimestampCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessCalendarFromRealTimestampCompleted(Me, New getBusinessCalendarFromRealTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDateFromRealTimestamp", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBusinessDateFromRealTimestamp(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal timestamp As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal timestampSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getBusinessDateFromRealTimestampResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsBusinessDateHistoryInfo
            Dim results() As Object = Me.Invoke("getBusinessDateFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified})
            Return CType(results(0),wsBusinessDateHistoryInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean)
            Me.getBusinessDateFromRealTimestampAsync(ispecContext, timestamp, timestampSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean, ByVal userState As Object)
            If (Me.getBusinessDateFromRealTimestampOperationCompleted Is Nothing) Then
                Me.getBusinessDateFromRealTimestampOperationCompleted = AddressOf Me.OngetBusinessDateFromRealTimestampOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDateFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified}, Me.getBusinessDateFromRealTimestampOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateFromRealTimestampOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateFromRealTimestampCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateFromRealTimestampCompleted(Me, New getBusinessDateFromRealTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDateHistoryRecords", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBusinessDateHistoryRecords(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numRecords As Integer) As <System.Xml.Serialization.XmlElementAttribute("getBusinessDateHistoryRecordsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsBusinessDateHistoryInfo()
            Dim results() As Object = Me.Invoke("getBusinessDateHistoryRecords", New Object() {ispecContext, numRecords})
            Return CType(results(0),wsBusinessDateHistoryInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateHistoryRecordsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal numRecords As Integer)
            Me.getBusinessDateHistoryRecordsAsync(ispecContext, numRecords, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateHistoryRecordsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal numRecords As Integer, ByVal userState As Object)
            If (Me.getBusinessDateHistoryRecordsOperationCompleted Is Nothing) Then
                Me.getBusinessDateHistoryRecordsOperationCompleted = AddressOf Me.OngetBusinessDateHistoryRecordsOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDateHistoryRecords", New Object() {ispecContext, numRecords}, Me.getBusinessDateHistoryRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateHistoryRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateHistoryRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateHistoryRecordsCompleted(Me, New getBusinessDateHistoryRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getISpectrumDBVersion", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getISpectrumDBVersion(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getISpectrumDBVersionResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getISpectrumDBVersion", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getISpectrumDBVersionAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getISpectrumDBVersionAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getISpectrumDBVersionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getISpectrumDBVersionOperationCompleted Is Nothing) Then
                Me.getISpectrumDBVersionOperationCompleted = AddressOf Me.OngetISpectrumDBVersionOperationCompleted
            End If
            Me.InvokeAsync("getISpectrumDBVersion", New Object() {ispecContext}, Me.getISpectrumDBVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetISpectrumDBVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getISpectrumDBVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getISpectrumDBVersionCompleted(Me, New getISpectrumDBVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPreviousBizDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getPreviousBizDate(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getPreviousBizDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getPreviousBizDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getPreviousBizDate", New Object() {ispecContext})
            getPreviousBizDateResponse = CType(results(0),Date)
            getPreviousBizDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPreviousBizDateAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getPreviousBizDateAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPreviousBizDateAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getPreviousBizDateOperationCompleted Is Nothing) Then
                Me.getPreviousBizDateOperationCompleted = AddressOf Me.OngetPreviousBizDateOperationCompleted
            End If
            Me.InvokeAsync("getPreviousBizDate", New Object() {ispecContext}, Me.getPreviousBizDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPreviousBizDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPreviousBizDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPreviousBizDateCompleted(Me, New getPreviousBizDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByUserId", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByUserId(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByUserIdResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByUserId", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerByUserIdAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerByUserIdOperationCompleted Is Nothing) Then
                Me.getDrawerByUserIdOperationCompleted = AddressOf Me.OngetDrawerByUserIdOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByUserId", New Object() {ispecContext}, Me.getDrawerByUserIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByUserIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByUserIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByUserIdCompleted(Me, New getDrawerByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getUndoSuspenseDetails", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUndoSuspenseDetails(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getUndoSuspenseDetailsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsUndoSuspenseAmountInfo()
            Dim results() As Object = Me.Invoke("getUndoSuspenseDetails", New Object() {ispecContext})
            Return CType(results(0),wsUndoSuspenseAmountInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUndoSuspenseDetailsAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getUndoSuspenseDetailsAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUndoSuspenseDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getUndoSuspenseDetailsOperationCompleted Is Nothing) Then
                Me.getUndoSuspenseDetailsOperationCompleted = AddressOf Me.OngetUndoSuspenseDetailsOperationCompleted
            End If
            Me.InvokeAsync("getUndoSuspenseDetails", New Object() {ispecContext}, Me.getUndoSuspenseDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUndoSuspenseDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUndoSuspenseDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUndoSuspenseDetailsCompleted(Me, New getUndoSuspenseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByLogonName", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByLogonName(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByLogonNameResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByLogonName", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerByLogonNameAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerByLogonNameOperationCompleted Is Nothing) Then
                Me.getDrawerByLogonNameOperationCompleted = AddressOf Me.OngetDrawerByLogonNameOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByLogonName", New Object() {ispecContext}, Me.getDrawerByLogonNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByLogonNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByLogonNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByLogonNameCompleted(Me, New getDrawerByLogonNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByDrawerCode", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByDrawerCode(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByDrawerCodeResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByDrawerCode", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.getDrawerByDrawerCodeAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.getDrawerByDrawerCodeOperationCompleted Is Nothing) Then
                Me.getDrawerByDrawerCodeOperationCompleted = AddressOf Me.OngetDrawerByDrawerCodeOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByDrawerCode", New Object() {ispecContext, drawerCode}, Me.getDrawerByDrawerCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByDrawerCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByDrawerCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByDrawerCodeCompleted(Me, New getDrawerByDrawerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAvailableDrawerList", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAvailableDrawerList(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getAvailableDrawerListResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAvailableDrawerList", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAvailableDrawerListAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getAvailableDrawerListAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAvailableDrawerListAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getAvailableDrawerListOperationCompleted Is Nothing) Then
                Me.getAvailableDrawerListOperationCompleted = AddressOf Me.OngetAvailableDrawerListOperationCompleted
            End If
            Me.InvokeAsync("getAvailableDrawerList", New Object() {ispecContext}, Me.getAvailableDrawerListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAvailableDrawerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAvailableDrawerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAvailableDrawerListCompleted(Me, New getAvailableDrawerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllDrawerList", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllDrawerList(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getAllDrawerListResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAllDrawerList", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getAllDrawerListAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getAllDrawerListOperationCompleted Is Nothing) Then
                Me.getAllDrawerListOperationCompleted = AddressOf Me.OngetAllDrawerListOperationCompleted
            End If
            Me.InvokeAsync("getAllDrawerList", New Object() {ispecContext}, Me.getAllDrawerListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllDrawerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllDrawerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllDrawerListCompleted(Me, New getAllDrawerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub openDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal doReset As Boolean)
            Me.Invoke("openDrawer", New Object() {ispecContext, drawerCode, doReset})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal doReset As Boolean)
            Me.openDrawerAsync(ispecContext, drawerCode, doReset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal doReset As Boolean, ByVal userState As Object)
            If (Me.openDrawerOperationCompleted Is Nothing) Then
                Me.openDrawerOperationCompleted = AddressOf Me.OnopenDrawerOperationCompleted
            End If
            Me.InvokeAsync("openDrawer", New Object() {ispecContext, drawerCode, doReset}, Me.openDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerAggregateByUserId", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerAggregateByUserId(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerAggregateByUserIdResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerAggregateByUserId", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerAggregateByUserIdAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerAggregateByUserIdAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerAggregateByUserIdAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerAggregateByUserIdOperationCompleted Is Nothing) Then
                Me.getDrawerAggregateByUserIdOperationCompleted = AddressOf Me.OngetDrawerAggregateByUserIdOperationCompleted
            End If
            Me.InvokeAsync("getDrawerAggregateByUserId", New Object() {ispecContext}, Me.getDrawerAggregateByUserIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerAggregateByUserIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerAggregateByUserIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerAggregateByUserIdCompleted(Me, New getDrawerAggregateByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDefaultDrawerForUser", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function openDefaultDrawerForUser(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("openDefaultDrawerForUserResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("openDefaultDrawerForUser", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.openDefaultDrawerForUserAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.openDefaultDrawerForUserOperationCompleted Is Nothing) Then
                Me.openDefaultDrawerForUserOperationCompleted = AddressOf Me.OnopenDefaultDrawerForUserOperationCompleted
            End If
            Me.InvokeAsync("openDefaultDrawerForUser", New Object() {ispecContext}, Me.openDefaultDrawerForUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDefaultDrawerForUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDefaultDrawerForUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDefaultDrawerForUserCompleted(Me, New openDefaultDrawerForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getForcedClosed", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getForcedClosed(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("getForcedClosedResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getForcedClosed", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getForcedClosedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.getForcedClosedAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getForcedClosedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.getForcedClosedOperationCompleted Is Nothing) Then
                Me.getForcedClosedOperationCompleted = AddressOf Me.OngetForcedClosedOperationCompleted
            End If
            Me.InvokeAsync("getForcedClosed", New Object() {ispecContext, drawerCode}, Me.getForcedClosedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetForcedClosedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getForcedClosedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getForcedClosedCompleted(Me, New getForcedClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDefaultDrawerForUser", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDefaultDrawerForUser(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDefaultDrawerForUserResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDefaultDrawerForUser", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDefaultDrawerForUserAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDefaultDrawerForUserOperationCompleted Is Nothing) Then
                Me.getDefaultDrawerForUserOperationCompleted = AddressOf Me.OngetDefaultDrawerForUserOperationCompleted
            End If
            Me.InvokeAsync("getDefaultDrawerForUser", New Object() {ispecContext}, Me.getDefaultDrawerForUserOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDefaultDrawerForUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDefaultDrawerForUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDefaultDrawerForUserCompleted(Me, New getDefaultDrawerForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getInstitutionFtpPath", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getInstitutionFtpPath(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getInstitutionFtpPathResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getInstitutionFtpPath", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInstitutionFtpPathAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getInstitutionFtpPathAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInstitutionFtpPathAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getInstitutionFtpPathOperationCompleted Is Nothing) Then
                Me.getInstitutionFtpPathOperationCompleted = AddressOf Me.OngetInstitutionFtpPathOperationCompleted
            End If
            Me.InvokeAsync("getInstitutionFtpPath", New Object() {ispecContext}, Me.getInstitutionFtpPathOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInstitutionFtpPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInstitutionFtpPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInstitutionFtpPathCompleted(Me, New getInstitutionFtpPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getInstitutionPeriodicPath", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getInstitutionPeriodicPath(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getInstitutionPeriodicPathResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getInstitutionPeriodicPath", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInstitutionPeriodicPathAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getInstitutionPeriodicPathAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInstitutionPeriodicPathAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getInstitutionPeriodicPathOperationCompleted Is Nothing) Then
                Me.getInstitutionPeriodicPathOperationCompleted = AddressOf Me.OngetInstitutionPeriodicPathOperationCompleted
            End If
            Me.InvokeAsync("getInstitutionPeriodicPath", New Object() {ispecContext}, Me.getInstitutionPeriodicPathOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInstitutionPeriodicPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInstitutionPeriodicPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInstitutionPeriodicPathCompleted(Me, New getInstitutionPeriodicPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSystemDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getSystemDate(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getSystemDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getSystemDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getSystemDate", New Object(-1) {})
            getSystemDateResponse = CType(results(0),Date)
            getSystemDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateAsync()
            Me.getSystemDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateAsync(ByVal userState As Object)
            If (Me.getSystemDateOperationCompleted Is Nothing) Then
                Me.getSystemDateOperationCompleted = AddressOf Me.OngetSystemDateOperationCompleted
            End If
            Me.InvokeAsync("getSystemDate", New Object(-1) {}, Me.getSystemDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSystemDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSystemDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSystemDateCompleted(Me, New getSystemDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:findDrawerDetails", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findDrawerDetails(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("findDrawerDetailsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("findDrawerDetails", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findDrawerDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.findDrawerDetailsAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findDrawerDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.findDrawerDetailsOperationCompleted Is Nothing) Then
                Me.findDrawerDetailsOperationCompleted = AddressOf Me.OnfindDrawerDetailsOperationCompleted
            End If
            Me.InvokeAsync("findDrawerDetails", New Object() {ispecContext, drawerCode}, Me.findDrawerDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindDrawerDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.findDrawerDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findDrawerDetailsCompleted(Me, New findDrawerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByPrimaryKey", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByPrimaryKey(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerId As Long) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByPrimaryKeyResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByPrimaryKey", New Object() {ispecContext, drawerId})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByPrimaryKeyAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerId As Long)
            Me.getDrawerByPrimaryKeyAsync(ispecContext, drawerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByPrimaryKeyAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerId As Long, ByVal userState As Object)
            If (Me.getDrawerByPrimaryKeyOperationCompleted Is Nothing) Then
                Me.getDrawerByPrimaryKeyOperationCompleted = AddressOf Me.OngetDrawerByPrimaryKeyOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByPrimaryKey", New Object() {ispecContext, drawerId}, Me.getDrawerByPrimaryKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByPrimaryKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByPrimaryKeyCompleted(Me, New getDrawerByPrimaryKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:doDrawerAdjust", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub doDrawerAdjust(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute("wsinfo", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> ByVal wsinfo() As wsDrawerAdjustInfo)
            Me.Invoke("doDrawerAdjust", New Object() {ispecContext, wsinfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doDrawerAdjustAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsinfo() As wsDrawerAdjustInfo)
            Me.doDrawerAdjustAsync(ispecContext, wsinfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doDrawerAdjustAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsinfo() As wsDrawerAdjustInfo, ByVal userState As Object)
            If (Me.doDrawerAdjustOperationCompleted Is Nothing) Then
                Me.doDrawerAdjustOperationCompleted = AddressOf Me.OndoDrawerAdjustOperationCompleted
            End If
            Me.InvokeAsync("doDrawerAdjust", New Object() {ispecContext, wsinfo}, Me.doDrawerAdjustOperationCompleted, userState)
        End Sub
        
        Private Sub OndoDrawerAdjustOperationCompleted(ByVal arg As Object)
            If (Not (Me.doDrawerAdjustCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent doDrawerAdjustCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createUpdateDeleteDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub createUpdateDeleteDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal wsdrawer As wsDrawerInfo)
            Me.Invoke("createUpdateDeleteDrawer", New Object() {ispecContext, wsdrawer})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUpdateDeleteDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsdrawer As wsDrawerInfo)
            Me.createUpdateDeleteDrawerAsync(ispecContext, wsdrawer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUpdateDeleteDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsdrawer As wsDrawerInfo, ByVal userState As Object)
            If (Me.createUpdateDeleteDrawerOperationCompleted Is Nothing) Then
                Me.createUpdateDeleteDrawerOperationCompleted = AddressOf Me.OncreateUpdateDeleteDrawerOperationCompleted
            End If
            Me.InvokeAsync("createUpdateDeleteDrawer", New Object() {ispecContext, wsdrawer}, Me.createUpdateDeleteDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateUpdateDeleteDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.createUpdateDeleteDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createUpdateDeleteDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:closeDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub closeDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo)
            Me.Invoke("closeDrawer", New Object() {ispecContext})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub closeDrawerAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.closeDrawerAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub closeDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.closeDrawerOperationCompleted Is Nothing) Then
                Me.closeDrawerOperationCompleted = AddressOf Me.OncloseDrawerOperationCompleted
            End If
            Me.InvokeAsync("closeDrawer", New Object() {ispecContext}, Me.closeDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OncloseDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.closeDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent closeDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawersOnBranch", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawersOnBranch(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawersOnBranchResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawersOnBranchInfo()
            Dim results() As Object = Me.Invoke("getDrawersOnBranch", New Object() {ispecContext})
            Return CType(results(0),wsDrawersOnBranchInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawersOnBranchAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawersOnBranchAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawersOnBranchAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawersOnBranchOperationCompleted Is Nothing) Then
                Me.getDrawersOnBranchOperationCompleted = AddressOf Me.OngetDrawersOnBranchOperationCompleted
            End If
            Me.InvokeAsync("getDrawersOnBranch", New Object() {ispecContext}, Me.getDrawersOnBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawersOnBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawersOnBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawersOnBranchCompleted(Me, New getDrawersOnBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSystemDateForSchema", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getSystemDateForSchema(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getSystemDateForSchemaResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getSystemDateForSchemaResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getSystemDateForSchema", New Object() {ispecContext})
            getSystemDateForSchemaResponse = CType(results(0),Date)
            getSystemDateForSchemaResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateForSchemaAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getSystemDateForSchemaAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateForSchemaAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getSystemDateForSchemaOperationCompleted Is Nothing) Then
                Me.getSystemDateForSchemaOperationCompleted = AddressOf Me.OngetSystemDateForSchemaOperationCompleted
            End If
            Me.InvokeAsync("getSystemDateForSchema", New Object() {ispecContext}, Me.getSystemDateForSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSystemDateForSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSystemDateForSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSystemDateForSchemaCompleted(Me, New getSystemDateForSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByUserIdAndFinControls", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByUserIdAndFinControls(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getFinControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByUserIdAndFinControlsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByUserIdAndFinControls", New Object() {ispecContext, getFinControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getFinControls As Boolean)
            Me.getDrawerByUserIdAndFinControlsAsync(ispecContext, getFinControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getFinControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByUserIdAndFinControlsOperationCompleted Is Nothing) Then
                Me.getDrawerByUserIdAndFinControlsOperationCompleted = AddressOf Me.OngetDrawerByUserIdAndFinControlsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByUserIdAndFinControls", New Object() {ispecContext, getFinControls}, Me.getDrawerByUserIdAndFinControlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByUserIdAndFinControlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByUserIdAndFinControlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByUserIdAndFinControlsCompleted(Me, New getDrawerByUserIdAndFinControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByLogonNameAndFincontrols", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByLogonNameAndFincontrols(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal finControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByLogonNameAndFincontrolsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByLogonNameAndFincontrols", New Object() {ispecContext, finControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAndFincontrolsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal finControls As Boolean)
            Me.getDrawerByLogonNameAndFincontrolsAsync(ispecContext, finControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAndFincontrolsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal finControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByLogonNameAndFincontrolsOperationCompleted Is Nothing) Then
                Me.getDrawerByLogonNameAndFincontrolsOperationCompleted = AddressOf Me.OngetDrawerByLogonNameAndFincontrolsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByLogonNameAndFincontrols", New Object() {ispecContext, finControls}, Me.getDrawerByLogonNameAndFincontrolsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByLogonNameAndFincontrolsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByLogonNameAndFincontrolsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByLogonNameAndFincontrolsCompleted(Me, New getDrawerByLogonNameAndFincontrolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByDrawerCodeAndFinControls", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByDrawerCodeAndFinControls(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getFinControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByDrawerCodeAndFinControlsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByDrawerCodeAndFinControls", New Object() {ispecContext, drawerCode, getFinControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal getFinControls As Boolean)
            Me.getDrawerByDrawerCodeAndFinControlsAsync(ispecContext, drawerCode, getFinControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal getFinControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted Is Nothing) Then
                Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted = AddressOf Me.OngetDrawerByDrawerCodeAndFinControlsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByDrawerCodeAndFinControls", New Object() {ispecContext, drawerCode, getFinControls}, Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByDrawerCodeAndFinControlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByDrawerCodeAndFinControlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByDrawerCodeAndFinControlsCompleted(Me, New getDrawerByDrawerCodeAndFinControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllDrawerListByDeleted", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllDrawerListByDeleted(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getDeleted As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getAllDrawerListByDeletedResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAllDrawerListByDeleted", New Object() {ispecContext, getDeleted})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListByDeletedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getDeleted As Boolean)
            Me.getAllDrawerListByDeletedAsync(ispecContext, getDeleted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListByDeletedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getDeleted As Boolean, ByVal userState As Object)
            If (Me.getAllDrawerListByDeletedOperationCompleted Is Nothing) Then
                Me.getAllDrawerListByDeletedOperationCompleted = AddressOf Me.OngetAllDrawerListByDeletedOperationCompleted
            End If
            Me.InvokeAsync("getAllDrawerListByDeleted", New Object() {ispecContext, getDeleted}, Me.getAllDrawerListByDeletedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllDrawerListByDeletedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllDrawerListByDeletedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllDrawerListByDeletedCompleted(Me, New getAllDrawerListByDeletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDefaultDrawerForUserByReset", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function openDefaultDrawerForUserByReset(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal doReset As Boolean) As <System.Xml.Serialization.XmlElementAttribute("openDefaultDrawerForUserByResetResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("openDefaultDrawerForUserByReset", New Object() {ispecContext, doReset})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserByResetAsync(ByVal ispecContext() As wsOverrideInfo, ByVal doReset As Boolean)
            Me.openDefaultDrawerForUserByResetAsync(ispecContext, doReset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserByResetAsync(ByVal ispecContext() As wsOverrideInfo, ByVal doReset As Boolean, ByVal userState As Object)
            If (Me.openDefaultDrawerForUserByResetOperationCompleted Is Nothing) Then
                Me.openDefaultDrawerForUserByResetOperationCompleted = AddressOf Me.OnopenDefaultDrawerForUserByResetOperationCompleted
            End If
            Me.InvokeAsync("openDefaultDrawerForUserByReset", New Object() {ispecContext, doReset}, Me.openDefaultDrawerForUserByResetOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDefaultDrawerForUserByResetOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDefaultDrawerForUserByResetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDefaultDrawerForUserByResetCompleted(Me, New openDefaultDrawerForUserByResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    'CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BusinessDateImplPortBinding", [Namespace]:="http://api.webservice.configuration.ispectrum.summitsite.com/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsBaseInfo))>  _
    Partial Public Class BusinessDate
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private doBusinessDateTransitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessCalendarFromRealTimestampOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessDateFromRealTimestampOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBusinessDateHistoryRecordsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getISpectrumDBVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPreviousBizDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByUserIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUndoSuspenseDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByLogonNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByDrawerCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAvailableDrawerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllDrawerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerAggregateByUserIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDefaultDrawerForUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getForcedClosedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDefaultDrawerForUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInstitutionFtpPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getInstitutionPeriodicPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSystemDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private findDrawerDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByPrimaryKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private doDrawerAdjustOperationCompleted As System.Threading.SendOrPostCallback
        
        Private createUpdateDeleteDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private closeDrawerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawersOnBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getSystemDateForSchemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByUserIdAndFinControlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByLogonNameAndFincontrolsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDrawerByDrawerCodeAndFinControlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllDrawerListByDeletedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private openDefaultDrawerForUserByResetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.LoansPQ.WebServices.Wrappers.My.MySettings.Default.LoansPQWrappers_Acumen_Configuration_BusinessDate
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getBusinessDateCompleted As getBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event doBusinessDateTransitionCompleted As doBusinessDateTransitionCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessCalendarFromRealTimestampCompleted As getBusinessCalendarFromRealTimestampCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessDateFromRealTimestampCompleted As getBusinessDateFromRealTimestampCompletedEventHandler
        
        '''<remarks/>
        Public Event getBusinessDateHistoryRecordsCompleted As getBusinessDateHistoryRecordsCompletedEventHandler
        
        '''<remarks/>
        Public Event getISpectrumDBVersionCompleted As getISpectrumDBVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event getPreviousBizDateCompleted As getPreviousBizDateCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByUserIdCompleted As getDrawerByUserIdCompletedEventHandler
        
        '''<remarks/>
        Public Event getUndoSuspenseDetailsCompleted As getUndoSuspenseDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByLogonNameCompleted As getDrawerByLogonNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByDrawerCodeCompleted As getDrawerByDrawerCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event getAvailableDrawerListCompleted As getAvailableDrawerListCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllDrawerListCompleted As getAllDrawerListCompletedEventHandler
        
        '''<remarks/>
        Public Event openDrawerCompleted As openDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerAggregateByUserIdCompleted As getDrawerAggregateByUserIdCompletedEventHandler
        
        '''<remarks/>
        Public Event openDefaultDrawerForUserCompleted As openDefaultDrawerForUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getForcedClosedCompleted As getForcedClosedCompletedEventHandler
        
        '''<remarks/>
        Public Event getDefaultDrawerForUserCompleted As getDefaultDrawerForUserCompletedEventHandler
        
        '''<remarks/>
        Public Event getInstitutionFtpPathCompleted As getInstitutionFtpPathCompletedEventHandler
        
        '''<remarks/>
        Public Event getInstitutionPeriodicPathCompleted As getInstitutionPeriodicPathCompletedEventHandler
        
        '''<remarks/>
        Public Event getSystemDateCompleted As getSystemDateCompletedEventHandler
        
        '''<remarks/>
        Public Event findDrawerDetailsCompleted As findDrawerDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByPrimaryKeyCompleted As getDrawerByPrimaryKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event doDrawerAdjustCompleted As doDrawerAdjustCompletedEventHandler
        
        '''<remarks/>
        Public Event createUpdateDeleteDrawerCompleted As createUpdateDeleteDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event closeDrawerCompleted As closeDrawerCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawersOnBranchCompleted As getDrawersOnBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event getSystemDateForSchemaCompleted As getSystemDateForSchemaCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByUserIdAndFinControlsCompleted As getDrawerByUserIdAndFinControlsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByLogonNameAndFincontrolsCompleted As getDrawerByLogonNameAndFincontrolsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDrawerByDrawerCodeAndFinControlsCompleted As getDrawerByDrawerCodeAndFinControlsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllDrawerListByDeletedCompleted As getAllDrawerListByDeletedCompletedEventHandler
        
        '''<remarks/>
        Public Event openDefaultDrawerForUserByResetCompleted As openDefaultDrawerForUserByResetCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getBusinessDate(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getBusinessDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getBusinessDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getBusinessDate", New Object() {ispecContext})
            getBusinessDateResponse = CType(results(0),Date)
            getBusinessDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getBusinessDateAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getBusinessDateOperationCompleted Is Nothing) Then
                Me.getBusinessDateOperationCompleted = AddressOf Me.OngetBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDate", New Object() {ispecContext}, Me.getBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateCompleted(Me, New getBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:doBusinessDateTransition", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub doBusinessDateTransition(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal newBusinessDate As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal newBusinessDateSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal checkTransBefTransition As Boolean)
            Me.Invoke("doBusinessDateTransition", New Object() {ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doBusinessDateTransitionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal newBusinessDate As Date, ByVal newBusinessDateSpecified As Boolean, ByVal checkTransBefTransition As Boolean)
            Me.doBusinessDateTransitionAsync(ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doBusinessDateTransitionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal newBusinessDate As Date, ByVal newBusinessDateSpecified As Boolean, ByVal checkTransBefTransition As Boolean, ByVal userState As Object)
            If (Me.doBusinessDateTransitionOperationCompleted Is Nothing) Then
                Me.doBusinessDateTransitionOperationCompleted = AddressOf Me.OndoBusinessDateTransitionOperationCompleted
            End If
            Me.InvokeAsync("doBusinessDateTransition", New Object() {ispecContext, newBusinessDate, newBusinessDateSpecified, checkTransBefTransition}, Me.doBusinessDateTransitionOperationCompleted, userState)
        End Sub
        
        Private Sub OndoBusinessDateTransitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.doBusinessDateTransitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent doBusinessDateTransitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessCalendarFromRealTimestamp", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getBusinessCalendarFromRealTimestamp(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal timestamp As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal timestampSpecified As Boolean, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getBusinessCalendarFromRealTimestampResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getBusinessCalendarFromRealTimestampResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getBusinessCalendarFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified})
            getBusinessCalendarFromRealTimestampResponse = CType(results(0),Date)
            getBusinessCalendarFromRealTimestampResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessCalendarFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean)
            Me.getBusinessCalendarFromRealTimestampAsync(ispecContext, timestamp, timestampSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessCalendarFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean, ByVal userState As Object)
            If (Me.getBusinessCalendarFromRealTimestampOperationCompleted Is Nothing) Then
                Me.getBusinessCalendarFromRealTimestampOperationCompleted = AddressOf Me.OngetBusinessCalendarFromRealTimestampOperationCompleted
            End If
            Me.InvokeAsync("getBusinessCalendarFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified}, Me.getBusinessCalendarFromRealTimestampOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessCalendarFromRealTimestampOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessCalendarFromRealTimestampCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessCalendarFromRealTimestampCompleted(Me, New getBusinessCalendarFromRealTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDateFromRealTimestamp", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBusinessDateFromRealTimestamp(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal timestamp As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByVal timestampSpecified As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getBusinessDateFromRealTimestampResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsBusinessDateHistoryInfo
            Dim results() As Object = Me.Invoke("getBusinessDateFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified})
            Return CType(results(0),wsBusinessDateHistoryInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean)
            Me.getBusinessDateFromRealTimestampAsync(ispecContext, timestamp, timestampSpecified, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateFromRealTimestampAsync(ByVal ispecContext() As wsOverrideInfo, ByVal timestamp As Date, ByVal timestampSpecified As Boolean, ByVal userState As Object)
            If (Me.getBusinessDateFromRealTimestampOperationCompleted Is Nothing) Then
                Me.getBusinessDateFromRealTimestampOperationCompleted = AddressOf Me.OngetBusinessDateFromRealTimestampOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDateFromRealTimestamp", New Object() {ispecContext, timestamp, timestampSpecified}, Me.getBusinessDateFromRealTimestampOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateFromRealTimestampOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateFromRealTimestampCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateFromRealTimestampCompleted(Me, New getBusinessDateFromRealTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getBusinessDateHistoryRecords", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBusinessDateHistoryRecords(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal numRecords As Integer) As <System.Xml.Serialization.XmlElementAttribute("getBusinessDateHistoryRecordsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsBusinessDateHistoryInfo()
            Dim results() As Object = Me.Invoke("getBusinessDateHistoryRecords", New Object() {ispecContext, numRecords})
            Return CType(results(0),wsBusinessDateHistoryInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateHistoryRecordsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal numRecords As Integer)
            Me.getBusinessDateHistoryRecordsAsync(ispecContext, numRecords, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBusinessDateHistoryRecordsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal numRecords As Integer, ByVal userState As Object)
            If (Me.getBusinessDateHistoryRecordsOperationCompleted Is Nothing) Then
                Me.getBusinessDateHistoryRecordsOperationCompleted = AddressOf Me.OngetBusinessDateHistoryRecordsOperationCompleted
            End If
            Me.InvokeAsync("getBusinessDateHistoryRecords", New Object() {ispecContext, numRecords}, Me.getBusinessDateHistoryRecordsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBusinessDateHistoryRecordsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBusinessDateHistoryRecordsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBusinessDateHistoryRecordsCompleted(Me, New getBusinessDateHistoryRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getISpectrumDBVersion", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getISpectrumDBVersion(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getISpectrumDBVersionResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getISpectrumDBVersion", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getISpectrumDBVersionAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getISpectrumDBVersionAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getISpectrumDBVersionAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getISpectrumDBVersionOperationCompleted Is Nothing) Then
                Me.getISpectrumDBVersionOperationCompleted = AddressOf Me.OngetISpectrumDBVersionOperationCompleted
            End If
            Me.InvokeAsync("getISpectrumDBVersion", New Object() {ispecContext}, Me.getISpectrumDBVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OngetISpectrumDBVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.getISpectrumDBVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getISpectrumDBVersionCompleted(Me, New getISpectrumDBVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPreviousBizDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getPreviousBizDate(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getPreviousBizDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getPreviousBizDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getPreviousBizDate", New Object() {ispecContext})
            getPreviousBizDateResponse = CType(results(0),Date)
            getPreviousBizDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPreviousBizDateAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getPreviousBizDateAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPreviousBizDateAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getPreviousBizDateOperationCompleted Is Nothing) Then
                Me.getPreviousBizDateOperationCompleted = AddressOf Me.OngetPreviousBizDateOperationCompleted
            End If
            Me.InvokeAsync("getPreviousBizDate", New Object() {ispecContext}, Me.getPreviousBizDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPreviousBizDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPreviousBizDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPreviousBizDateCompleted(Me, New getPreviousBizDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByUserId", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByUserId(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByUserIdResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByUserId", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerByUserIdAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerByUserIdOperationCompleted Is Nothing) Then
                Me.getDrawerByUserIdOperationCompleted = AddressOf Me.OngetDrawerByUserIdOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByUserId", New Object() {ispecContext}, Me.getDrawerByUserIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByUserIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByUserIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByUserIdCompleted(Me, New getDrawerByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getUndoSuspenseDetails", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUndoSuspenseDetails(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getUndoSuspenseDetailsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsUndoSuspenseAmountInfo()
            Dim results() As Object = Me.Invoke("getUndoSuspenseDetails", New Object() {ispecContext})
            Return CType(results(0),wsUndoSuspenseAmountInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUndoSuspenseDetailsAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getUndoSuspenseDetailsAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUndoSuspenseDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getUndoSuspenseDetailsOperationCompleted Is Nothing) Then
                Me.getUndoSuspenseDetailsOperationCompleted = AddressOf Me.OngetUndoSuspenseDetailsOperationCompleted
            End If
            Me.InvokeAsync("getUndoSuspenseDetails", New Object() {ispecContext}, Me.getUndoSuspenseDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUndoSuspenseDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUndoSuspenseDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUndoSuspenseDetailsCompleted(Me, New getUndoSuspenseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByLogonName", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByLogonName(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByLogonNameResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByLogonName", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerByLogonNameAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerByLogonNameOperationCompleted Is Nothing) Then
                Me.getDrawerByLogonNameOperationCompleted = AddressOf Me.OngetDrawerByLogonNameOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByLogonName", New Object() {ispecContext}, Me.getDrawerByLogonNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByLogonNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByLogonNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByLogonNameCompleted(Me, New getDrawerByLogonNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByDrawerCode", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByDrawerCode(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByDrawerCodeResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByDrawerCode", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.getDrawerByDrawerCodeAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.getDrawerByDrawerCodeOperationCompleted Is Nothing) Then
                Me.getDrawerByDrawerCodeOperationCompleted = AddressOf Me.OngetDrawerByDrawerCodeOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByDrawerCode", New Object() {ispecContext, drawerCode}, Me.getDrawerByDrawerCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByDrawerCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByDrawerCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByDrawerCodeCompleted(Me, New getDrawerByDrawerCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAvailableDrawerList", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAvailableDrawerList(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getAvailableDrawerListResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAvailableDrawerList", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAvailableDrawerListAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getAvailableDrawerListAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAvailableDrawerListAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getAvailableDrawerListOperationCompleted Is Nothing) Then
                Me.getAvailableDrawerListOperationCompleted = AddressOf Me.OngetAvailableDrawerListOperationCompleted
            End If
            Me.InvokeAsync("getAvailableDrawerList", New Object() {ispecContext}, Me.getAvailableDrawerListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAvailableDrawerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAvailableDrawerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAvailableDrawerListCompleted(Me, New getAvailableDrawerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllDrawerList", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllDrawerList(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getAllDrawerListResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAllDrawerList", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getAllDrawerListAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getAllDrawerListOperationCompleted Is Nothing) Then
                Me.getAllDrawerListOperationCompleted = AddressOf Me.OngetAllDrawerListOperationCompleted
            End If
            Me.InvokeAsync("getAllDrawerList", New Object() {ispecContext}, Me.getAllDrawerListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllDrawerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllDrawerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllDrawerListCompleted(Me, New getAllDrawerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub openDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal doReset As Boolean)
            Me.Invoke("openDrawer", New Object() {ispecContext, drawerCode, doReset})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal doReset As Boolean)
            Me.openDrawerAsync(ispecContext, drawerCode, doReset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal doReset As Boolean, ByVal userState As Object)
            If (Me.openDrawerOperationCompleted Is Nothing) Then
                Me.openDrawerOperationCompleted = AddressOf Me.OnopenDrawerOperationCompleted
            End If
            Me.InvokeAsync("openDrawer", New Object() {ispecContext, drawerCode, doReset}, Me.openDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerAggregateByUserId", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerAggregateByUserId(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawerAggregateByUserIdResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerAggregateByUserId", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerAggregateByUserIdAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawerAggregateByUserIdAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerAggregateByUserIdAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawerAggregateByUserIdOperationCompleted Is Nothing) Then
                Me.getDrawerAggregateByUserIdOperationCompleted = AddressOf Me.OngetDrawerAggregateByUserIdOperationCompleted
            End If
            Me.InvokeAsync("getDrawerAggregateByUserId", New Object() {ispecContext}, Me.getDrawerAggregateByUserIdOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerAggregateByUserIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerAggregateByUserIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerAggregateByUserIdCompleted(Me, New getDrawerAggregateByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDefaultDrawerForUser", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function openDefaultDrawerForUser(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("openDefaultDrawerForUserResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("openDefaultDrawerForUser", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.openDefaultDrawerForUserAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.openDefaultDrawerForUserOperationCompleted Is Nothing) Then
                Me.openDefaultDrawerForUserOperationCompleted = AddressOf Me.OnopenDefaultDrawerForUserOperationCompleted
            End If
            Me.InvokeAsync("openDefaultDrawerForUser", New Object() {ispecContext}, Me.openDefaultDrawerForUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDefaultDrawerForUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDefaultDrawerForUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDefaultDrawerForUserCompleted(Me, New openDefaultDrawerForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getForcedClosed", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getForcedClosed(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("getForcedClosedResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getForcedClosed", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getForcedClosedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.getForcedClosedAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getForcedClosedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.getForcedClosedOperationCompleted Is Nothing) Then
                Me.getForcedClosedOperationCompleted = AddressOf Me.OngetForcedClosedOperationCompleted
            End If
            Me.InvokeAsync("getForcedClosed", New Object() {ispecContext, drawerCode}, Me.getForcedClosedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetForcedClosedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getForcedClosedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getForcedClosedCompleted(Me, New getForcedClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDefaultDrawerForUser", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDefaultDrawerForUser(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDefaultDrawerForUserResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDefaultDrawerForUser", New Object() {ispecContext})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDefaultDrawerForUserAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDefaultDrawerForUserAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDefaultDrawerForUserOperationCompleted Is Nothing) Then
                Me.getDefaultDrawerForUserOperationCompleted = AddressOf Me.OngetDefaultDrawerForUserOperationCompleted
            End If
            Me.InvokeAsync("getDefaultDrawerForUser", New Object() {ispecContext}, Me.getDefaultDrawerForUserOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDefaultDrawerForUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDefaultDrawerForUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDefaultDrawerForUserCompleted(Me, New getDefaultDrawerForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getInstitutionFtpPath", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getInstitutionFtpPath(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getInstitutionFtpPathResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getInstitutionFtpPath", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInstitutionFtpPathAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getInstitutionFtpPathAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInstitutionFtpPathAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getInstitutionFtpPathOperationCompleted Is Nothing) Then
                Me.getInstitutionFtpPathOperationCompleted = AddressOf Me.OngetInstitutionFtpPathOperationCompleted
            End If
            Me.InvokeAsync("getInstitutionFtpPath", New Object() {ispecContext}, Me.getInstitutionFtpPathOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInstitutionFtpPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInstitutionFtpPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInstitutionFtpPathCompleted(Me, New getInstitutionFtpPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getInstitutionPeriodicPath", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getInstitutionPeriodicPath(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getInstitutionPeriodicPathResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> String
            Dim results() As Object = Me.Invoke("getInstitutionPeriodicPath", New Object() {ispecContext})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getInstitutionPeriodicPathAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getInstitutionPeriodicPathAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getInstitutionPeriodicPathAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getInstitutionPeriodicPathOperationCompleted Is Nothing) Then
                Me.getInstitutionPeriodicPathOperationCompleted = AddressOf Me.OngetInstitutionPeriodicPathOperationCompleted
            End If
            Me.InvokeAsync("getInstitutionPeriodicPath", New Object() {ispecContext}, Me.getInstitutionPeriodicPathOperationCompleted, userState)
        End Sub
        
        Private Sub OngetInstitutionPeriodicPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.getInstitutionPeriodicPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getInstitutionPeriodicPathCompleted(Me, New getInstitutionPeriodicPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSystemDate", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getSystemDate(<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getSystemDateResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getSystemDateResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getSystemDate", New Object(-1) {})
            getSystemDateResponse = CType(results(0),Date)
            getSystemDateResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateAsync()
            Me.getSystemDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateAsync(ByVal userState As Object)
            If (Me.getSystemDateOperationCompleted Is Nothing) Then
                Me.getSystemDateOperationCompleted = AddressOf Me.OngetSystemDateOperationCompleted
            End If
            Me.InvokeAsync("getSystemDate", New Object(-1) {}, Me.getSystemDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSystemDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSystemDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSystemDateCompleted(Me, New getSystemDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:findDrawerDetails", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function findDrawerDetails(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String) As <System.Xml.Serialization.XmlElementAttribute("findDrawerDetailsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("findDrawerDetails", New Object() {ispecContext, drawerCode})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub findDrawerDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String)
            Me.findDrawerDetailsAsync(ispecContext, drawerCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub findDrawerDetailsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal userState As Object)
            If (Me.findDrawerDetailsOperationCompleted Is Nothing) Then
                Me.findDrawerDetailsOperationCompleted = AddressOf Me.OnfindDrawerDetailsOperationCompleted
            End If
            Me.InvokeAsync("findDrawerDetails", New Object() {ispecContext, drawerCode}, Me.findDrawerDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnfindDrawerDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.findDrawerDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent findDrawerDetailsCompleted(Me, New findDrawerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByPrimaryKey", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByPrimaryKey(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerId As Long) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByPrimaryKeyResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByPrimaryKey", New Object() {ispecContext, drawerId})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByPrimaryKeyAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerId As Long)
            Me.getDrawerByPrimaryKeyAsync(ispecContext, drawerId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByPrimaryKeyAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerId As Long, ByVal userState As Object)
            If (Me.getDrawerByPrimaryKeyOperationCompleted Is Nothing) Then
                Me.getDrawerByPrimaryKeyOperationCompleted = AddressOf Me.OngetDrawerByPrimaryKeyOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByPrimaryKey", New Object() {ispecContext, drawerId}, Me.getDrawerByPrimaryKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByPrimaryKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByPrimaryKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByPrimaryKeyCompleted(Me, New getDrawerByPrimaryKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:doDrawerAdjust", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub doDrawerAdjust(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute("wsinfo", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> ByVal wsinfo() As wsDrawerAdjustInfo)
            Me.Invoke("doDrawerAdjust", New Object() {ispecContext, wsinfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doDrawerAdjustAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsinfo() As wsDrawerAdjustInfo)
            Me.doDrawerAdjustAsync(ispecContext, wsinfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub doDrawerAdjustAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsinfo() As wsDrawerAdjustInfo, ByVal userState As Object)
            If (Me.doDrawerAdjustOperationCompleted Is Nothing) Then
                Me.doDrawerAdjustOperationCompleted = AddressOf Me.OndoDrawerAdjustOperationCompleted
            End If
            Me.InvokeAsync("doDrawerAdjust", New Object() {ispecContext, wsinfo}, Me.doDrawerAdjustOperationCompleted, userState)
        End Sub
        
        Private Sub OndoDrawerAdjustOperationCompleted(ByVal arg As Object)
            If (Not (Me.doDrawerAdjustCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent doDrawerAdjustCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createUpdateDeleteDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub createUpdateDeleteDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal wsdrawer As wsDrawerInfo)
            Me.Invoke("createUpdateDeleteDrawer", New Object() {ispecContext, wsdrawer})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUpdateDeleteDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsdrawer As wsDrawerInfo)
            Me.createUpdateDeleteDrawerAsync(ispecContext, wsdrawer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub createUpdateDeleteDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal wsdrawer As wsDrawerInfo, ByVal userState As Object)
            If (Me.createUpdateDeleteDrawerOperationCompleted Is Nothing) Then
                Me.createUpdateDeleteDrawerOperationCompleted = AddressOf Me.OncreateUpdateDeleteDrawerOperationCompleted
            End If
            Me.InvokeAsync("createUpdateDeleteDrawer", New Object() {ispecContext, wsdrawer}, Me.createUpdateDeleteDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OncreateUpdateDeleteDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.createUpdateDeleteDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent createUpdateDeleteDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:closeDrawer", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub closeDrawer(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo)
            Me.Invoke("closeDrawer", New Object() {ispecContext})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub closeDrawerAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.closeDrawerAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub closeDrawerAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.closeDrawerOperationCompleted Is Nothing) Then
                Me.closeDrawerOperationCompleted = AddressOf Me.OncloseDrawerOperationCompleted
            End If
            Me.InvokeAsync("closeDrawer", New Object() {ispecContext}, Me.closeDrawerOperationCompleted, userState)
        End Sub
        
        Private Sub OncloseDrawerOperationCompleted(ByVal arg As Object)
            If (Not (Me.closeDrawerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent closeDrawerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawersOnBranch", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawersOnBranch(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo) As <System.Xml.Serialization.XmlElementAttribute("getDrawersOnBranchResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawersOnBranchInfo()
            Dim results() As Object = Me.Invoke("getDrawersOnBranch", New Object() {ispecContext})
            Return CType(results(0),wsDrawersOnBranchInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawersOnBranchAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getDrawersOnBranchAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawersOnBranchAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getDrawersOnBranchOperationCompleted Is Nothing) Then
                Me.getDrawersOnBranchOperationCompleted = AddressOf Me.OngetDrawersOnBranchOperationCompleted
            End If
            Me.InvokeAsync("getDrawersOnBranch", New Object() {ispecContext}, Me.getDrawersOnBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawersOnBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawersOnBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawersOnBranchCompleted(Me, New getDrawersOnBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSystemDateForSchema", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub getSystemDateForSchema(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByRef getSystemDateForSchemaResponse As Date, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlIgnoreAttribute()> ByRef getSystemDateForSchemaResponseSpecified As Boolean)
            Dim results() As Object = Me.Invoke("getSystemDateForSchema", New Object() {ispecContext})
            getSystemDateForSchemaResponse = CType(results(0),Date)
            getSystemDateForSchemaResponseSpecified = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateForSchemaAsync(ByVal ispecContext() As wsOverrideInfo)
            Me.getSystemDateForSchemaAsync(ispecContext, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getSystemDateForSchemaAsync(ByVal ispecContext() As wsOverrideInfo, ByVal userState As Object)
            If (Me.getSystemDateForSchemaOperationCompleted Is Nothing) Then
                Me.getSystemDateForSchemaOperationCompleted = AddressOf Me.OngetSystemDateForSchemaOperationCompleted
            End If
            Me.InvokeAsync("getSystemDateForSchema", New Object() {ispecContext}, Me.getSystemDateForSchemaOperationCompleted, userState)
        End Sub
        
        Private Sub OngetSystemDateForSchemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.getSystemDateForSchemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getSystemDateForSchemaCompleted(Me, New getSystemDateForSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByUserIdAndFinControls", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByUserIdAndFinControls(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getFinControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByUserIdAndFinControlsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByUserIdAndFinControls", New Object() {ispecContext, getFinControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getFinControls As Boolean)
            Me.getDrawerByUserIdAndFinControlsAsync(ispecContext, getFinControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByUserIdAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getFinControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByUserIdAndFinControlsOperationCompleted Is Nothing) Then
                Me.getDrawerByUserIdAndFinControlsOperationCompleted = AddressOf Me.OngetDrawerByUserIdAndFinControlsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByUserIdAndFinControls", New Object() {ispecContext, getFinControls}, Me.getDrawerByUserIdAndFinControlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByUserIdAndFinControlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByUserIdAndFinControlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByUserIdAndFinControlsCompleted(Me, New getDrawerByUserIdAndFinControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByLogonNameAndFincontrols", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByLogonNameAndFincontrols(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal finControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByLogonNameAndFincontrolsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByLogonNameAndFincontrols", New Object() {ispecContext, finControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAndFincontrolsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal finControls As Boolean)
            Me.getDrawerByLogonNameAndFincontrolsAsync(ispecContext, finControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByLogonNameAndFincontrolsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal finControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByLogonNameAndFincontrolsOperationCompleted Is Nothing) Then
                Me.getDrawerByLogonNameAndFincontrolsOperationCompleted = AddressOf Me.OngetDrawerByLogonNameAndFincontrolsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByLogonNameAndFincontrols", New Object() {ispecContext, finControls}, Me.getDrawerByLogonNameAndFincontrolsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByLogonNameAndFincontrolsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByLogonNameAndFincontrolsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByLogonNameAndFincontrolsCompleted(Me, New getDrawerByLogonNameAndFincontrolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDrawerByDrawerCodeAndFinControls", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDrawerByDrawerCodeAndFinControls(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal drawerCode As String, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getFinControls As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getDrawerByDrawerCodeAndFinControlsResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("getDrawerByDrawerCodeAndFinControls", New Object() {ispecContext, drawerCode, getFinControls})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal getFinControls As Boolean)
            Me.getDrawerByDrawerCodeAndFinControlsAsync(ispecContext, drawerCode, getFinControls, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDrawerByDrawerCodeAndFinControlsAsync(ByVal ispecContext() As wsOverrideInfo, ByVal drawerCode As String, ByVal getFinControls As Boolean, ByVal userState As Object)
            If (Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted Is Nothing) Then
                Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted = AddressOf Me.OngetDrawerByDrawerCodeAndFinControlsOperationCompleted
            End If
            Me.InvokeAsync("getDrawerByDrawerCodeAndFinControls", New Object() {ispecContext, drawerCode, getFinControls}, Me.getDrawerByDrawerCodeAndFinControlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDrawerByDrawerCodeAndFinControlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDrawerByDrawerCodeAndFinControlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDrawerByDrawerCodeAndFinControlsCompleted(Me, New getDrawerByDrawerCodeAndFinControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllDrawerListByDeleted", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllDrawerListByDeleted(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal getDeleted As Boolean) As <System.Xml.Serialization.XmlElementAttribute("getAllDrawerListByDeletedResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)> wsDrawerInfo()
            Dim results() As Object = Me.Invoke("getAllDrawerListByDeleted", New Object() {ispecContext, getDeleted})
            Return CType(results(0),wsDrawerInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListByDeletedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getDeleted As Boolean)
            Me.getAllDrawerListByDeletedAsync(ispecContext, getDeleted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllDrawerListByDeletedAsync(ByVal ispecContext() As wsOverrideInfo, ByVal getDeleted As Boolean, ByVal userState As Object)
            If (Me.getAllDrawerListByDeletedOperationCompleted Is Nothing) Then
                Me.getAllDrawerListByDeletedOperationCompleted = AddressOf Me.OngetAllDrawerListByDeletedOperationCompleted
            End If
            Me.InvokeAsync("getAllDrawerListByDeleted", New Object() {ispecContext, getDeleted}, Me.getAllDrawerListByDeletedOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllDrawerListByDeletedOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllDrawerListByDeletedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllDrawerListByDeletedCompleted(Me, New getAllDrawerListByDeletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:openDefaultDrawerForUserByReset", RequestNamespace:="urn:connections.ispectrum.summitsite.com", ResponseNamespace:="urn:connections.ispectrum.summitsite.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function openDefaultDrawerForUserByReset(<System.Xml.Serialization.XmlArrayAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified), System.Xml.Serialization.XmlArrayItemAttribute("wsoverrideInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal ispecContext() As wsOverrideInfo, <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> ByVal doReset As Boolean) As <System.Xml.Serialization.XmlElementAttribute("openDefaultDrawerForUserByResetResponse", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)> wsDrawerInfo
            Dim results() As Object = Me.Invoke("openDefaultDrawerForUserByReset", New Object() {ispecContext, doReset})
            Return CType(results(0),wsDrawerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserByResetAsync(ByVal ispecContext() As wsOverrideInfo, ByVal doReset As Boolean)
            Me.openDefaultDrawerForUserByResetAsync(ispecContext, doReset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub openDefaultDrawerForUserByResetAsync(ByVal ispecContext() As wsOverrideInfo, ByVal doReset As Boolean, ByVal userState As Object)
            If (Me.openDefaultDrawerForUserByResetOperationCompleted Is Nothing) Then
                Me.openDefaultDrawerForUserByResetOperationCompleted = AddressOf Me.OnopenDefaultDrawerForUserByResetOperationCompleted
            End If
            Me.InvokeAsync("openDefaultDrawerForUserByReset", New Object() {ispecContext, doReset}, Me.openDefaultDrawerForUserByResetOperationCompleted, userState)
        End Sub
        
        Private Sub OnopenDefaultDrawerForUserByResetOperationCompleted(ByVal arg As Object)
            If (Not (Me.openDefaultDrawerForUserByResetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent openDefaultDrawerForUserByResetCompleted(Me, New openDefaultDrawerForUserByResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsOverrideInfo
        Inherits wsBaseInfo
        
        Private codeField As String
        
        Private credInfoField As wsCredentialInfo
        
        Private deniedReasonField As String
        
        Private descriptionIdField As Integer
        
        Private monetaryAccountsField() As wsMonetaryOverrideDescInfo
        
        Private overRideIdField As Integer
        
        Private overriddenField As Boolean
        
        Private overriddenByTransactionField As Boolean
        
        Private overrideCommentField As String
        
        Private priorityField As Integer
        
        Private prodCodeField As String
        
        Private remoteOverrideField As String
        
        Private rolesField() As wsRoleInfo
        
        Private useDefaultField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property credInfo() As wsCredentialInfo
            Get
                Return Me.credInfoField
            End Get
            Set
                Me.credInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deniedReason() As String
            Get
                Return Me.deniedReasonField
            End Get
            Set
                Me.deniedReasonField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property descriptionId() As Integer
            Get
                Return Me.descriptionIdField
            End Get
            Set
                Me.descriptionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("monetaryAccounts", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property monetaryAccounts() As wsMonetaryOverrideDescInfo()
            Get
                Return Me.monetaryAccountsField
            End Get
            Set
                Me.monetaryAccountsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property overRideId() As Integer
            Get
                Return Me.overRideIdField
            End Get
            Set
                Me.overRideIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property overridden() As Boolean
            Get
                Return Me.overriddenField
            End Get
            Set
                Me.overriddenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property overriddenByTransaction() As Boolean
            Get
                Return Me.overriddenByTransactionField
            End Get
            Set
                Me.overriddenByTransactionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property overrideComment() As String
            Get
                Return Me.overrideCommentField
            End Get
            Set
                Me.overrideCommentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property priority() As Integer
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property prodCode() As String
            Get
                Return Me.prodCodeField
            End Get
            Set
                Me.prodCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property remoteOverride() As String
            Get
                Return Me.remoteOverrideField
            End Get
            Set
                Me.remoteOverrideField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roles", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roles() As wsRoleInfo()
            Get
                Return Me.rolesField
            End Get
            Set
                Me.rolesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property useDefault() As Boolean
            Get
                Return Me.useDefaultField
            End Get
            Set
                Me.useDefaultField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsCredentialInfo
        
        Private deletedField As Integer
        
        Private lockedField As Boolean
        
        Private logonAttemptsField As Integer
        
        Private logonNameField As String
        
        Private logonStatusField As Integer
        
        Private passwordField As String
        
        Private passwordEncryptedField As Boolean
        
        Private passwordExpiryDateField As Date
        
        Private passwordExpiryDateFieldSpecified As Boolean
        
        Private summitGUIDField As String
        
        Private userAuthIdField As Integer
        
        Private virtualUserField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Integer
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property locked() As Boolean
            Get
                Return Me.lockedField
            End Get
            Set
                Me.lockedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property logonAttempts() As Integer
            Get
                Return Me.logonAttemptsField
            End Get
            Set
                Me.logonAttemptsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property logonName() As String
            Get
                Return Me.logonNameField
            End Get
            Set
                Me.logonNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property logonStatus() As Integer
            Get
                Return Me.logonStatusField
            End Get
            Set
                Me.logonStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property passwordEncrypted() As Boolean
            Get
                Return Me.passwordEncryptedField
            End Get
            Set
                Me.passwordEncryptedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property passwordExpiryDate() As Date
            Get
                Return Me.passwordExpiryDateField
            End Get
            Set
                Me.passwordExpiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property passwordExpiryDateSpecified() As Boolean
            Get
                Return Me.passwordExpiryDateFieldSpecified
            End Get
            Set
                Me.passwordExpiryDateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property summitGUID() As String
            Get
                Return Me.summitGUIDField
            End Get
            Set
                Me.summitGUIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property userAuthId() As Integer
            Get
                Return Me.userAuthIdField
            End Get
            Set
                Me.userAuthIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property virtualUser() As Boolean
            Get
                Return Me.virtualUserField
            End Get
            Set
                Me.virtualUserField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsDrawerAdjustInfo
        
        Private amountField As Long
        
        Private amountTypeField As Integer
        
        Private currencyTypeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property amount() As Long
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property amountType() As Integer
            Get
                Return Me.amountTypeField
            End Get
            Set
                Me.amountTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property currencyType() As String
            Get
                Return Me.currencyTypeField
            End Get
            Set
                Me.currencyTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsThirdPartyDetailInfo
        
        Private dataTypeField As String
        
        Private nameField As String
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property dataType() As String
            Get
                Return Me.dataTypeField
            End Get
            Set
                Me.dataTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsThirdPartyHeaderInfo
        
        Private descriptionField As String
        
        Private detailsField() As wsThirdPartyDetailInfo
        
        Private keyField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("details", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property details() As wsThirdPartyDetailInfo()
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property key() As String
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsThirdPartyInfo
        
        Private headerField() As wsThirdPartyHeaderInfo
        
        Private vendorCodeField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("header", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property header() As wsThirdPartyHeaderInfo()
            Get
                Return Me.headerField
            End Get
            Set
                Me.headerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property vendorCode() As String
            Get
                Return Me.vendorCodeField
            End Get
            Set
                Me.vendorCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(wsDrawersOnBranchInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsBusinessDateHistoryInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsDrawerFinControlInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsDrawerInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsUndoSuspenseAmountInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsRoleLimitsInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsMonTranInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsuiExtCustLinkAttribInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsuiCustomScriptInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsRuleScriptObjMapInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsuiExtCustLinkTokenInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsuiCustomizationInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsRoleMenuSubTabInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsMenuUrlSubTabInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsMenuSubTabInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsMenuInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsIndLoanAmtInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsFinancialControlInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsAssignmentInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsRoleInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsMonetaryOverrideDescInfo)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(wsOverrideInfo)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsBaseInfo
        
        Private actionCodeField As Integer
        
        Private inputField As wsThirdPartyInfo
        
        Private outputField As wsThirdPartyInfo
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property actionCode() As Integer
            Get
                Return Me.actionCodeField
            End Get
            Set
                Me.actionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property input() As wsThirdPartyInfo
            Get
                Return Me.inputField
            End Get
            Set
                Me.inputField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property output() As wsThirdPartyInfo
            Get
                Return Me.outputField
            End Get
            Set
                Me.outputField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsDrawersOnBranchInfo
        Inherits wsBaseInfo
        
        Private branchidField As Integer
        
        Private deletedField As Integer
        
        Private drawerCodeField As String
        
        Private drawerIdField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property branchid() As Integer
            Get
                Return Me.branchidField
            End Get
            Set
                Me.branchidField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Integer
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerCode() As String
            Get
                Return Me.drawerCodeField
            End Get
            Set
                Me.drawerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerId() As Integer
            Get
                Return Me.drawerIdField
            End Get
            Set
                Me.drawerIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsBusinessDateHistoryInfo
        Inherits wsBaseInfo
        
        Private businessDateField As Date
        
        Private businessDateFieldSpecified As Boolean
        
        Private endTimestampField As Date
        
        Private endTimestampFieldSpecified As Boolean
        
        Private startTimestampField As Date
        
        Private startTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property businessDate() As Date
            Get
                Return Me.businessDateField
            End Get
            Set
                Me.businessDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property businessDateSpecified() As Boolean
            Get
                Return Me.businessDateFieldSpecified
            End Get
            Set
                Me.businessDateFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property endTimestamp() As Date
            Get
                Return Me.endTimestampField
            End Get
            Set
                Me.endTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property endTimestampSpecified() As Boolean
            Get
                Return Me.endTimestampFieldSpecified
            End Get
            Set
                Me.endTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property startTimestamp() As Date
            Get
                Return Me.startTimestampField
            End Get
            Set
                Me.startTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property startTimestampSpecified() As Boolean
            Get
                Return Me.startTimestampFieldSpecified
            End Get
            Set
                Me.startTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsDrawerFinControlInfo
        Inherits wsBaseInfo
        
        Private currencyCodeField As String
        
        Private drawerFControlCreditField As Long
        
        Private drawerFControlDebitField As Long
        
        Private drawerFControlIdField As Integer
        
        Private drawerFinControlTypeField As String
        
        Private drawerIdField As Integer
        
        Private drawersFinControlStartBalField As Long
        
        Private financialControlCodeField As String
        
        Private financialControlDescriptionField As String
        
        Private financialControlIdField As Integer
        
        Private summitTypeField As String
        
        Private transTypeIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property currencyCode() As String
            Get
                Return Me.currencyCodeField
            End Get
            Set
                Me.currencyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerFControlCredit() As Long
            Get
                Return Me.drawerFControlCreditField
            End Get
            Set
                Me.drawerFControlCreditField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerFControlDebit() As Long
            Get
                Return Me.drawerFControlDebitField
            End Get
            Set
                Me.drawerFControlDebitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerFControlId() As Integer
            Get
                Return Me.drawerFControlIdField
            End Get
            Set
                Me.drawerFControlIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerFinControlType() As String
            Get
                Return Me.drawerFinControlTypeField
            End Get
            Set
                Me.drawerFinControlTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerId() As Integer
            Get
                Return Me.drawerIdField
            End Get
            Set
                Me.drawerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawersFinControlStartBal() As Long
            Get
                Return Me.drawersFinControlStartBalField
            End Get
            Set
                Me.drawersFinControlStartBalField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlCode() As String
            Get
                Return Me.financialControlCodeField
            End Get
            Set
                Me.financialControlCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlDescription() As String
            Get
                Return Me.financialControlDescriptionField
            End Get
            Set
                Me.financialControlDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlId() As Integer
            Get
                Return Me.financialControlIdField
            End Get
            Set
                Me.financialControlIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property summitType() As String
            Get
                Return Me.summitTypeField
            End Get
            Set
                Me.summitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property transTypeId() As Long
            Get
                Return Me.transTypeIdField
            End Get
            Set
                Me.transTypeIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsDrawerInfo
        Inherits wsBaseInfo
        
        Private acctCenterIdField As Integer
        
        Private acctCenterNameField As String
        
        Private branchIdField As Long
        
        Private cashInDeviceIdField As Integer
        
        Private cashOutDeviceIdField As Integer
        
        Private channelField As String
        
        Private coinDeviceField As String
        
        Private coinDevice1Field As String
        
        Private coinDevice2Field As String
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private deletedField As Integer
        
        Private dispensePositionField As String
        
        Private drawerCodeField As String
        
        Private drawerDescriptionField As String
        
        Private drawerFinControlInfosField() As wsDrawerFinControlInfo
        
        Private drawerIdField As Integer
        
        Private drawerIsOpenField As Boolean
        
        Private drawerTypeField As String
        
        Private drawerUsableField As Boolean
        
        Private forcedClosedField As Boolean
        
        Private previouslyUsedField As Boolean
        
        Private updateCounterField As Integer
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        Private userIdField As Integer
        
        Private userNameField As String
        
        Private virtualField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property acctCenterId() As Integer
            Get
                Return Me.acctCenterIdField
            End Get
            Set
                Me.acctCenterIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property acctCenterName() As String
            Get
                Return Me.acctCenterNameField
            End Get
            Set
                Me.acctCenterNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property branchId() As Long
            Get
                Return Me.branchIdField
            End Get
            Set
                Me.branchIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property cashInDeviceId() As Integer
            Get
                Return Me.cashInDeviceIdField
            End Get
            Set
                Me.cashInDeviceIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property cashOutDeviceId() As Integer
            Get
                Return Me.cashOutDeviceIdField
            End Get
            Set
                Me.cashOutDeviceIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property channel() As String
            Get
                Return Me.channelField
            End Get
            Set
                Me.channelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property coinDevice() As String
            Get
                Return Me.coinDeviceField
            End Get
            Set
                Me.coinDeviceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property coinDevice1() As String
            Get
                Return Me.coinDevice1Field
            End Get
            Set
                Me.coinDevice1Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property coinDevice2() As String
            Get
                Return Me.coinDevice2Field
            End Get
            Set
                Me.coinDevice2Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Integer
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property dispensePosition() As String
            Get
                Return Me.dispensePositionField
            End Get
            Set
                Me.dispensePositionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerCode() As String
            Get
                Return Me.drawerCodeField
            End Get
            Set
                Me.drawerCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerDescription() As String
            Get
                Return Me.drawerDescriptionField
            End Get
            Set
                Me.drawerDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("drawerFinControlInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property drawerFinControlInfos() As wsDrawerFinControlInfo()
            Get
                Return Me.drawerFinControlInfosField
            End Get
            Set
                Me.drawerFinControlInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerId() As Integer
            Get
                Return Me.drawerIdField
            End Get
            Set
                Me.drawerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerIsOpen() As Boolean
            Get
                Return Me.drawerIsOpenField
            End Get
            Set
                Me.drawerIsOpenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerType() As String
            Get
                Return Me.drawerTypeField
            End Get
            Set
                Me.drawerTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerUsable() As Boolean
            Get
                Return Me.drawerUsableField
            End Get
            Set
                Me.drawerUsableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property forcedClosed() As Boolean
            Get
                Return Me.forcedClosedField
            End Get
            Set
                Me.forcedClosedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property previouslyUsed() As Boolean
            Get
                Return Me.previouslyUsedField
            End Get
            Set
                Me.previouslyUsedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Integer
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property userId() As Integer
            Get
                Return Me.userIdField
            End Get
            Set
                Me.userIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property userName() As String
            Get
                Return Me.userNameField
            End Get
            Set
                Me.userNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property virtual() As Boolean
            Get
                Return Me.virtualField
            End Get
            Set
                Me.virtualField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsUndoSuspenseAmountInfo
        Inherits wsBaseInfo
        
        Private currencyField As String
        
        Private totalAmountField As Long
        
        Private undoSuspenseFinControlIdField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property totalAmount() As Long
            Get
                Return Me.totalAmountField
            End Get
            Set
                Me.totalAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property undoSuspenseFinControlId() As Long
            Get
                Return Me.undoSuspenseFinControlIdField
            End Get
            Set
                Me.undoSuspenseFinControlIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsRoleLimitsInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private enca_fieldDescriptionField As String
        
        Private fieldCodeField As String
        
        Private frca_fieldDescriptionField As String
        
        Private limitField As Long
        
        Private roleIdField As Long
        
        Private roleLimitsIdField As Long
        
        Private roleNameField As String
        
        Private updateCounterField As Integer
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property enca_fieldDescription() As String
            Get
                Return Me.enca_fieldDescriptionField
            End Get
            Set
                Me.enca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldCode() As String
            Get
                Return Me.fieldCodeField
            End Get
            Set
                Me.fieldCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property frca_fieldDescription() As String
            Get
                Return Me.frca_fieldDescriptionField
            End Get
            Set
                Me.frca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property limit() As Long
            Get
                Return Me.limitField
            End Get
            Set
                Me.limitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleId() As Long
            Get
                Return Me.roleIdField
            End Get
            Set
                Me.roleIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleLimitsId() As Long
            Get
                Return Me.roleLimitsIdField
            End Get
            Set
                Me.roleLimitsIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleName() As String
            Get
                Return Me.roleNameField
            End Get
            Set
                Me.roleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Integer
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsMonTranInfo
        Inherits wsBaseInfo
        
        Private enca_fieldDescriptionField As String
        
        Private fieldCodeField As String
        
        Private fieldIdField As Integer
        
        Private fieldtypeField As String
        
        Private frca_fieldDescriptionField As String
        
        Private monTranIdField As Integer
        
        Private roleIdField As Integer
        
        Private roleMonTranIdField As Integer
        
        Private transactionAmountLimitField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property enca_fieldDescription() As String
            Get
                Return Me.enca_fieldDescriptionField
            End Get
            Set
                Me.enca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldCode() As String
            Get
                Return Me.fieldCodeField
            End Get
            Set
                Me.fieldCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldId() As Integer
            Get
                Return Me.fieldIdField
            End Get
            Set
                Me.fieldIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldtype() As String
            Get
                Return Me.fieldtypeField
            End Get
            Set
                Me.fieldtypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property frca_fieldDescription() As String
            Get
                Return Me.frca_fieldDescriptionField
            End Get
            Set
                Me.frca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monTranId() As Integer
            Get
                Return Me.monTranIdField
            End Get
            Set
                Me.monTranIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleId() As Integer
            Get
                Return Me.roleIdField
            End Get
            Set
                Me.roleIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleMonTranId() As Integer
            Get
                Return Me.roleMonTranIdField
            End Get
            Set
                Me.roleMonTranIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property transactionAmountLimit() As Long
            Get
                Return Me.transactionAmountLimitField
            End Get
            Set
                Me.transactionAmountLimitField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsuiExtCustLinkAttribInfo
        Inherits wsBaseInfo
        
        Private attribTypeField As String
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private deletedField As Long
        
        Private nameField As String
        
        Private uiCustomizationIdField As Long
        
        Private uiExtCustLinkAttribIdField As Long
        
        Private updateCounterField As Long
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        Private valueField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property attribType() As String
            Get
                Return Me.attribTypeField
            End Get
            Set
                Me.attribTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Long
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomizationId() As Long
            Get
                Return Me.uiCustomizationIdField
            End Get
            Set
                Me.uiCustomizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiExtCustLinkAttribId() As Long
            Get
                Return Me.uiExtCustLinkAttribIdField
            End Get
            Set
                Me.uiExtCustLinkAttribIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Long
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsuiCustomScriptInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private deletedField As Long
        
        Private scriptTextField As String
        
        Private scriptTypeField As String
        
        Private uiCustomScriptIdField As Long
        
        Private uiCustomizationIdField As Long
        
        Private updateCounterField As Long
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Long
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property scriptText() As String
            Get
                Return Me.scriptTextField
            End Get
            Set
                Me.scriptTextField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property scriptType() As String
            Get
                Return Me.scriptTypeField
            End Get
            Set
                Me.scriptTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomScriptId() As Long
            Get
                Return Me.uiCustomScriptIdField
            End Get
            Set
                Me.uiCustomScriptIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomizationId() As Long
            Get
                Return Me.uiCustomizationIdField
            End Get
            Set
                Me.uiCustomizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Long
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsRuleScriptObjMapInfo
        Inherits wsBaseInfo
        
        Private createTimeStampField As Date
        
        Private createTimeStampFieldSpecified As Boolean
        
        Private deletedField As Integer
        
        Private objAttribField As String
        
        Private objAttribTypeField As String
        
        Private objJSPathField As String
        
        Private objTypeField As String
        
        Private objTypeIdField As Long
        
        Private ruleScriptObjMapIdField As Long
        
        Private updateTimeStampField As Date
        
        Private updateTimeStampFieldSpecified As Boolean
        
        Private updatecounterField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimeStamp() As Date
            Get
                Return Me.createTimeStampField
            End Get
            Set
                Me.createTimeStampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimeStampSpecified() As Boolean
            Get
                Return Me.createTimeStampFieldSpecified
            End Get
            Set
                Me.createTimeStampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Integer
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property objAttrib() As String
            Get
                Return Me.objAttribField
            End Get
            Set
                Me.objAttribField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property objAttribType() As String
            Get
                Return Me.objAttribTypeField
            End Get
            Set
                Me.objAttribTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property objJSPath() As String
            Get
                Return Me.objJSPathField
            End Get
            Set
                Me.objJSPathField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property objType() As String
            Get
                Return Me.objTypeField
            End Get
            Set
                Me.objTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property objTypeId() As Long
            Get
                Return Me.objTypeIdField
            End Get
            Set
                Me.objTypeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property ruleScriptObjMapId() As Long
            Get
                Return Me.ruleScriptObjMapIdField
            End Get
            Set
                Me.ruleScriptObjMapIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimeStamp() As Date
            Get
                Return Me.updateTimeStampField
            End Get
            Set
                Me.updateTimeStampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimeStampSpecified() As Boolean
            Get
                Return Me.updateTimeStampFieldSpecified
            End Get
            Set
                Me.updateTimeStampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updatecounter() As Integer
            Get
                Return Me.updatecounterField
            End Get
            Set
                Me.updatecounterField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsuiExtCustLinkTokenInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private deletedField As Long
        
        Private ruleScriptObjMapInfoField As wsRuleScriptObjMapInfo
        
        Private sourceAttributeField As String
        
        Private sourceClassNameField As String
        
        Private tokenMapIdField As Long
        
        Private tokenNameField As String
        
        Private tokenTypeField As Integer
        
        Private uiCustomizationIdField As Long
        
        Private uiExtCustLinkTokenIdField As Long
        
        Private updateCounterField As Long
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Long
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property ruleScriptObjMapInfo() As wsRuleScriptObjMapInfo
            Get
                Return Me.ruleScriptObjMapInfoField
            End Get
            Set
                Me.ruleScriptObjMapInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property sourceAttribute() As String
            Get
                Return Me.sourceAttributeField
            End Get
            Set
                Me.sourceAttributeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property sourceClassName() As String
            Get
                Return Me.sourceClassNameField
            End Get
            Set
                Me.sourceClassNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property tokenMapId() As Long
            Get
                Return Me.tokenMapIdField
            End Get
            Set
                Me.tokenMapIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property tokenName() As String
            Get
                Return Me.tokenNameField
            End Get
            Set
                Me.tokenNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property tokenType() As Integer
            Get
                Return Me.tokenTypeField
            End Get
            Set
                Me.tokenTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomizationId() As Long
            Get
                Return Me.uiCustomizationIdField
            End Get
            Set
                Me.uiCustomizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiExtCustLinkTokenId() As Long
            Get
                Return Me.uiExtCustLinkTokenIdField
            End Get
            Set
                Me.uiExtCustLinkTokenIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Long
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsuiCustomizationInfo
        Inherits wsBaseInfo
        
        Private activeField As Boolean
        
        Private appendToPageField As Boolean
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private customTokensField() As wsuiExtCustLinkTokenInfo
        
        Private customXHTMLField() As wsuiCustomScriptInfo
        
        Private deletedField As Long
        
        Private descriptionField As String
        
        Private displayInPopupField As Boolean
        
        Private displayInSliderField As Boolean
        
        Private draggableFrameField As Boolean
        
        Private frameHeightField As Integer
        
        Private frameWidthField As Integer
        
        Private menuURLField As String
        
        Private resizableFrameField As Boolean
        
        Private scrollableFrameField As Boolean
        
        Private titleField As String
        
        Private uiCustomizationIdField As Long
        
        Private updateCounterField As Long
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        Private urlField As String
        
        Private urlAttributesField() As wsuiExtCustLinkAttribInfo
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property appendToPage() As Boolean
            Get
                Return Me.appendToPageField
            End Get
            Set
                Me.appendToPageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("customTokens", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property customTokens() As wsuiExtCustLinkTokenInfo()
            Get
                Return Me.customTokensField
            End Get
            Set
                Me.customTokensField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("customXHTML", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property customXHTML() As wsuiCustomScriptInfo()
            Get
                Return Me.customXHTMLField
            End Get
            Set
                Me.customXHTMLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property deleted() As Long
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property displayInPopup() As Boolean
            Get
                Return Me.displayInPopupField
            End Get
            Set
                Me.displayInPopupField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property displayInSlider() As Boolean
            Get
                Return Me.displayInSliderField
            End Get
            Set
                Me.displayInSliderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property draggableFrame() As Boolean
            Get
                Return Me.draggableFrameField
            End Get
            Set
                Me.draggableFrameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property frameHeight() As Integer
            Get
                Return Me.frameHeightField
            End Get
            Set
                Me.frameHeightField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property frameWidth() As Integer
            Get
                Return Me.frameWidthField
            End Get
            Set
                Me.frameWidthField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuURL() As String
            Get
                Return Me.menuURLField
            End Get
            Set
                Me.menuURLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property resizableFrame() As Boolean
            Get
                Return Me.resizableFrameField
            End Get
            Set
                Me.resizableFrameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property scrollableFrame() As Boolean
            Get
                Return Me.scrollableFrameField
            End Get
            Set
                Me.scrollableFrameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomizationId() As Long
            Get
                Return Me.uiCustomizationIdField
            End Get
            Set
                Me.uiCustomizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Long
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property url() As String
            Get
                Return Me.urlField
            End Get
            Set
                Me.urlField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("urlAttributes", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property urlAttributes() As wsuiExtCustLinkAttribInfo()
            Get
                Return Me.urlAttributesField
            End Get
            Set
                Me.urlAttributesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsRoleMenuSubTabInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private menuSubTabIdField As Long
        
        Private roleIdField As Long
        
        Private roleMenuSubTabIdField As Long
        
        Private updateCounterField As Integer
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuSubTabId() As Long
            Get
                Return Me.menuSubTabIdField
            End Get
            Set
                Me.menuSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleId() As Long
            Get
                Return Me.roleIdField
            End Get
            Set
                Me.roleIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleMenuSubTabId() As Long
            Get
                Return Me.roleMenuSubTabIdField
            End Get
            Set
                Me.roleMenuSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Integer
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsMenuUrlSubTabInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private menuUrlIdField As Long
        
        Private menuUrlSubTabIdField As Long
        
        Private parentMenuUrlSubTabIdField As Long
        
        Private subTabDivIdAttributeField As String
        
        Private tabNameField As String
        
        Private updateCounterField As Integer
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuUrlId() As Long
            Get
                Return Me.menuUrlIdField
            End Get
            Set
                Me.menuUrlIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuUrlSubTabId() As Long
            Get
                Return Me.menuUrlSubTabIdField
            End Get
            Set
                Me.menuUrlSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property parentMenuUrlSubTabId() As Long
            Get
                Return Me.parentMenuUrlSubTabIdField
            End Get
            Set
                Me.parentMenuUrlSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property subTabDivIdAttribute() As String
            Get
                Return Me.subTabDivIdAttributeField
            End Get
            Set
                Me.subTabDivIdAttributeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property tabName() As String
            Get
                Return Me.tabNameField
            End Get
            Set
                Me.tabNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Integer
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsMenuSubTabInfo
        Inherits wsBaseInfo
        
        Private createTimestampField As Date
        
        Private createTimestampFieldSpecified As Boolean
        
        Private menuIdField As Long
        
        Private menuSubTabIdField As Long
        
        Private menuUrlSubTabIdField As Long
        
        Private menuUrlSubTabInfoField As wsMenuUrlSubTabInfo
        
        Private roleMenuSubTabInfosField() As wsRoleMenuSubTabInfo
        
        Private updateCounterField As Integer
        
        Private updateTimestampField As Date
        
        Private updateTimestampFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property createTimestamp() As Date
            Get
                Return Me.createTimestampField
            End Get
            Set
                Me.createTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property createTimestampSpecified() As Boolean
            Get
                Return Me.createTimestampFieldSpecified
            End Get
            Set
                Me.createTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuId() As Long
            Get
                Return Me.menuIdField
            End Get
            Set
                Me.menuIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuSubTabId() As Long
            Get
                Return Me.menuSubTabIdField
            End Get
            Set
                Me.menuSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuUrlSubTabId() As Long
            Get
                Return Me.menuUrlSubTabIdField
            End Get
            Set
                Me.menuUrlSubTabIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuUrlSubTabInfo() As wsMenuUrlSubTabInfo
            Get
                Return Me.menuUrlSubTabInfoField
            End Get
            Set
                Me.menuUrlSubTabInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roleMenuSubTabInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roleMenuSubTabInfos() As wsRoleMenuSubTabInfo()
            Get
                Return Me.roleMenuSubTabInfosField
            End Get
            Set
                Me.roleMenuSubTabInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateCounter() As Integer
            Get
                Return Me.updateCounterField
            End Get
            Set
                Me.updateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property updateTimestamp() As Date
            Get
                Return Me.updateTimestampField
            End Get
            Set
                Me.updateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property updateTimestampSpecified() As Boolean
            Get
                Return Me.updateTimestampFieldSpecified
            End Get
            Set
                Me.updateTimestampFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsMenuInfo
        Inherits wsBaseInfo
        
        Private depthField As Integer
        
        Private descriptionEnField As String
        
        Private descriptionFrField As String
        
        Private descriptionIdField As Integer
        
        Private menuCodeField As String
        
        Private menuCreateTimestampField As Date
        
        Private menuCreateTimestampFieldSpecified As Boolean
        
        Private menuIdField As Integer
        
        Private menuLoadFrameLocationField As String
        
        Private menuLocationField As String
        
        Private menuParentIdField As Integer
        
        Private menuSequenceField As Integer
        
        Private menuSubTabInfosField() As wsMenuSubTabInfo
        
        Private menuURLField As String
        
        Private menuUpdateCounterField As Integer
        
        Private openInNewWinField As Boolean
        
        Private readOnlyField As Boolean
        
        Private roleInfosField() As wsRoleInfo
        
        Private uiCustomizationField As wsuiCustomizationInfo
        
        Private uiCustomizationIdField As Long
        
        Private userDefinedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property depth() As Integer
            Get
                Return Me.depthField
            End Get
            Set
                Me.depthField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property descriptionEn() As String
            Get
                Return Me.descriptionEnField
            End Get
            Set
                Me.descriptionEnField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property descriptionFr() As String
            Get
                Return Me.descriptionFrField
            End Get
            Set
                Me.descriptionFrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property descriptionId() As Integer
            Get
                Return Me.descriptionIdField
            End Get
            Set
                Me.descriptionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuCode() As String
            Get
                Return Me.menuCodeField
            End Get
            Set
                Me.menuCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuCreateTimestamp() As Date
            Get
                Return Me.menuCreateTimestampField
            End Get
            Set
                Me.menuCreateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property menuCreateTimestampSpecified() As Boolean
            Get
                Return Me.menuCreateTimestampFieldSpecified
            End Get
            Set
                Me.menuCreateTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuId() As Integer
            Get
                Return Me.menuIdField
            End Get
            Set
                Me.menuIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuLoadFrameLocation() As String
            Get
                Return Me.menuLoadFrameLocationField
            End Get
            Set
                Me.menuLoadFrameLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuLocation() As String
            Get
                Return Me.menuLocationField
            End Get
            Set
                Me.menuLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuParentId() As Integer
            Get
                Return Me.menuParentIdField
            End Get
            Set
                Me.menuParentIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuSequence() As Integer
            Get
                Return Me.menuSequenceField
            End Get
            Set
                Me.menuSequenceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("menuSubTabInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property menuSubTabInfos() As wsMenuSubTabInfo()
            Get
                Return Me.menuSubTabInfosField
            End Get
            Set
                Me.menuSubTabInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuURL() As String
            Get
                Return Me.menuURLField
            End Get
            Set
                Me.menuURLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property menuUpdateCounter() As Integer
            Get
                Return Me.menuUpdateCounterField
            End Get
            Set
                Me.menuUpdateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property openInNewWin() As Boolean
            Get
                Return Me.openInNewWinField
            End Get
            Set
                Me.openInNewWinField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property [readOnly]() As Boolean
            Get
                Return Me.readOnlyField
            End Get
            Set
                Me.readOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roleInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roleInfos() As wsRoleInfo()
            Get
                Return Me.roleInfosField
            End Get
            Set
                Me.roleInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomization() As wsuiCustomizationInfo
            Get
                Return Me.uiCustomizationField
            End Get
            Set
                Me.uiCustomizationField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property uiCustomizationId() As Long
            Get
                Return Me.uiCustomizationIdField
            End Get
            Set
                Me.uiCustomizationIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property userDefined() As Boolean
            Get
                Return Me.userDefinedField
            End Get
            Set
                Me.userDefinedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsRoleInfo
        Inherits wsBaseInfo
        
        Private accessLevelField As Integer
        
        Private allLoansLimitField As Long
        
        Private assignmentsField() As wsAssignmentInfo
        
        Private depositLimitField As Long
        
        Private drawerCashLimitField As Long
        
        Private financialControlsField() As wsFinancialControlInfo
        
        Private indLoanAmtsField() As wsIndLoanAmtInfo
        
        Private institutionDefinedLoanLimitField As Long
        
        Private journalEntryLimitField As Long
        
        Private menuInfosField() As wsMenuInfo
        
        Private monTranInfosField() As wsMonTranInfo
        
        Private monTransField() As wsMonTranInfo
        
        Private mortgageLimitField As Long
        
        Private overRidesField() As wsOverrideInfo
        
        Private roleCodeField As String
        
        Private roleCreateTimestampField As Date
        
        Private roleCreateTimestampFieldSpecified As Boolean
        
        Private roleDescriptionField As String
        
        Private roleIdField As Integer
        
        Private roleLimitsInfosField() As wsRoleLimitsInfo
        
        Private roleMenuIdField As Integer
        
        Private roleNameField As String
        
        Private roleUpdateCounterField As Integer
        
        Private securedLimitField As Long
        
        Private unsecuredLimitField As Long
        
        Private withdrawalLimitField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property accessLevel() As Integer
            Get
                Return Me.accessLevelField
            End Get
            Set
                Me.accessLevelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property allLoansLimit() As Long
            Get
                Return Me.allLoansLimitField
            End Get
            Set
                Me.allLoansLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("assignments", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property assignments() As wsAssignmentInfo()
            Get
                Return Me.assignmentsField
            End Get
            Set
                Me.assignmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property depositLimit() As Long
            Get
                Return Me.depositLimitField
            End Get
            Set
                Me.depositLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property drawerCashLimit() As Long
            Get
                Return Me.drawerCashLimitField
            End Get
            Set
                Me.drawerCashLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("financialControls", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property financialControls() As wsFinancialControlInfo()
            Get
                Return Me.financialControlsField
            End Get
            Set
                Me.financialControlsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("indLoanAmts", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property indLoanAmts() As wsIndLoanAmtInfo()
            Get
                Return Me.indLoanAmtsField
            End Get
            Set
                Me.indLoanAmtsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property institutionDefinedLoanLimit() As Long
            Get
                Return Me.institutionDefinedLoanLimitField
            End Get
            Set
                Me.institutionDefinedLoanLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property journalEntryLimit() As Long
            Get
                Return Me.journalEntryLimitField
            End Get
            Set
                Me.journalEntryLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("menuInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property menuInfos() As wsMenuInfo()
            Get
                Return Me.menuInfosField
            End Get
            Set
                Me.menuInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("monTranInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property monTranInfos() As wsMonTranInfo()
            Get
                Return Me.monTranInfosField
            End Get
            Set
                Me.monTranInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("monTrans", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property monTrans() As wsMonTranInfo()
            Get
                Return Me.monTransField
            End Get
            Set
                Me.monTransField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property mortgageLimit() As Long
            Get
                Return Me.mortgageLimitField
            End Get
            Set
                Me.mortgageLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("overRides", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property [overRides]() As wsOverrideInfo()
            Get
                Return Me.overRidesField
            End Get
            Set
                Me.overRidesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleCode() As String
            Get
                Return Me.roleCodeField
            End Get
            Set
                Me.roleCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleCreateTimestamp() As Date
            Get
                Return Me.roleCreateTimestampField
            End Get
            Set
                Me.roleCreateTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property roleCreateTimestampSpecified() As Boolean
            Get
                Return Me.roleCreateTimestampFieldSpecified
            End Get
            Set
                Me.roleCreateTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleDescription() As String
            Get
                Return Me.roleDescriptionField
            End Get
            Set
                Me.roleDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleId() As Integer
            Get
                Return Me.roleIdField
            End Get
            Set
                Me.roleIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roleLimitsInfos", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roleLimitsInfos() As wsRoleLimitsInfo()
            Get
                Return Me.roleLimitsInfosField
            End Get
            Set
                Me.roleLimitsInfosField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleMenuId() As Integer
            Get
                Return Me.roleMenuIdField
            End Get
            Set
                Me.roleMenuIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleName() As String
            Get
                Return Me.roleNameField
            End Get
            Set
                Me.roleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleUpdateCounter() As Integer
            Get
                Return Me.roleUpdateCounterField
            End Get
            Set
                Me.roleUpdateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property securedLimit() As Long
            Get
                Return Me.securedLimitField
            End Get
            Set
                Me.securedLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property unsecuredLimit() As Long
            Get
                Return Me.unsecuredLimitField
            End Get
            Set
                Me.unsecuredLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property withdrawalLimit() As Long
            Get
                Return Me.withdrawalLimitField
            End Get
            Set
                Me.withdrawalLimitField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsAssignmentInfo
        Inherits wsBaseInfo
        
        Private enca_fieldDescriptionField As String
        
        Private fieldCodeAssignField As String
        
        Private fieldIdField As Integer
        
        Private fieldtypeField As String
        
        Private frca_fieldDescriptionField As String
        
        Private roleAssignIdField As Integer
        
        Private rolesField() As wsRoleInfo
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property enca_fieldDescription() As String
            Get
                Return Me.enca_fieldDescriptionField
            End Get
            Set
                Me.enca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldCodeAssign() As String
            Get
                Return Me.fieldCodeAssignField
            End Get
            Set
                Me.fieldCodeAssignField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldId() As Integer
            Get
                Return Me.fieldIdField
            End Get
            Set
                Me.fieldIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property fieldtype() As String
            Get
                Return Me.fieldtypeField
            End Get
            Set
                Me.fieldtypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property frca_fieldDescription() As String
            Get
                Return Me.frca_fieldDescriptionField
            End Get
            Set
                Me.frca_fieldDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleAssignId() As Integer
            Get
                Return Me.roleAssignIdField
            End Get
            Set
                Me.roleAssignIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roles", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roles() As wsRoleInfo()
            Get
                Return Me.rolesField
            End Get
            Set
                Me.rolesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsFinancialControlInfo
        Inherits wsBaseInfo
        
        Private categoryCodeField As String
        
        Private displayGLField As Integer
        
        Private financialControl3PtyGLField As String
        
        Private financialControlActionField As String
        
        Private financialControlCodeField As String
        
        Private financialControlCreditField As Long
        
        Private financialControlCurrencyCodeField As String
        
        Private financialControlDebitField As Long
        
        Private financialControlDescriptionField As String
        
        Private financialControlDescriptionFrField As String
        
        Private financialControlDescription_EnField As String
        
        Private financialControlGLExtractField As String
        
        Private financialControlIdField As Integer
        
        Private financialControlMICRNumberField As String
        
        Private financialControlTimestampField As Date
        
        Private financialControlTimestampFieldSpecified As Boolean
        
        Private financialControlTypeIdField As Integer
        
        Private financialControlUpdateCounterField As Integer
        
        Private monHistPurgeDescriptionField As String
        
        Private monHistPurgeRetentionPeriodField As Long
        
        Private monHistToBePurgedField As Boolean
        
        Private monetaryInstrumentField As Boolean
        
        Private regulatoryReportTypeField As String
        
        Private summitTypeField As String
        
        Private typeCodeField As String
        
        Private typeGroupField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property categoryCode() As String
            Get
                Return Me.categoryCodeField
            End Get
            Set
                Me.categoryCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property displayGL() As Integer
            Get
                Return Me.displayGLField
            End Get
            Set
                Me.displayGLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControl3PtyGL() As String
            Get
                Return Me.financialControl3PtyGLField
            End Get
            Set
                Me.financialControl3PtyGLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlAction() As String
            Get
                Return Me.financialControlActionField
            End Get
            Set
                Me.financialControlActionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlCode() As String
            Get
                Return Me.financialControlCodeField
            End Get
            Set
                Me.financialControlCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlCredit() As Long
            Get
                Return Me.financialControlCreditField
            End Get
            Set
                Me.financialControlCreditField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlCurrencyCode() As String
            Get
                Return Me.financialControlCurrencyCodeField
            End Get
            Set
                Me.financialControlCurrencyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlDebit() As Long
            Get
                Return Me.financialControlDebitField
            End Get
            Set
                Me.financialControlDebitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlDescription() As String
            Get
                Return Me.financialControlDescriptionField
            End Get
            Set
                Me.financialControlDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlDescriptionFr() As String
            Get
                Return Me.financialControlDescriptionFrField
            End Get
            Set
                Me.financialControlDescriptionFrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlDescription_En() As String
            Get
                Return Me.financialControlDescription_EnField
            End Get
            Set
                Me.financialControlDescription_EnField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlGLExtract() As String
            Get
                Return Me.financialControlGLExtractField
            End Get
            Set
                Me.financialControlGLExtractField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlId() As Integer
            Get
                Return Me.financialControlIdField
            End Get
            Set
                Me.financialControlIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlMICRNumber() As String
            Get
                Return Me.financialControlMICRNumberField
            End Get
            Set
                Me.financialControlMICRNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlTimestamp() As Date
            Get
                Return Me.financialControlTimestampField
            End Get
            Set
                Me.financialControlTimestampField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property financialControlTimestampSpecified() As Boolean
            Get
                Return Me.financialControlTimestampFieldSpecified
            End Get
            Set
                Me.financialControlTimestampFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlTypeId() As Integer
            Get
                Return Me.financialControlTypeIdField
            End Get
            Set
                Me.financialControlTypeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlUpdateCounter() As Integer
            Get
                Return Me.financialControlUpdateCounterField
            End Get
            Set
                Me.financialControlUpdateCounterField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monHistPurgeDescription() As String
            Get
                Return Me.monHistPurgeDescriptionField
            End Get
            Set
                Me.monHistPurgeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monHistPurgeRetentionPeriod() As Long
            Get
                Return Me.monHistPurgeRetentionPeriodField
            End Get
            Set
                Me.monHistPurgeRetentionPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monHistToBePurged() As Boolean
            Get
                Return Me.monHistToBePurgedField
            End Get
            Set
                Me.monHistToBePurgedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monetaryInstrument() As Boolean
            Get
                Return Me.monetaryInstrumentField
            End Get
            Set
                Me.monetaryInstrumentField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property regulatoryReportType() As String
            Get
                Return Me.regulatoryReportTypeField
            End Get
            Set
                Me.regulatoryReportTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property summitType() As String
            Get
                Return Me.summitTypeField
            End Get
            Set
                Me.summitTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeCode() As String
            Get
                Return Me.typeCodeField
            End Get
            Set
                Me.typeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeGroup() As String
            Get
                Return Me.typeGroupField
            End Get
            Set
                Me.typeGroupField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsIndLoanAmtInfo
        Inherits wsBaseInfo
        
        Private categoryCodeField As String
        
        Private categoryDescriptionField As String
        
        Private categoryDescription_FrField As String
        
        Private codeField As String
        
        Private financialControlTypeIdField As Integer
        
        Private indLoanAmtIdField As Integer
        
        Private loanAmountLimitField As Long
        
        Private roleIdField As Integer
        
        Private rolesField() As wsRoleInfo
        
        Private typeCodeField As String
        
        Private typeDescriptionField As String
        
        Private typeDescription_FrField As String
        
        Private typeGroupField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property categoryCode() As String
            Get
                Return Me.categoryCodeField
            End Get
            Set
                Me.categoryCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property categoryDescription() As String
            Get
                Return Me.categoryDescriptionField
            End Get
            Set
                Me.categoryDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property categoryDescription_Fr() As String
            Get
                Return Me.categoryDescription_FrField
            End Get
            Set
                Me.categoryDescription_FrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property financialControlTypeId() As Integer
            Get
                Return Me.financialControlTypeIdField
            End Get
            Set
                Me.financialControlTypeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property indLoanAmtId() As Integer
            Get
                Return Me.indLoanAmtIdField
            End Get
            Set
                Me.indLoanAmtIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property loanAmountLimit() As Long
            Get
                Return Me.loanAmountLimitField
            End Get
            Set
                Me.loanAmountLimitField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property roleId() As Integer
            Get
                Return Me.roleIdField
            End Get
            Set
                Me.roleIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("roles", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=true)>  _
        Public Property roles() As wsRoleInfo()
            Get
                Return Me.rolesField
            End Get
            Set
                Me.rolesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeCode() As String
            Get
                Return Me.typeCodeField
            End Get
            Set
                Me.typeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeDescription() As String
            Get
                Return Me.typeDescriptionField
            End Get
            Set
                Me.typeDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeDescription_Fr() As String
            Get
                Return Me.typeDescription_FrField
            End Get
            Set
                Me.typeDescription_FrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property typeGroup() As String
            Get
                Return Me.typeGroupField
            End Get
            Set
                Me.typeGroupField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="urn:connections.ispectrum.summitsite.com")>  _
    Partial Public Class wsMonetaryOverrideDescInfo
        Inherits wsBaseInfo
        
        Private messageField As String
        
        Private monAccPortfolioField As Long
        
        Private monAccSuffixField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monAccPortfolio() As Long
            Get
                Return Me.monAccPortfolioField
            End Get
            Set
                Me.monAccPortfolioField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified)>  _
        Public Property monAccSuffix() As Long
            Get
                Return Me.monAccSuffixField
            End Get
            Set
                Me.monAccSuffixField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBusinessDateCompletedEventHandler(ByVal sender As Object, ByVal e As getBusinessDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBusinessDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property getBusinessDateResponse() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property getBusinessDateResponseSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub doBusinessDateTransitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBusinessCalendarFromRealTimestampCompletedEventHandler(ByVal sender As Object, ByVal e As getBusinessCalendarFromRealTimestampCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBusinessCalendarFromRealTimestampCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property getBusinessCalendarFromRealTimestampResponse() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property getBusinessCalendarFromRealTimestampResponseSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBusinessDateFromRealTimestampCompletedEventHandler(ByVal sender As Object, ByVal e As getBusinessDateFromRealTimestampCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBusinessDateFromRealTimestampCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsBusinessDateHistoryInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsBusinessDateHistoryInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getBusinessDateHistoryRecordsCompletedEventHandler(ByVal sender As Object, ByVal e As getBusinessDateHistoryRecordsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBusinessDateHistoryRecordsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsBusinessDateHistoryInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsBusinessDateHistoryInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getISpectrumDBVersionCompletedEventHandler(ByVal sender As Object, ByVal e As getISpectrumDBVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getISpectrumDBVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getPreviousBizDateCompletedEventHandler(ByVal sender As Object, ByVal e As getPreviousBizDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPreviousBizDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property getPreviousBizDateResponse() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property getPreviousBizDateResponseSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByUserIdCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByUserIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByUserIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getUndoSuspenseDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As getUndoSuspenseDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUndoSuspenseDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsUndoSuspenseAmountInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsUndoSuspenseAmountInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByLogonNameCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByLogonNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByLogonNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByDrawerCodeCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByDrawerCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByDrawerCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAvailableDrawerListCompletedEventHandler(ByVal sender As Object, ByVal e As getAvailableDrawerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAvailableDrawerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAllDrawerListCompletedEventHandler(ByVal sender As Object, ByVal e As getAllDrawerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllDrawerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub openDrawerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerAggregateByUserIdCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerAggregateByUserIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerAggregateByUserIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub openDefaultDrawerForUserCompletedEventHandler(ByVal sender As Object, ByVal e As openDefaultDrawerForUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class openDefaultDrawerForUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getForcedClosedCompletedEventHandler(ByVal sender As Object, ByVal e As getForcedClosedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getForcedClosedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDefaultDrawerForUserCompletedEventHandler(ByVal sender As Object, ByVal e As getDefaultDrawerForUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDefaultDrawerForUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getInstitutionFtpPathCompletedEventHandler(ByVal sender As Object, ByVal e As getInstitutionFtpPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInstitutionFtpPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getInstitutionPeriodicPathCompletedEventHandler(ByVal sender As Object, ByVal e As getInstitutionPeriodicPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getInstitutionPeriodicPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getSystemDateCompletedEventHandler(ByVal sender As Object, ByVal e As getSystemDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSystemDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property getSystemDateResponse() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property getSystemDateResponseSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub findDrawerDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As findDrawerDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class findDrawerDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByPrimaryKeyCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByPrimaryKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByPrimaryKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub doDrawerAdjustCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub createUpdateDeleteDrawerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub closeDrawerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawersOnBranchCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawersOnBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawersOnBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawersOnBranchInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawersOnBranchInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getSystemDateForSchemaCompletedEventHandler(ByVal sender As Object, ByVal e As getSystemDateForSchemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getSystemDateForSchemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property getSystemDateForSchemaResponse() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property getSystemDateForSchemaResponseSpecified() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByUserIdAndFinControlsCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByUserIdAndFinControlsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByUserIdAndFinControlsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByLogonNameAndFincontrolsCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByLogonNameAndFincontrolsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByLogonNameAndFincontrolsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getDrawerByDrawerCodeAndFinControlsCompletedEventHandler(ByVal sender As Object, ByVal e As getDrawerByDrawerCodeAndFinControlsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDrawerByDrawerCodeAndFinControlsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub getAllDrawerListByDeletedCompletedEventHandler(ByVal sender As Object, ByVal e As getAllDrawerListByDeletedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllDrawerListByDeletedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub openDefaultDrawerForUserByResetCompletedEventHandler(ByVal sender As Object, ByVal e As openDefaultDrawerForUserByResetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class openDefaultDrawerForUserByResetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As wsDrawerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),wsDrawerInfo)
            End Get
        End Property
    End Class
End Namespace
