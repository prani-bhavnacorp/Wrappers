<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns="http://jackhenry.com/jxchange/TPG/2008" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://jackhenry.com/jxchange/TPG/2008" version="2019.0.03" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import schemaLocation="oasis-200401-wss-wssecurity-secext-1.0.xsd" namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" />
  <xsd:group name="Main">
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">JHA Image Messages</xsd:documentation>
      </xsd:annotation>
      <xsd:element ref="Ping" />
      <xsd:element ref="PingResponse" />
      <xsd:element ref="HdrFault" />
      <xsd:element ref="ChkImgInq">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability to retreive check images</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="ChkImgInqResponse" />
      <xsd:element ref="DocImgAdd">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability create document images with an document image provider</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocImgAddResponse" />
      <xsd:element ref="DocImgSrch">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability search for document images</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocImgSrchResponse" />
      <xsd:element ref="DocImgMod">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability to modify document images</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocImgModResponse" />
      <xsd:element ref="ChkImgStmtSrch">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">Give the ability for consumers to retrieve a list of potential statements to request</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="ChkImgStmtSrchResponse" />
      <xsd:element ref="ChkImgStmtGen">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">Allows for a consumer to make a request for a check image statement to be generated</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="ChkImgStmtGenResponse" />
      <xsd:element ref="ChkImgStmtGenInq">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">Allows for a consumer to check the status of a statement generation request </Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="ChkImgStmtGenInqResponse" />
      <xsd:element ref="ChkImgSrch">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">A consumer can use multiple search elements to retrieve a list of images information including the key to inquiry for the actual image.  </Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="ChkImgSrchResponse" />
      <xsd:element ref="DocBatchSrch">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability search for statement/document data</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocBatchSrchResponse" />
      <xsd:element ref="DocTextFormatInq">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability obtain text formatting for statements and/or documents</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocTextFormatInqResponse" />
      <xsd:element ref="DocOptFormatInq">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability obtain option formatting for statements and/or documents</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="DocOptFormatInqResponse" />
      <xsd:element ref="FormatDocInq">
        <xsd:annotation>
          <xsd:documentation>
            <Definition xmlns="http://jackhenry.com/jxchange/TPG/2008">The service that provides a consumer the ability to retreive binary data for documents
       such as Marketing inserts, watermarks, logos, etc</Definition>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="FormatDocInqResponse" />
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="Ping" type="PingRq_MType" />
  <xsd:complexType name="PingRq_MType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is a common Ping request for checking, testing,
                and keep alive</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PingRq" type="PingRq_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingRq_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Text for the ping request</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Ver_1_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the first iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:element name="PingResponse" type="PingRs_MType" />
  <xsd:complexType name="PingRs_MType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is a common Ping response which should echo back
                the string that was sent in the PingRq</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PingRs" type="PingRs_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="SvcProdVer" type="ProdVer_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingRs_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">String echoed back from the PingRq. The element value
                will contain Error when the Ping request to a service provider is not successful <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>Error</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="OpenEnum_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a string type which is Enum but is Bank defined
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:complexType name="ProdVer_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Release version of product</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="JHANull_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The nillable element used as an attribute for elements. JHANull=true
                        will convey to service providers to null the matching field to element to
                        null.</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ClosedEnum_Type" />
  </xsd:simpleType>
  <xsd:simpleType name="ClosedEnum_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a string type which is Enum and has set values
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:simpleType name="Rstr_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Describes the level of restrictions that can exist at a parent and/or
                        child node</ElemDesc>
          <ElemDefault>ReadWrite</ElemDefault>
          <CanonicalVal>NoAccess,NoAccessPart,ReadWrite,ReadWritePart,ReadOnly,ReadOnlyPart,Hid</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ClosedEnum_Type" />
  </xsd:simpleType>
  <xsd:complexType name="Ver_2_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the second iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:element name="HdrFault" type="HdrFault_MType" />
  <xsd:complexType name="HdrFault_MType">
    <xsd:sequence>
      <xsd:element name="FaultHdr" nillable="true" type="FaultHdr_CType" />
      <xsd:element minOccurs="0" name="FaultRecInfoArray" nillable="true" type="FaultRecInfoArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Jxchange header for soap envelop</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="JxVer" type="FaultJxVer_Type" />
      <xsd:element name="AuditUsrId" type="FaultAuditUsrId_Type" />
      <xsd:element name="AuditWsId" type="FaultAuditWsId_Type" />
      <xsd:element minOccurs="0" name="AuthenUsrId" type="FaultAuthenUsrId_Type">
        <xsd:annotation>
          <xsd:documentation>
            <Deprecate xmlns="http://jackhenry.com/jxchange/TPG/2008">
              <Dt>2012-01-01</Dt>
              <Cmnt>The AuthenUsrId will be delivered as part of the Authentication
                                User Credentials element (AuthenUsrCred_CType) in the form of a WS
                                Security-Security Token. The Attribute name identity claims name is
                                to be used to deliver a user identification
                                (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)</Cmnt>
            </Deprecate>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ConsumerName" type="FaultConsumerName_Type" />
      <xsd:element minOccurs="0" name="ConsumerProd" type="FaultConsumerProd_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:element minOccurs="0" name="jXLogTrackingId" type="FaultjXLogTrackingId_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="FaultVer_2_CType" />
          <xsd:element minOccurs="0" name="InstRtId" type="InstRtId_Type" />
          <xsd:element minOccurs="0" name="InstEnv" type="InstEnv_Type" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="FaultVer_3_CType" />
            <xsd:element minOccurs="0" name="BusCorrelId" type="BusCorrelId_Type" />
            <xsd:sequence minOccurs="0">
              <xsd:element name="Ver_4" type="FaultVer_4_CType" />
              <xsd:element minOccurs="0" name="WorkflowCorrelId" type="WorkflowCorrelId_Type" />
              <xsd:sequence minOccurs="0">
                <xsd:element name="Ver_5" type="FaultVer_5_CType" />
                <xsd:element minOccurs="0" name="ValidConsmName" type="ValidConsmName_Type" />
                <xsd:element minOccurs="0" name="ValidConsmProd" type="ValidConsmProd_Type" />
                <xsd:sequence minOccurs="0">
                  <xsd:element name="Ver_6" type="FaultVer_6_CType" />
                  <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
                </xsd:sequence>
              </xsd:sequence>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultJxVer_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The element will contain the version Jx is running for Soap Header
                        Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuditUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like written to the audit
                        as performing the requested service. It will vary but could be down to the
                        user id. It will not be use to authenticate however just audit for Soap
                        Header Fault .</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuditWsId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the WorkStation Id which the consumer would like written to
                        the audit as performing the requested service for Soap Header Fault . It
                        will vary but could be down to the user id.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuthenUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like the service provider
                        to use to authenticate with for Soap Header Fault . It is a user id which
                        the provider will understand</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultConsumerName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The name of the service consumer (Business name) for Soap Header
                        Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultConsumerProd_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The name of the product which is consuming the service (Business
                        Product Name) for Soap Header Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_1_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the first iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="FaultjXLogTrackingId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>An identification provided by jXchange to be able to trace the request
                        and response of a message from the third party gateway, internal gateway,
                        and service provider for Soap Header Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_2_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the second iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="InstRtId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The identification of the entity of submitted message. A financial
                        institution entity will utilize the routing transit or ABA nine (9) digit
                        number assigned to financial institutions for the purpose of routing as
                        assigned by the American Bankers Association. Any leading zeros must be
                        provided for a complete routing and transit number. A non-financial
                        institution entity will use a mutually agreed upon identification that must
                        contain at least one non-integer character. When a record is directed to a
                        specific Financial Institution within a holding company, the institution
                        routing identification is the specific Financial Institution routing
                        identification and not the holding company identification. </ElemDesc>
          <CanonicalVal>JHA</CanonicalVal>
        </Jx>
        <CoreDirector xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemRules>Required on all message requests</ElemRules>
        </CoreDirector>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="InstEnv_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>An identification provided by the consumer that defines the
                        environment in which the institution is operating.</ElemDesc>
          <CanonicalVal>PROD</CanonicalVal>
          <ElemUsage>This is the Environment in which the Institution is operating.
                        Example: [ PROD, TEST, AUDIT, SYM001, SYM101, ... ] The absence of this
                        element will equate to "PROD" = Production Environment. It will be the
                        responsibility of the sender to send the appropriate data to identify the
                        environment if necessary.</ElemUsage>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_3_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the third iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="BusCorrelId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The correlation identification as related to business functions and
                        activities</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_4_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fourth iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="WorkflowCorrelId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The correlation identification as related to workflow functions and
                        activities</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_5_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fifth iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="ValidConsmName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The consumer name that can be validated by Enterprise goverance. The
                        canonical values are managed in an consumer/product Enterprise
                        table</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ValidConsmProd_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The consumer product name that can be validated by Enterprise
                        goverance. The canonical values are managed in an consumer/product
                        Enterprise table</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_6_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the sixth iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="FaultRecInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array of messages that can be returned in a fault message
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FaultMsgRec" type="FaultMsgRec_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultMsgRec_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Message Record includes the Error responses for the
                soap envelope - can occur multiple times</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ErrCode" type="FaultErrCode_Type" />
      <xsd:element name="ErrCat" type="FaultErrCat_Type" />
      <xsd:element name="ErrDesc" type="FaultErrDesc_Type" />
      <xsd:element minOccurs="0" name="ErrElem" type="FaultErrElem_Type" />
      <xsd:element minOccurs="0" name="ErrElemVal" type="FaultErrElemVal_Type" />
      <xsd:element minOccurs="0" name="ErrLoc" type="FaultErrLoc_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultErrCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Code</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrCat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Catagory</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Description</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrElem_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault when an Error or Fault occurs this optional element
                        will contain the element which is causing the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrElemVal_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault when an Error or Fault occurs this optional element
                        will contain the value of the element which is causing the error
                        condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Location - This is typically the program that
                        generated the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgInq" type="ChkImgInqRq_MType" />
  <xsd:complexType name="ChkImgInqRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element name="ChkImgId" type="ChkImgId_Type" />
      <xsd:element minOccurs="0" name="ChkImgFormat" nillable="true" type="ChkImgFormat_Type" />
      <xsd:element minOccurs="0" name="ChkImgSide" nillable="true" type="ChkImgSide_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MsgRqHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Default message request headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="AuthenUsrCred" type="AuthenUsrCred_CType" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="AuthenProdCred" type="AuthenProdCred_CType" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="jXchangeHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Jxchange headers for tracking</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="JxVer" type="JxVer_Type" />
      <xsd:element name="AuditUsrId" type="AuditUsrId_Type" />
      <xsd:element name="AuditWsId" type="AuditWsId_Type" />
      <xsd:element minOccurs="0" name="AuthenUsrId" type="AuthenUsrId_Type">
        <xsd:annotation>
          <xsd:documentation>
            <Deprecate xmlns="http://jackhenry.com/jxchange/TPG/2008">
              <Dt>2012-01-01</Dt>
              <Cmnt>The AuthenUsrId will be delivered as part of the Authentication
                                User Credentials element (AuthenUsrCred_CType) in the form of a WS
                                Security-Security Token. The Attribute name identity claims name is
                                to be used to deliver a user identification
                                (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)</Cmnt>
            </Deprecate>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ConsumerName" type="ConsumerName_Type" />
      <xsd:element minOccurs="0" name="ConsumerProd" type="ConsumerProd_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="jXLogTrackingId" type="jXLogTrackingId_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="InstRtId" type="InstRtId_Type" />
          <xsd:element minOccurs="0" name="InstEnv" type="InstEnv_Type" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:element minOccurs="0" name="BusCorrelId" type="BusCorrelId_Type" />
            <xsd:sequence minOccurs="0">
              <xsd:element name="Ver_4" type="Ver_4_CType" />
              <xsd:element minOccurs="0" name="WorkflowCorrelId" type="WorkflowCorrelId_Type" />
              <xsd:sequence minOccurs="0">
                <xsd:element name="Ver_5" type="Ver_5_CType" />
                <xsd:element minOccurs="0" name="ValidConsmName" type="ValidConsmName_Type" />
                <xsd:element minOccurs="0" name="ValidConsmProd" type="ValidConsmProd_Type" />
                <xsd:sequence minOccurs="0">
                  <xsd:element name="Ver_6" type="Ver_6_CType" />
                  <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
                </xsd:sequence>
              </xsd:sequence>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JxVer_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The element will contain the version Jx is
                running</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuditUsrId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is the User Id which the consumer would like
                written to the audit as performing the requested service. It will vary but could be
                down to the user id. It will not be use to authenticate however just audit.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuditWsId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the WorkStation Id which the consumer would like written to
                        the audit as performing the requested service. It will vary but could be
                        down to the user id. </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuthenUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like the service provider
                        to use to authenticate with. It is a user id which the provider will
                        understand </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConsumerName_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name of the service consumer (Business name)
            </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConsumerProd_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name of the product which is consuming the service
                (Business Product Name) </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="jXLogTrackingId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An identification provided by jXchange to be able to
                trace the request and response of a message from the third party gateway, internal
                gateway, and service provider </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Ver_3_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the third iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_4_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fourth iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_5_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fifth iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_6_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the sixth iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="AuthenUsrCred_CType">
    <xsd:annotation>
      <xsd:documentation>Authentication of the end User Credentials in the form of a WS
                Security Element that contains a single SAML V2.0 Assertion.
                http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="wsse:Security" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AuthenProdCred_CType">
    <xsd:annotation>
      <xsd:documentation>Authentication of the Consumer Product Credentials in the form of a
                WS Security Element that contains a single SAML V2.0 Assertion.
                http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="wsse:Security" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The identification assigned to a check
                image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgFormat_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The value that defines the file format that is used to
                deliver the check image <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>JPG,TIFF,GIF,PNG,IOCA</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSide_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The value that defines the side to deliver of the check
                image <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>Front,Back,Both</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Custom_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Institution Specific Data - provides an extension point
                for custom variations of the jXchange vocabulary. ***Placed before xml content not
                described in a given target namespace. Used as marker/guard/sentinel element to
                prevent an ambiguous situation for validating parsers as a tactic to prevent
                violating the Unique Particle Attribution constraint (UPA). </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ChkImgInqResponse" type="ChkImgInqRs_MType" />
  <xsd:complexType name="ChkImgInqRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element name="ChkImgId" type="ChkImgId_Type" />
      <xsd:element name="ChkImgFormat" type="ChkImgFormat_Type" />
      <xsd:element minOccurs="0" name="ChkImgSide" nillable="true" type="ChkImgSide_Type" />
      <xsd:element minOccurs="0" name="FrontChkImgLength" nillable="true" type="FrontChkImgLength_Type" />
      <xsd:element minOccurs="0" name="FrontChkImg" nillable="true" type="FrontChkImg_Type" />
      <xsd:element minOccurs="0" name="BackChkImgLength" nillable="true" type="BackChkImgLength_Type" />
      <xsd:element minOccurs="0" name="BackChkImg" nillable="true" type="BackChkImg_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MsgRsHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Default message response headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:element minOccurs="0" name="MsgRecInfoArray" type="MsgRecInfoArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MsgRecInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array - of messages that can be returned in a response
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="MsgRec" type="MsgRec_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MsgRec_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Message Record includes the Error responses - Usually
                can occur multiple times</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ErrCode" type="ErrCode_Type" />
      <xsd:element name="ErrCat" type="ErrCat_Type" />
      <xsd:element name="ErrDesc" type="ErrDesc_Type" />
      <xsd:element minOccurs="0" name="ErrElem" type="ErrElem_Type" />
      <xsd:element minOccurs="0" name="ErrElemVal" type="ErrElemVal_Type" />
      <xsd:element minOccurs="0" name="ErrLoc" type="ErrLoc_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Code</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrCat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Catagory</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Description</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrElem_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        element which is causing the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrElemVal_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        value of the element which is causing the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Location - This is typically the program that generated the
                        error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FrontChkImgLength_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The length of the front of the check
                image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FrontChkImg_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The front of the check image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:base64Binary" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="BackChkImgLength_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The length of the back of the check
                image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="BackChkImg_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The back of the check image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:base64Binary" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocImgAdd" type="DocImgAddRq_MType" />
  <xsd:complexType name="DocImgAddRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="ErrOvrRdInfoArray" nillable="true" type="ErrOvrRdInfoArray_AType" />
      <xsd:element name="DocImgInfoArray" type="DocImgInfoArray_AType">
        <xsd:annotation>
          <xsd:documentation>
            <Synergy xmlns="http://jackhenry.com/jxchange/TPG/2008">The business service will only accept one document name.  A soap fault will be created if more than one document is delivered.</Synergy>
          </xsd:documentation>
          <xsd:documentation>
            <Silhouette xmlns="http://jackhenry.com/jxchange/TPG/2008">The business service will only accept one document name.  A soap fault will be created if more than one document is delivered.</Silhouette>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrOvrRdInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array - of overrides for faults </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ErrOvrRd" type="ErrOvrRd_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrOvrRd_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Error Code Override - Array of ErrCode
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ErrCode" type="ErrCode_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Array - of information related to the document Images
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocImgInfo" type="DocImgInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocName" type="DocName_Type" />
      <xsd:element minOccurs="0" name="DocImgAuxDesc" type="DocImgAuxDesc_Type" />
      <xsd:element minOccurs="0" name="DocImgEffDt" type="DocImgEffDt_Type" />
      <xsd:element name="DocImgDetArray" type="DocImgDetArray_AType" />
      <xsd:element minOccurs="0" name="DocImgIdxArray" type="DocImgIdxArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocName_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name given to a document that might describe the
                document image captured.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgAuxDesc_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An auxiliary description that further describes details
                about the document image.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgEffDt_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The date the document image was created.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:date" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgDetArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Array - of Document Images </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocImgDetInfo" type="DocImgDetInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgDetInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocImg" type="DocImg_Type" />
      <xsd:element minOccurs="0" name="DocImgSize" type="DocImgSize_Type" />
      <xsd:element minOccurs="0" name="DocImgProcSeq" type="DocImgProcSeq_Type" />
      <xsd:element minOccurs="0" name="DocImgFormat" type="DocImgFormat_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImg_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The document image. </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:base64Binary">
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgSize_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The size of the document image in bytes. The size is
                prior to compression if the image has been compressed. </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgProcSeq_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A sequence number assigned to each document image that
                assists the service provider for processing. </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgFormat_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Identifies the type of file that contains the document
                image. <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>JPG,TIFF,GIF,PNG,IOCA,PDF</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgIdxArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Array - of Document indexes used for a document image
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocImgIdx" type="DocImgIdx_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgIdx_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocImgIdxName" type="DocImgIdxName_Type" />
      <xsd:element minOccurs="0" name="DocImgIdxType" type="DocImgIdxType_Type" />
      <xsd:element minOccurs="0" name="DocImgIdxValue" type="DocImgIdxValue_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgIdxName_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name that describes the proceeding elements used
                for indexing a document image. <Exp xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>AccountNumber,AccountType,CIFNumber,TaxID,Name,ShortName,DateOpened,BranchNumber,Officer,Coborrower1Name,Coborrower1SSN,CollateralCode,LoanClassCode,LoanCreditRating,
                        LoanDateEntered,LoanDealerNumber,LoanDepartmentCode,LoanOriginationDate,LoanPurposeCode,LoanStatusCode,LoanTypeCode,PropertyDescription,VendorNumber,CardNumber</CanonicalVal></Exp></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgIdxType_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The type or classification of the index that could be
                used in the DocImgAdd service.<Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>TaxId,AcctId,AcctType,ShortName,Name,CustId,Cabinet,Folder,FileName,Index,UniqueIndex,IndexLookup</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgIdxValue_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The value that correlates to the DocImgIdxName used for
                indexing a document image. </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocImgAddResponse" type="DocImgAddRs_MType" />
  <xsd:complexType name="DocImgAddRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="DocImgInfoRsArray" nillable="true" type="DocImgInfoRsArray_AType" />
      <xsd:element minOccurs="0" name="RsStat" nillable="true" type="RsStat_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgInfoRsArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Array - of information returned related to the document
                Images </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocImgInfoRs" type="DocImgInfoRs_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgInfoRs_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocName" type="DocName_Type" />
      <xsd:element minOccurs="0" name="DocImgIdxArray" type="DocImgIdxArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RsStat_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Status of the response <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>Success,Fail</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocImgSrch" type="DocImgSrchRq_MType" />
  <xsd:complexType name="DocImgSrchRq_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRqHdr" type="SrchMsgRqHdr_CType" />
      <xsd:element name="DocImgIdxArray" type="DocImgIdxArray_AType" />
      <xsd:element minOccurs="0" name="IdxOnly" nillable="true" type="IdxOnly_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="DocImgFilterType" nillable="true" type="DocImgFilterType_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="DocImgFormat" type="DocImgFormat_Type" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SrchMsgRqHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Search specific message request headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:element name="MaxRec" type="MaxRec_Type" />
      <xsd:element minOccurs="0" name="Cursor" type="Cursor_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="AuthenUsrCred" type="AuthenUsrCred_CType" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="AuthenProdCred" type="AuthenProdCred_CType" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MaxRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc> When returning multiple records, this is the maximum number of
                        records to be returned</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Cursor_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc> When returning multiple records and allowing a subsequent call to
                        retrieve more records this is the "state" information that allows the next
                        call to understand where it left off</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="IdxOnly_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Selection to get in the response a listing of indexes</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgFilterType_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The type of predefined filters that conveys image
                filters understood by the image provider <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>qry_demand_deposit,qry_savings,qry_club,qry_cd,qry_loan,qry_consumer_loan,qry_demand_loan,qry_commercial_loan,qry_mortgage_loan,qry_safe_deposit,
                        qry_customer,qry_customer_tin,qry_gl,qry_account_payable,qry_sig_id,qry_photo_id,qry_overdraft,qry_LOC</CanonicalVal></Jx><Synergy xmlns="http://jackhenry.com/jxchange/TPG/2008"><ElemDesc>Synergy will accept any combination of the indexes referenced for each
                        annotated pre-defined query name. The more specific index reduces the
                        response set of document images.</ElemDesc><qry_demand_deposit><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName></qry_demand_deposit><qry_savings><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName></qry_savings><qry_club><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName></qry_club><qry_cd><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName></qry_cd><qry_loan><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName><DocImgIdxName>Coborrower1Name</DocImgIdxName><DocImgIdxName>Coborrower1SSN</DocImgIdxName><DocImgIdxName>Coborrower2Name</DocImgIdxName><DocImgIdxName>CollateralCode</DocImgIdxName><DocImgIdxName>LoanClassCode</DocImgIdxName><DocImgIdxName>LoanCreditRating</DocImgIdxName><DocImgIdxName>LoanDateEntered</DocImgIdxName><DocImgIdxName>LoanDealerNumber</DocImgIdxName><DocImgIdxName>LoanDepartmentCode</DocImgIdxName><DocImgIdxName>LoanOriginationDate</DocImgIdxName><DocImgIdxName>LoanPurposeCode</DocImgIdxName><DocImgIdxName>LoanStatusCode</DocImgIdxName><DocImgIdxName>LoanTypeCode</DocImgIdxName><DocImgIdxName>PropertyDescription</DocImgIdxName></qry_loan><qry_consumer_loan><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName><DocImgIdxName>Coborrower1Name</DocImgIdxName><DocImgIdxName>Coborrower1SSN</DocImgIdxName><DocImgIdxName>Coborrower2Name</DocImgIdxName><DocImgIdxName>CollateralCode</DocImgIdxName><DocImgIdxName>LoanClassCode</DocImgIdxName><DocImgIdxName>LoanCreditRating</DocImgIdxName><DocImgIdxName>LoanDateEntered</DocImgIdxName><DocImgIdxName>LoanDealerNumber</DocImgIdxName><DocImgIdxName>LoanDepartmentCode</DocImgIdxName><DocImgIdxName>LoanOriginationDate</DocImgIdxName><DocImgIdxName>LoanPurposeCode</DocImgIdxName><DocImgIdxName>LoanStatusCode</DocImgIdxName><DocImgIdxName>LoanTypeCode</DocImgIdxName><DocImgIdxName>PropertyDescription</DocImgIdxName></qry_consumer_loan><qry_demand_loan><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName><DocImgIdxName>Coborrower1Name</DocImgIdxName><DocImgIdxName>Coborrower1SSN</DocImgIdxName><DocImgIdxName>Coborrower2Name</DocImgIdxName><DocImgIdxName>CollateralCode</DocImgIdxName><DocImgIdxName>LoanClassCode</DocImgIdxName><DocImgIdxName>LoanCreditRating</DocImgIdxName><DocImgIdxName>LoanDateEntered</DocImgIdxName><DocImgIdxName>LoanDealerNumber</DocImgIdxName><DocImgIdxName>LoanDepartmentCode</DocImgIdxName><DocImgIdxName>LoanOriginationDate</DocImgIdxName><DocImgIdxName>LoanPurposeCode</DocImgIdxName><DocImgIdxName>LoanStatusCode</DocImgIdxName><DocImgIdxName>LoanTypeCode</DocImgIdxName><DocImgIdxName>PropertyDescription</DocImgIdxName></qry_demand_loan><qry_commercial_loan><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName><DocImgIdxName>Coborrower1Name</DocImgIdxName><DocImgIdxName>Coborrower1SSN</DocImgIdxName><DocImgIdxName>Coborrower2Name</DocImgIdxName><DocImgIdxName>CollateralCode</DocImgIdxName><DocImgIdxName>LoanClassCode</DocImgIdxName><DocImgIdxName>LoanCreditRating</DocImgIdxName><DocImgIdxName>LoanDateEntered</DocImgIdxName><DocImgIdxName>LoanDealerNumber</DocImgIdxName><DocImgIdxName>LoanDepartmentCode</DocImgIdxName><DocImgIdxName>LoanOriginationDate</DocImgIdxName><DocImgIdxName>LoanPurposeCode</DocImgIdxName><DocImgIdxName>LoanStatusCode</DocImgIdxName><DocImgIdxName>LoanTypeCode</DocImgIdxName><DocImgIdxName>PropertyDescription</DocImgIdxName></qry_commercial_loan><qry_mortgage_loan><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName><DocImgIdxName>Coborrower1Name</DocImgIdxName><DocImgIdxName>Coborrower1SSN</DocImgIdxName><DocImgIdxName>Coborrower2Name</DocImgIdxName><DocImgIdxName>CollateralCode</DocImgIdxName><DocImgIdxName>LoanClassCode</DocImgIdxName><DocImgIdxName>LoanCreditRating</DocImgIdxName><DocImgIdxName>LoanDateEntered</DocImgIdxName><DocImgIdxName>LoanDealerNumber</DocImgIdxName><DocImgIdxName>LoanDepartmentCode</DocImgIdxName><DocImgIdxName>LoanOriginationDate</DocImgIdxName><DocImgIdxName>LoanPurposeCode</DocImgIdxName><DocImgIdxName>LoanStatusCode</DocImgIdxName><DocImgIdxName>LoanTypeCode</DocImgIdxName><DocImgIdxName>PropertyDescription</DocImgIdxName></qry_mortgage_loan><qry_safe_deposit><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName></qry_safe_deposit><qry_customer><DocImgIdxName>MemberNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName></qry_customer><qry_customer_tin><DocImgIdxName>MemberNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName></qry_customer_tin><qry_gl><DocImgIdxName>AccountNumber</DocImgIdxName></qry_gl><qry_account_payable><DocImgIdxName>VendorNumber</DocImgIdxName></qry_account_payable><qry_sig_id><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName><DocImgIdxName>Name</DocImgIdxName><DocImgIdxName>ShortName</DocImgIdxName><DocImgIdxName>DateOpened</DocImgIdxName><DocImgIdxName>BranchNumber</DocImgIdxName><DocImgIdxName>Officer</DocImgIdxName></qry_sig_id><qry_photo_id><DocImgIdxName>CIFNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName></qry_photo_id><filter_documents /><filter_reports /><filter_checks /><qry_overdraft><DocImgIdxName>AccountNumber</DocImgIdxName></qry_overdraft><qry_LOC><DocImgIdxName>AccountNumber</DocImgIdxName><DocImgIdxName>TaxID</DocImgIdxName></qry_LOC></Synergy></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocImgSrchResponse" type="DocImgSrchRs_MType" />
  <xsd:complexType name="DocImgSrchRs_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRsHdr" type="SrchMsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="IdxOnly" nillable="true" type="IdxOnly_Type" />
      <xsd:element minOccurs="0" name="DocImgSrchArray" nillable="true" type="DocImgSrchArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="DocImgFilterType" nillable="true" type="DocImgFilterType_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SrchMsgRsHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Search specific message response headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:element minOccurs="0" name="SentRec" type="SentRec_Type" />
      <xsd:element minOccurs="0" name="MoreRec" type="MoreRec_Type" />
      <xsd:element minOccurs="0" name="Cursor" type="Cursor_Type" />
      <xsd:element minOccurs="0" name="TotRec" type="TotRec_Type" />
      <xsd:element minOccurs="0" name="MsgRecInfoArray" type="MsgRecInfoArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SentRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Number of records sent in the response</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MoreRec_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Indicates if there are more records that could be returned<Jx><CanonicalVal>true,false</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TotRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Indicates the total records the the request selected which could be
                        larger than MaxRec</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgSrchArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for document image search request.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocImgSrchInfo" type="DocImgSrchInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgSrchInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocName" type="DocName_Type" />
      <xsd:element minOccurs="0" name="DocImgIdxArray" type="DocImgIdxArray_AType" />
      <xsd:element minOccurs="0" name="DocImgDetArray" type="DocImgDetArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
    <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
  </xsd:complexType>
  <xsd:element name="DocImgMod" type="DocImgModRq_MType" />
  <xsd:complexType name="DocImgModRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="ErrOvrRdInfoArray" nillable="true" type="ErrOvrRdInfoArray_AType" />
      <xsd:element name="DocImgIdxArray" type="DocImgIdxArray_AType" />
      <xsd:element name="DocImgModInfo" type="DocImgModInfo_CType" />
      <xsd:element minOccurs="0" name="Dlt" nillable="true" type="Dlt_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocImgModInfo_CType">
    <xsd:annotation>
      <xsd:documentation>A package of data related to a document image
                modification</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DocName" type="DocName_Type" />
      <xsd:element minOccurs="0" name="DocImgAuxDesc" type="DocImgAuxDesc_Type" />
      <xsd:element minOccurs="0" name="DocImgEffDt" type="DocImgEffDt_Type" />
      <xsd:element minOccurs="0" name="DocImgIdxModArray" type="DocImgIdxArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Dlt_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Delete - for delete entity <Jx><CanonicalVal>true,false</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocImgModResponse" type="DocImgModRs_MType" />
  <xsd:complexType name="DocImgModRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="DocImgModInfo" nillable="true" type="DocImgModInfo_CType" />
      <xsd:element minOccurs="0" name="RsStat" nillable="true" type="RsStat_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtSrch" type="ChkImgStmtSrchRq_MType" />
  <xsd:complexType name="ChkImgStmtSrchRq_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRqHdr" type="SrchMsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="CustId" nillable="true" type="CustId_Type" />
      <xsd:element minOccurs="0" name="AccountId" nillable="true" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="StartDt" nillable="true" type="StartDt_Type" />
      <xsd:element minOccurs="0" name="EndDt" nillable="true" type="EndDt_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CustId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The identifier attached to a customer</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
        <xsd:attribute name="OvrrdInstRtId" type="OvrrdInstRtId_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="OvrrdInstRtId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Describes the Institution Routing Identifier or Bank
                Number/Location used to override the InstRtId found in a message header.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:complexType name="AccountId_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The incoming account identification
                information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="AcctId" type="AcctId_Type" />
      <xsd:element name="AcctType" type="AcctType_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
    <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="AcctId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The number(s) or character(s) that identifies an account record
                    </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
        <xsd:attribute name="MaskVal" type="MaskVal_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="SrchType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The search type element used as an attribute for elements. The search
                        type conveys to the service provider the type of search expression for
                        search message filters</ElemDesc>
          <CanonicalVal>Exact,StartsWith,EndsWith,Contains,ContainsAll</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ClosedEnum_Type" />
  </xsd:simpleType>
  <xsd:simpleType name="MaskVal_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The service providers masked value for a clear text element</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:complexType name="AcctType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The number(s) or character(s) that categorize the Acct Id </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StartDt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The date that designates the starting point for date
                        selections</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:date">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EndDt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The date that designates the ending point for date
                        selections</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:date">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtSrchResponse" type="ChkImgStmtSrchRs_MType" />
  <xsd:complexType name="ChkImgStmtSrchRs_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRsHdr" type="SrchMsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="CustId" nillable="true" type="CustId_Type" />
      <xsd:element minOccurs="0" name="AccountId" nillable="true" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="StartDt" nillable="true" type="StartDt_Type" />
      <xsd:element minOccurs="0" name="EndDt" nillable="true" type="EndDt_Type" />
      <xsd:element minOccurs="0" name="ChkImgStmtSrchArray" nillable="true" type="ChkImgStmtSrchArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgStmtSrchArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array of responses for a check image statement search </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChkImgStmtSrchInfo" type="ChkImgStmtSrchInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgStmtSrchInfo_CType">
    <xsd:annotation>
      <xsd:documentation>A package of data check image statement search</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="StmtId" type="StmtId_Type" />
      <xsd:element minOccurs="0" name="AccountId" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="StmtDt" type="StmtDt_Type" />
      <xsd:element minOccurs="0" name="StmtPgCnt" type="StmtPgCnt_Type" />
      <xsd:element minOccurs="0" name="StmtEnclCnt" type="StmtEnclCnt_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="StmtId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The identification for a specific statement of an account on a
                        specific date</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtDt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Statement Date</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:date" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtPgCnt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The count of pages within a statement</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtEnclCnt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The count of enclosures within a statement</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtGen" type="ChkImgStmtGenRq_MType" />
  <xsd:complexType name="ChkImgStmtGenRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="StmtId" nillable="true" type="StmtId_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="StmtContentType" nillable="true" type="StmtContentType_Type" />
        <xsd:element minOccurs="0" name="StmtDlvryType" nillable="true" type="StmtDlvryType_Type" />
        <xsd:element minOccurs="0" name="Cursor" nillable="true" type="Cursor_Type" />
        <xsd:element minOccurs="0" name="MaxBytes" nillable="true" type="MaxBytes_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="StmtContentType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Identifies content to be included when a statement of other document
                        is returned.</ElemDesc>
          <CanonicalVal>TextOnly,Full</CanonicalVal>
          <Defalut>Full</Defalut>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtDlvryType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Identifies how a statement of other document is returned.</ElemDesc>
          <CanonicalVal>InLine,FileLoc</CanonicalVal>
          <Default>FileLoc</Default>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MaxBytes_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> This is the maximum number of bytes to be returned in each
                        response</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtGenResponse" type="ChkImgStmtGenRs_MType" />
  <xsd:complexType name="ChkImgStmtGenRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="StmtId" nillable="true" type="StmtId_Type" />
      <xsd:element minOccurs="0" name="StmtStatId" nillable="true" type="StmtStatId_Type" />
      <xsd:element minOccurs="0" name="StmtLoc" nillable="true" type="StmtLoc_Type" />
      <xsd:element minOccurs="0" name="StmtLocCred" nillable="true" type="StmtLocCred_CType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="DocImg" nillable="true" type="DocImg_Type" />
        <xsd:element minOccurs="0" name="DocImgBytes" nillable="true" type="DocImgBytes_Type" />
        <xsd:element minOccurs="0" name="SentBytes" nillable="true" type="SentBytes_Type" />
        <xsd:element minOccurs="0" name="Cursor" nillable="true" type="Cursor_Type" />
        <xsd:element minOccurs="0" name="MoreBytes" nillable="true" type="MoreBytes_Type" />
        <xsd:element minOccurs="0" name="ElecDocStat" nillable="true" type="ElecDocStat_Type" />
        <xsd:element minOccurs="0" name="ElecDocStatDesc" nillable="true" type="ElecDocStatDesc_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="StmtStatId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The identification to use to find the status of a statement
                        request</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>URI where statement will be located if created</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:anyURI" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtLocCred_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="UsrName" type="UsrName_Type" />
      <xsd:element minOccurs="0" name="UsrPswd" type="UsrPswd_Type" />
      <xsd:element minOccurs="0" name="AuthenUsrCred" type="AuthenUsrCred_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UsrName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The user name</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="MaskVal" type="MaskVal_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UsrPswd_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The password for the user</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="MaskVal" type="MaskVal_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocImgBytes_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> The size of a document image in bytes (base="xsd:long") vs.
                        DocImgSize_Type base="xsd.int")</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:long">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SentBytes_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Number of Bytes sent in the response</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MoreBytes_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Indicates if there are more Bytes that could be returned<Jx><CanonicalVal>true,false</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ElecDocStat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The status of an existing electronic document </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ElecDocStatDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The description of the status of an existing electronic document
                    </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtGenInq" type="ChkImgStmtGenInqRq_MType" />
  <xsd:complexType name="ChkImgStmtGenInqRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element name="StmtStatId" type="StmtStatId_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ChkImgStmtGenInqResponse" type="ChkImgStmtGenInqRs_MType" />
  <xsd:complexType name="ChkImgStmtGenInqRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="StmtStatId" nillable="true" type="StmtStatId_Type" />
      <xsd:element minOccurs="0" name="StmtId" nillable="true" type="StmtId_Type" />
      <xsd:element minOccurs="0" name="StmtRqStat" nillable="true" type="StmtRqStat_Type" />
      <xsd:element minOccurs="0" name="StmtRqStatCmnt" nillable="true" type="StmtRqStatCmnt_Type" />
      <xsd:element minOccurs="0" name="StmtLoc" nillable="true" type="StmtLoc_Type" />
      <xsd:element minOccurs="0" name="StmtLocCred" nillable="true" type="StmtLocCred_CType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="StmtRqStat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The statement request status</ElemDesc>
          <CanonicalVal>Wait,Proc,Cmplt,Err</CanonicalVal>
          <ElemDft>Cmplt</ElemDft>
          <ElemCanocType>The values represent the following options: Wait - Waiting Proc -
                        Processing Cmplt - Complete Err - Error </ElemCanocType>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StmtRqStatCmnt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>A comment related to the status of the statement request</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgSrch" type="ChkImgSrchRq_MType" />
  <xsd:complexType name="ChkImgSrchRq_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRqHdr" type="SrchMsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="AccountId" nillable="true" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="StartDt" nillable="true" type="StartDt_Type" />
      <xsd:element minOccurs="0" name="EndDt" nillable="true" type="EndDt_Type" />
      <xsd:element minOccurs="0" name="LowAmt" nillable="true" type="LowAmt_Type" />
      <xsd:element minOccurs="0" name="HighAmt" nillable="true" type="HighAmt_Type" />
      <xsd:element minOccurs="0" name="TrnCodeCode" nillable="true" type="TrnCodeCode_Type" />
      <xsd:element minOccurs="0" name="TrnType" nillable="true" type="TrnType_Type" />
      <xsd:element minOccurs="0" name="ChkNumStart" nillable="true" type="ChkNumStart_Type" />
      <xsd:element minOccurs="0" name="ChkNumEnd" nillable="true" type="ChkNumEnd_Type" />
      <xsd:element minOccurs="0" name="RtNum" nillable="true" type="RtNum_Type" />
      <xsd:element minOccurs="0" name="ChkImgSrcCode" nillable="true" type="ChkImgSrcCode_Type" />
      <xsd:element minOccurs="0" name="ChkImgSubSrcCode" nillable="true" type="ChkImgSubSrcCode_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LowAmt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The value that designates a starting point for amount
                        selections</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="HighAmt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The value that designates an ending point for amount selections
                    </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrnCodeCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The code that identifies the behavior of a monetary
                        transaction.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrnType_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> The grouping of monetary transactions by a specific
                code. <Silverlake><ElemRules>Transactions are grouped by Debit(D) or Credit(C) codes. </ElemRules></Silverlake></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkNumStart_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The number(s) or character(s) that designates a starting point for
                        check number selections </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkNumEnd_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The number(s) or character(s) that designates an ending point for
                        check number selections </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="RtNum_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Routing Number </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSrcCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The source code of a check image</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSubSrcCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The sub-source code of a check image</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="ChkImgSrchResponse" type="ChkImgSrchRs_MType" />
  <xsd:complexType name="ChkImgSrchRs_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRsHdr" type="SrchMsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="AccountId" nillable="true" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="StartDt" nillable="true" type="StartDt_Type" />
      <xsd:element minOccurs="0" name="EndDt" nillable="true" type="EndDt_Type" />
      <xsd:element minOccurs="0" name="LowAmt" nillable="true" type="LowAmt_Type" />
      <xsd:element minOccurs="0" name="HighAmt" nillable="true" type="HighAmt_Type" />
      <xsd:element minOccurs="0" name="TrnCodeCode" nillable="true" type="TrnCodeCode_Type" />
      <xsd:element minOccurs="0" name="TrnType" nillable="true" type="TrnType_Type" />
      <xsd:element minOccurs="0" name="ChkNumStart" nillable="true" type="ChkNumStart_Type" />
      <xsd:element minOccurs="0" name="ChkNumEnd" nillable="true" type="ChkNumEnd_Type" />
      <xsd:element minOccurs="0" name="RtNum" nillable="true" type="RtNum_Type" />
      <xsd:element minOccurs="0" name="ChkImgSrcCode" nillable="true" type="ChkImgSrcCode_Type" />
      <xsd:element minOccurs="0" name="ChkImgSubSrcCode" nillable="true" type="ChkImgSubSrcCode_Type" />
      <xsd:element minOccurs="0" name="ChkImgSrchArray" nillable="true" type="ChkImgSrchArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSrchArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array of responses for a check image search </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChkImgSrchInfo" type="ChkImgSrchInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSrchInfo_CType">
    <xsd:annotation>
      <xsd:documentation>A package of data check image search</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ChkImgId" type="ChkImgId_Type" />
      <xsd:element minOccurs="0" name="AccountId" type="AccountId_CType" />
      <xsd:element minOccurs="0" name="ChkImgProcDt" type="ChkImgProcDt_Type" />
      <xsd:element minOccurs="0" name="Amt" type="Amt_Type" />
      <xsd:element minOccurs="0" name="TrnCodeCode" nillable="true" type="TrnCodeCode_Type" />
      <xsd:element minOccurs="0" name="TrnType" nillable="true" type="TrnType_Type" />
      <xsd:element minOccurs="0" name="ChkNum" nillable="true" type="ChkNum_Type" />
      <xsd:element minOccurs="0" name="RtNum" nillable="true" type="RtNum_Type" />
      <xsd:element minOccurs="0" name="ChkImgSrcCode" nillable="true" type="ChkImgSrcCode_Type" />
      <xsd:element minOccurs="0" name="ChkImgSrcCodeDesc" nillable="true" type="ChkImgSrcCodeDesc_Type" />
      <xsd:element minOccurs="0" name="ChkImgSubSrcCode" nillable="true" type="ChkImgSubSrcCode_Type" />
      <xsd:element minOccurs="0" name="ChkImgSubSrcCodeDesc" nillable="true" type="ChkImgSubSrcCodeDesc_Type" />
      <xsd:element minOccurs="0" name="ItemProcEndor" nillable="true" type="ItemProcEndor_Type" />
      <xsd:element minOccurs="0" name="ProcCntlFld" nillable="true" type="ProcCntlFld_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ChkImgProcDt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Process date for a check image</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:date" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Amt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Amount - quantity</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkNum_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The number(s) or characters(s) assigned to a monetary drafts often
                        times referred to as the serial number.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSrcCodeDesc_Type">
    <xsd:annotation>
      <xsd:documentation>The description of a source code of a check image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ChkImgSubSrcCodeDesc_Type">
    <xsd:annotation>
      <xsd:documentation>The description of a sub-source code of a check
                image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ItemProcEndor_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The endorsement sprayed on the back of the check</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProcCntlFld_Type">
    <xsd:annotation>
      <xsd:documentation>The process control field of a check image</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocBatchSrch" type="DocBatchSrchRq_MType" />
  <xsd:complexType name="DocBatchSrchRq_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRqHdr" type="SrchMsgRqHdr_CType" />
      <xsd:element name="BatchId" type="BatchId_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BatchId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> This is a field used to identify a collection of documents in a
                        processing run</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocBatchSrchResponse" type="DocBatchSrchRs_MType" />
  <xsd:complexType name="DocBatchSrchRs_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRsHdr" type="SrchMsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="BatchId" nillable="true" type="BatchId_Type" />
      <xsd:element minOccurs="0" name="DocBatchSrchArray" nillable="true" type="DocBatchSrchArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocBatchSrchArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for document Data search request.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocBatchSrchInfo" type="DocBatchSrchInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocBatchSrchInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="CustId" type="CustId_Type" />
      <xsd:element minOccurs="0" name="AcctId" type="AcctId_Type" />
      <xsd:element minOccurs="0" name="AcctType" type="AcctType_Type" />
      <xsd:element minOccurs="0" name="IntnetFinInstId" type="IntnetFinInstId_Type" />
      <xsd:element minOccurs="0" name="DocDtId" type="DocDtId_Type" />
      <xsd:element minOccurs="0" name="ElecDocCode" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="ElecDocDesc" type="ElecDocDesc_Type" />
      <xsd:element minOccurs="0" name="StmtId" type="StmtId_Type" />
      <xsd:element minOccurs="0" name="ElecDocStat" type="ElecDocStat_Type" />
      <xsd:element minOccurs="0" name="DocPgCnt" type="DocPgCnt_Type" />
      <xsd:element minOccurs="0" name="ImgCnt" type="ImgCnt_Type" />
      <xsd:element minOccurs="0" name="ImgMissingType" type="ImgMissingType_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IntnetFinInstId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The identification assigned to a consumer for the
                financial institution internet product</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocDtId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Describes the date or key data related to the generation of a
                        document</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ElecDocCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The code that identifies the type of electronic document </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ElecDocDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The description of the code that identifies the type of electronic
                        document </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocPgCnt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> The count of pages contained in a PDF</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ImgCnt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> The count of images within a batch of generated documents</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ImgMissingType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Images are missing from the document</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocTextFormatInq" type="DocTextFormatInqRq_MType" />
  <xsd:complexType name="DocTextFormatInqRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DocTextFormatInqResponse" type="DocTextFormatInqRs_MType" />
  <xsd:complexType name="DocTextFormatInqRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="DocTextFormatArray" nillable="true" type="DocTextFormatArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocTextFormatArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for document text formatting.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocTextFormatInfo" type="DocTextFormatInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocTextFormatInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="TextGroupId" type="TextGroupId_Type" />
      <xsd:element minOccurs="0" name="BoldType" type="BoldType_Type" />
      <xsd:element minOccurs="0" name="ItalicType" type="ItalicType_Type" />
      <xsd:element minOccurs="0" name="FontColor" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="FontSize" type="FontSize_Type" />
      <xsd:element minOccurs="0" name="FontName" type="FontName_Type" />
      <xsd:element minOccurs="0" name="DrwBandType" type="DrwBandType_Type" />
      <xsd:element minOccurs="0" name="BandColor" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="BandBorderColor" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="SuppressPrtType" type="SuppressPrtType_Type" />
      <xsd:element minOccurs="0" name="AllUpCaseType" type="AllUpCaseType_Type" />
      <xsd:element minOccurs="0" name="TextAlignCode" type="TextAlignCode_Type" />
      <xsd:element minOccurs="0" name="TextAlignDesc" type="TextAlignDesc_Type" />
      <xsd:element minOccurs="0" name="AltLineColorPrim" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="AltLineColorSecd" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="UseAltLineColorType" type="UseAltLineColorType_Type" />
      <xsd:element minOccurs="0" name="RmvString" type="RmvString_Type" />
      <xsd:element minOccurs="0" name="LineAttrbtArray" type="LineAttrbtArray_AType" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TextGroupId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The parent ID that a text attribute is associated with.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="BoldType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Per line print setting - BOLD</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ItalicType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Per line print setting - ITALIC</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="RGBColorId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> RGB, HSL or CMYK color value</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FontSize_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> FontSize</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FontName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>FontName</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DrwBandType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Draw background color around a block of text?</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SuppressPrtType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Per line force a blank line to be printed</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AllUpCaseType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Per line force letters to be upper case</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TextAlignCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Text alignment is a formatting attribute that determines the
                        appearance of the text. The integer values may represent the following: 0 -
                        No alignment 1 - Left alignment 2 - Right alignment 3 - Center alignment
                    </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TextAlignDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Text Alignment Name</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UseAltLineColorType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Per line enable alternating the background line colors.</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="RmvString_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Per Line enter the search value for characters to be replaced with an
                        empty string</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="LineAttrbtArray_AType">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="LineAttrbtInfo" type="LineAttrbtInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LineAttrbtInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="LineAttrbtId" type="LineAttrbtId_Type" />
      <xsd:element minOccurs="0" name="AltColorBreakPt" type="AltColorBreakPt_Type" />
      <xsd:element minOccurs="0" name="StartBorderBlkId" type="StartBorderBlkId_Type" />
      <xsd:element minOccurs="0" name="EndBorderBlkId" type="EndBorderBlkId_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LineAttrbtId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>This is a lookup key for processing the XML documents</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AltColorBreakPt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> The element controlling alternating line coloring on statements or
                        other documents</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="StartBorderBlkId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Indicates the start of a border around a block of code</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EndBorderBlkId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Indicates the end of a border around a block of code</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="DocOptFormatInq" type="DocOptFormatInqRq_MType" />
  <xsd:complexType name="DocOptFormatInqRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element name="ElecDocCodeArray" type="ElecDocCodeArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ElecDocCodeArray_AType">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="ElecDocCodeInfo" type="ElecDocCodeInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ElecDocCodeInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ElecDocCode" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DocOptFormatInqResponse" type="DocOptFormatInqRs_MType" />
  <xsd:complexType name="DocOptFormatInqRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="DocOptFormatArray" nillable="true" type="DocOptFormatArray_AType" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocOptFormatArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for Document option formatting.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocOptFormatInfo" type="DocOptFormatInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocOptFormatInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ElecDocCode" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="DocOptInfo" type="DocOptInfo_CType" />
      <xsd:element minOccurs="0" name="DocLinkArray" type="DocLinkArray_AType" />
      <xsd:element minOccurs="0" name="DocMktgInsertArray" type="DocMktgInsertArray_AType" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocOptInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ElecDocCode" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="ElecDocDesc" type="ElecDocDesc_Type" />
      <xsd:element minOccurs="0" name="Orientation" type="Orientation_Type" />
      <xsd:element minOccurs="0" name="UseWaterMarkType" type="UseWaterMarkType_Type" />
      <xsd:element minOccurs="0" name="DrwBorderType" type="DrwBorderType_Type" />
      <xsd:element minOccurs="0" name="BorderColor" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="PgNumLocCode" type="PgNumLocCode_Type" />
      <xsd:element minOccurs="0" name="ButtonLocCode" type="ButtonLocCode_Type" />
      <xsd:element minOccurs="0" name="MarginTop" type="MarginId_Type" />
      <xsd:element minOccurs="0" name="MarginBottom" type="MarginId_Type" />
      <xsd:element minOccurs="0" name="MarginLeft" type="MarginId_Type" />
      <xsd:element minOccurs="0" name="MarginRight" type="MarginId_Type" />
      <xsd:element minOccurs="0" name="PrtOffsetLeft" type="PrtOffset_Type" />
      <xsd:element minOccurs="0" name="PrtOffsetTop" type="PrtOffset_Type" />
      <xsd:element minOccurs="0" name="UsePgColorType" type="UsePgColorType_Type" />
      <xsd:element minOccurs="0" name="PgColor" type="RGBColorId_Type" />
      <xsd:element minOccurs="0" name="MarginLinkTop" type="MarginId_Type" />
      <xsd:element minOccurs="0" name="ExtraTopLines" type="ExtraTopLines_Type" />
      <xsd:element minOccurs="0" name="UseLogoType" type="UseLogoType_Type" />
      <xsd:element minOccurs="0" name="UsePgBackerType" type="UsePgBackerType_Type" />
      <xsd:element minOccurs="0" name="RmvTopLineType" type="RmvTopLineType_Type" />
      <xsd:element minOccurs="0" name="UseAddlWaterMarkType" type="UseWaterMarkType_Type" />
      <xsd:element minOccurs="0" name="PgHeight" type="Height_Type" />
      <xsd:element minOccurs="0" name="PgWidth" type="Width_Type" />
      <xsd:element minOccurs="0" name="ElecDocActType" type="ElecDocActType_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Orientation_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">
        <ElemDesc>Orientation</ElemDesc>
        <CanonicalVal>Landscape,Portrait,RvrLandscape,RvrPortrait</CanonicalVal>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UseWaterMarkType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Enable placing/drawing a watermark on the text pages of a
                        document.</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DrwBorderType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Draw border</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PgNumLocCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Page Number Location Code. The integer values may represent the
                        following: 0 - No page number 1 - Page Number Top Left 2 - Page Number Top
                        Center 3 - Page Number Top Right 4 - Page Number Bottom Left 5 - Page Number
                        Bottom Center 6 - Page Number Bottom Right </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ButtonLocCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Button location used to drive location of hyperlinks. The integer
                        values may represent the following: 0 - No Button 1 - Button Top of first
                        page 2 - Button Bottom of first page 3 - Button Right side of first page 4 -
                        Button Left side of first page 5 - Button Seperate page </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MarginId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>A property used for setting the margin properties</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PrtOffset_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Print Offset.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UsePgColorType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Use FI defined Page color for printing Statement and other documents </ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ExtraTopLines_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Value indicates the number of extra blank lines needed to move the
                        body of printed text lower on a page. </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UseLogoType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Use FI defined Logo </ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="UsePgBackerType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Use FI defined page backer </ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="RmvTopLineType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Remove top lines to move the body of printed text higher on a page. </ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Height_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The height property is used to set the height of an
                        element.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Width_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The width property is used to set the width of an element.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ElecDocActType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Indicates whether a Electronic document is currently active for the FI </ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocLinkArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for Link options.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocLinkInfo" type="DocLinkInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocLinkInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="URLDspText" type="URLDspText_Type" />
      <xsd:element minOccurs="0" name="URLDest" type="URLDest_Type" />
      <xsd:element minOccurs="0" name="URLPositOrder" type="URLPositOrder_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="URLDspText_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The human readable text displayed for a URL hyperlink</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="URLDest_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> The Uniform Resource Locator (URL) web address location</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:anyURI" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="URLPositOrder_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The order/position in which hyper-links are placed on a
                document</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Order_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="Order_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>A counting number which includes positive integers and non-negative
                        integer (zero) that conveys an order set of variables</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int" />
  </xsd:simpleType>
  <xsd:complexType name="DocMktgInsertArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response for Marketing Inserts related to a document.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="DocMktgInsertInfo" type="DocMktgInsertInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocMktgInsertInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="MktgInsertCode" type="MktgInsertCode_Type" />
      <xsd:element minOccurs="0" name="MktgInsertDesc" type="MktgInsertDesc_Type" />
      <xsd:element minOccurs="0" name="PgCnt" type="DocPgCnt_Type" />
      <xsd:element minOccurs="0" name="StartDt" type="StartDt_Type" />
      <xsd:element minOccurs="0" name="EndDt" type="EndDt_Type" />
      <xsd:element minOccurs="0" name="DftMktgInsertType" type="DftMktgInsertType_Type" />
      <xsd:element minOccurs="0" name="MktgInsertRuleArray" type="MktgInsertRuleArray_AType" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Marketing Insert Code. </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The description of the code that of a Marketing Insert.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DftMktgInsertType_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc> Identifies the default Marketing Insert related to a
                        document</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertRuleArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response Rules for Marketing Inserts related to a document.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="MktgInsertRuleInfo" type="MktgInsertRuleInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertRuleInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="PrioritySeq" type="PrioritySeq_Type" />
      <xsd:element minOccurs="0" name="MktgInsertCondArray" type="MktgInsertCondArray_AType" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PrioritySeq_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The assignment of a priority sequence for an array of items</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertCondArray_AType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An array response Marketing Insert Conditions related to Rules for Marketing Inserts.
   </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="MktgInsertCondInfo" type="MktgInsertCondInfo_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MktgInsertCondInfo_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SelOrder" type="SelOrder_Type" />
      <xsd:element minOccurs="0" name="SelCode" type="SelCode_Type" />
      <xsd:element minOccurs="0" name="SelOperand" type="SelOperand_Type" />
      <xsd:element minOccurs="0" name="SelVal" type="SelVal_Type" />
      <xsd:element minOccurs="0" name="Custom" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SelOrder_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> The order of select statements </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Order_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SelCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>The code to be used as part of a select statement</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SelOperand_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> The allowable operands to provide choices between
                select conditions <Jx><CanonicalVal>EQ,GT,GE,LT,LE,NE,IN</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="SelVal_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en"> The value used for select
                statements</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="FormatDocInq" type="FormatDocInqRq_MType" />
  <xsd:complexType name="FormatDocInqRq_MType">
    <xsd:sequence>
      <xsd:element name="MsgRqHdr" type="MsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="DocId" nillable="true" type="DocId_Type" />
      <xsd:element minOccurs="0" name="ElecDocCode" nillable="true" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="DocFileId" nillable="true" type="DocFileId_Type" />
      <xsd:element minOccurs="0" name="Cursor" nillable="true" type="Cursor_Type" />
      <xsd:element minOccurs="0" name="MaxBytes" nillable="true" type="MaxBytes_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Document Name or Number or other identifying value</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="DocFileId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx>
          <ElemDesc>Document File Id represents the type of physical file associated with
                        a document</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
        <xsd:attribute name="Rstr" type="Rstr_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="FormatDocInqResponse" type="FormatDocInqRs_MType" />
  <xsd:complexType name="FormatDocInqRs_MType">
    <xsd:sequence>
      <xsd:element name="MsgRsHdr" type="MsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="DocId" nillable="true" type="DocId_Type" />
      <xsd:element minOccurs="0" name="ElecDocCode" nillable="true" type="ElecDocCode_Type" />
      <xsd:element minOccurs="0" name="DocFileId" nillable="true" type="DocFileId_Type" />
      <xsd:element minOccurs="0" name="Cursor" nillable="true" type="Cursor_Type" />
      <xsd:element minOccurs="0" name="MaxBytes" nillable="true" type="MaxBytes_Type" />
      <xsd:element minOccurs="0" name="DocImgBytes" nillable="true" type="DocImgBytes_Type" />
      <xsd:element minOccurs="0" name="DocImg" nillable="true" type="DocImg_Type" />
      <xsd:element minOccurs="0" name="MoreBytes" nillable="true" type="MoreBytes_Type" />
      <xsd:element minOccurs="0" name="Custom" nillable="true" type="Custom_CType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>