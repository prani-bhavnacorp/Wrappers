<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns="http://jackhenry.com/jxchange/TPG/2008" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://jackhenry.com/jxchange/TPG/2008" version="R2013.1.00" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import schemaLocation="oasis-200401-wss-wssecurity-secext-1.0.xsd" namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" />
  <xsd:group name="Main">
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">JHA Customer Messages</xsd:documentation>
      </xsd:annotation>
      <xsd:element ref="Ping" />
      <xsd:element ref="PingResponse" />
      <xsd:element ref="HdrFault" />
      <xsd:element ref="BrdCstSrch" />
      <xsd:element ref="BrdCstSrchResponse" />
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="Ping" type="PingRq_MType" />
  <xsd:complexType name="PingRq_MType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is a common Ping request for checking, testing,
                and keep alive</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PingRq" type="PingRq_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingRq_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Generic Text for the ping request</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Ver_1_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the first iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:element name="PingResponse" type="PingRs_MType" />
  <xsd:complexType name="PingRs_MType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is a common Ping response which should echo back
                the string that was sent in the PingRq</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PingRs" type="PingRs_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingRs_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">String echoed back from the PingRq. The element value
                will contain Error when the Ping request to a service provider is not successful <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>Error</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="OpenEnum_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a string type which is Enum but is Bank defined
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:element name="HdrFault" type="HdrFault_MType" />
  <xsd:complexType name="HdrFault_MType">
    <xsd:sequence>
      <xsd:element name="FaultHdr" nillable="true" type="FaultHdr_CType" />
      <xsd:element minOccurs="0" name="FaultRecInfoArray" nillable="true" type="FaultRecInfoArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Jxchange header for soap envelop</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="JxVer" type="FaultJxVer_Type" />
      <xsd:element name="AuditUsrId" type="FaultAuditUsrId_Type" />
      <xsd:element name="AuditWsId" type="FaultAuditWsId_Type" />
      <xsd:element minOccurs="0" name="AuthenUsrId" type="FaultAuthenUsrId_Type">
        <xsd:annotation>
          <xsd:documentation>
            <Deprecate xmlns="http://jackhenry.com/jxchange/TPG/2008">
              <Dt>2012-01-01</Dt>
              <Cmnt>The AuthenUsrId will be delivered as part of the Authentication
                                User Credentials element  (AuthenUsrCred_CType) in the form of a WS Security-Security Token. The
                                Attribute name identity claims name is to be used to deliver a user identification
                                (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)</Cmnt>
            </Deprecate>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ConsumerName" type="FaultConsumerName_Type" />
      <xsd:element minOccurs="0" name="ConsumerProd" type="FaultConsumerProd_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:element minOccurs="0" name="jXLogTrackingId" type="FaultjXLogTrackingId_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="FaultVer_2_CType" />
          <xsd:element minOccurs="0" name="InstRtId" type="InstRtId_Type" />
          <xsd:element minOccurs="0" name="InstEnv" type="InstEnv_Type" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="FaultVer_3_CType" />
            <xsd:element minOccurs="0" name="BusCorrelId" type="BusCorrelId_Type" />
            <xsd:sequence minOccurs="0">
              <xsd:element name="Ver_4" type="FaultVer_4_CType" />
              <xsd:element minOccurs="0" name="WorkflowCorrelId" type="WorkflowCorrelId_Type" />
              <xsd:sequence minOccurs="0">
                <xsd:element name="Ver_5" type="FaultVer_5_CType" />
                <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
              </xsd:sequence>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultJxVer_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The element will contain the version Jx is running for Soap Header
                        Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuditUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like written to the audit
                        as performing the requested service. It will vary but could be down to the
                        user id. It will not be use to authenticate however just audit for Soap
                        Header Fault .</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuditWsId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the WorkStation Id which the consumer would like written to
                        the audit as performing the requested service for Soap Header Fault . It
                        will vary but could be down to the user id.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultAuthenUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like the service provider
                        to use to authenticate with for Soap Header Fault . It is a user id which
                        the provider will understand</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultConsumerName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The name of the service consumer (Business name) for Soap Header
                        Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultConsumerProd_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The name of the product which is consuming the service (Business
                        Product Name) for Soap Header Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_1_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the first iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="FaultjXLogTrackingId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>An identification provided by jXchange to be able to trace the request
                        and response of a message from the third party gateway, internal gateway,
                        and service provider for Soap Header Fault</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_2_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the second iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="InstRtId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The identification of the entity of submitted message. A financial
                        institution entity will utilize the routing transit or ABA nine (9) digit
                        number assigned to financial institutions for the purpose of routing as
                        assigned by the American Bankers Association. Any leading zeros must be
                        provided for a complete routing and transit number. A non-financial
                        institution entity will use a mutually agreed upon identification that must
                        contain at least one non-integer character.  When a record is directed to a specific 
                        Financial Institution within a holding company, the institution routing identification is the 
                        specific Financial Institution routing identification and not the holding company identification. </ElemDesc>
        </Jx>
        <CoreDirector xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemRules>Required on all message requests</ElemRules>
        </CoreDirector>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="JHANull" type="JHANull_Type" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="JHANull_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The nillable element used as an attribute for elements. JHANull=true
                        will convey to service providers to null the matching field to element to
                        null.</ElemDesc>
          <CanonicalVal>true,false</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="ClosedEnum_Type" />
  </xsd:simpleType>
  <xsd:simpleType name="ClosedEnum_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a string type which is Enum and has set values
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>
  <xsd:complexType name="InstEnv_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>An identification provided by the consumer that defines the
                        environment in which the institution is operating.</ElemDesc>
          <CanonicalVal>PROD</CanonicalVal>
          <ElemUsage>This is the Environment in which the Institution is operating.
                        Example: [ PROD, TEST, AUDIT, SYM001, SYM101, ... ] The absence of this
                        element will equate to "PROD" = Production Environment. It will be the
                        responsibility of the sender to send the appropriate data to identify the
                        environment if necessary.</ElemUsage>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="OpenEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_3_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the third iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="BusCorrelId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The correlation identification as related to business functions and activities</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_4_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fourth iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="WorkflowCorrelId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The correlation identification as related to workflow functions and activities</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultVer_5_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fifth iteration of
                the object for Soap Fault Header</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="FaultRecInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array of messages that can be returned in a fault message
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FaultMsgRec" type="FaultMsgRec_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultMsgRec_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Message Record includes the Error responses for the
                soap envelope - can occur multiple times</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ErrCode" type="FaultErrCode_Type" />
      <xsd:element name="ErrCat" type="FaultErrCat_Type" />
      <xsd:element name="ErrDesc" type="FaultErrDesc_Type" />
      <xsd:element minOccurs="0" name="ErrElem" type="FaultErrElem_Type" />
      <xsd:element minOccurs="0" name="ErrElemVal" type="FaultErrElemVal_Type" />
      <xsd:element minOccurs="0" name="ErrLoc" type="FaultErrLoc_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="FaultVer_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FaultErrCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Code</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrCat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Catagory</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Description</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrElem_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault when an Error or Fault occurs this optional element
                        will contain the element which is causing the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrElemVal_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault when an Error or Fault occurs this optional element
                        will contain the value of the element which is causing the error
                        condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="FaultErrLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Soap Header Fault Error Location - This is typically the program that
                        generated the error condition</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="BrdCstSrch" type="BrdCstSrchRq_MType" />
  <xsd:complexType name="BrdCstSrchRq_MType">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">The documented key statement represents a hierarchy relationship whereas a
     provider family will be composed of multiple providers. The provider family will
     be known by the consumer whereas the specific service provider might not be
     known. Some installations could have multiple service providers within the same
     provider family.</Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="SrchMsgRqHdr" type="SrchMsgRqHdr_CType" />
      <xsd:element minOccurs="0" name="EventCode" nillable="true" type="EventCode_Type" />
      <xsd:element minOccurs="0" name="PrvdFamName" nillable="true" type="PrvdFamName_Type" />
      <xsd:element minOccurs="0" name="PrvdName" nillable="true" type="PrvdName_Type" />
      <xsd:element minOccurs="0" name="PrvdSrcId" nillable="true" type="PrvdSrcId_Type" />
      <xsd:element minOccurs="0" name="PrvdSrcEnv" nillable="true" type="PrvdSrcEnv_Type" />
      <xsd:element minOccurs="0" name="EventStartTimeDt" nillable="true" type="EventTimeDt_Type" />
      <xsd:element minOccurs="0" name="EventEndTimeDt" nillable="true" type="EventTimeDt_Type" />
      <xsd:element minOccurs="0" name="EventStartId" nillable="true" type="EventId_Type" />
      <xsd:element minOccurs="0" name="EventEndId" nillable="true" type="EventId_Type" />
      <xsd:element minOccurs="0" name="EventLoc" nillable="true" type="EventLoc_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SrchMsgRqHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Search specific message request headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:element name="MaxRec" type="MaxRec_Type" />
      <xsd:element minOccurs="0" name="Cursor" type="Cursor_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="AuthenUsrCred" type="AuthenUsrCred_CType" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="AuthenProdCred" type="AuthenProdCred_CType" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="jXchangeHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Jxchange headers for tracking</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="JxVer" type="JxVer_Type" />
      <xsd:element name="AuditUsrId" type="AuditUsrId_Type" />
      <xsd:element name="AuditWsId" type="AuditWsId_Type" />
      <xsd:element minOccurs="0" name="AuthenUsrId" type="AuthenUsrId_Type">
        <xsd:annotation>
          <xsd:documentation>
            <Deprecate xmlns="http://jackhenry.com/jxchange/TPG/2008">
              <Dt>2012-01-01</Dt>
              <Cmnt>The AuthenUsrId will be delivered as part of the Authentication
                                User Credentials element  (AuthenUsrCred_CType) in the form of a WS Security-Security Token. The
                                Attribute name identity claims name is to be used to deliver a user identification
                                (http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name)</Cmnt>
            </Deprecate>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ConsumerName" type="ConsumerName_Type" />
      <xsd:element minOccurs="0" name="ConsumerProd" type="ConsumerProd_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:element minOccurs="0" name="jXLogTrackingId" type="jXLogTrackingId_Type" />
        <xsd:sequence minOccurs="0">
          <xsd:element name="Ver_2" type="Ver_2_CType" />
          <xsd:element minOccurs="0" name="InstRtId" type="InstRtId_Type" />
          <xsd:element minOccurs="0" name="InstEnv" type="InstEnv_Type" />
          <xsd:sequence minOccurs="0">
            <xsd:element name="Ver_3" type="Ver_3_CType" />
            <xsd:element minOccurs="0" name="BusCorrelId" type="BusCorrelId_Type" />
            <xsd:sequence minOccurs="0">
              <xsd:element name="Ver_4" type="Ver_4_CType" />
              <xsd:element minOccurs="0" name="WorkflowCorrelId" type="WorkflowCorrelId_Type" />
              <xsd:sequence minOccurs="0">
                <xsd:element name="Ver_5" type="Ver_5_CType" />
                <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
              </xsd:sequence>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JxVer_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The element will contain the version Jx is
                running</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuditUsrId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">This is the User Id which the consumer would like
                written to the audit as performing the requested service. It will vary but could be
                down to the user id. It will not be use to authenticate however just audit.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuditWsId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the WorkStation Id which the consumer would like written to
                        the audit as performing the requested service. It will vary but could be
                        down to the user id. </ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Audit Workstation</ElemLongName>
          <ElemDesc>This element identifies the WorkStation Id that the consumer would
                        like written to the audit as performing the requested service.</ElemDesc>
          <ElemType>Alphanumeric</ElemType>
          <ElemLength>10</ElemLength>
          <ElemSPMap>JXFREF/AUDITWS</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuthenUsrId_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>This is the User Id which the consumer would like the service provider
                        to use to authenticate with. It is a user id which the provider will
                        understand </ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Authority User Name</ElemLongName>
          <ElemDesc>This element identifies the User Id that the consumer would like the
                        service provider to use for authentication.</ElemDesc>
          <ElemType>Alphanumeric</ElemType>
          <ElemLength>10</ElemLength>
          <ElemSPMap>JXFREF/AUTHUSR</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConsumerName_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name of the service consumer (Business name)
            </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConsumerProd_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The name of the product which is consuming the service
                (Business Product Name) </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="jXLogTrackingId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An identification provided by jXchange to be able to
                trace the request and response of a message from the third party gateway, internal
                gateway, and service provider </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Ver_2_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the second iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_3_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the third iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_4_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fourth iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Ver_5_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The object tag that represents the fifth iteration of
                the object</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="MaxRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc> When returning multiple records, this is the maximum number of
                        records to be returned</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Maximum Records</ElemLongName>
          <ElemDesc>When returning multiple records, this is the maximum number of records
                        to be returned</ElemDesc>
          <ElemUsage>When returning multiple records, this is the maximum number of
                        records to be returned.</ElemUsage>
          <ElemType>Numeric</ElemType>
          <ElemLength>6</ElemLength>
          <ElemSPMap>JHFREFAPI/MAXREC (SrchMsgHdr.MaxRec, MaxRec)</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Cursor_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc> When returning multiple records and allowing a subsequent call to
                        retrieve more records this is the "state" information that allows the next
                        call to understand where it left off</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Beginning Record; Next Record</ElemLongName>
          <ElemDesc>When returning multiple records and allowing a subsequent call to
                        retrieve more records this is the "state" information that allows the next
                        call to understand where it left off.</ElemDesc>
          <ElemUsage>When returning multiple records and allowing a subsequent call to
                        retrieve more records this is the "state" information that allows the next
                        call to understand where it left off.</ElemUsage>
          <ElemType>Numeric</ElemType>
          <ElemLength>6</ElemLength>
          <ElemSPMap>Beginning Record: JHFREFAPI/BEGREC (Cursor, SrchMsgRqHdr.Cursor);
                        Next Record: JHFREFAPI/NEXTREC (SrchMsgRqHdr.Cursor)</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="AuthenUsrCred_CType">
    <xsd:annotation>
      <xsd:documentation>Authentication of the end User Credentials in the form of a WS Security Element that contains a single SAML V2.0 Assertion.
                http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf 
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="wsse:Security" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AuthenProdCred_CType">
    <xsd:annotation>
      <xsd:documentation>Authentication of the Consumer Product Credentials in the form of a WS Security Element that contains a single SAML V2.0 Assertion.
                http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf 
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="wsse:Security" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EventCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The code of the event that occurred. The event codes for the Broadcast
                        Event are provided in the canonical values. The event codes for ESM are
                        located in the E(enterprise) E(event) D(Dictionary) referred to as
                        EED.</ElemDesc>
          <CanonicalVal>
            <DataExt>  CustDetail,DepAcct,TimeDepAcct,LnAcct,DepAcctHist,TimeDepAcctHist,LnAcctHist,AcctStmt,EFTCard,Cust_Phone,Cust_Email,Cust_Acct,Dep_MemoPostRmk,Dep_EFTDesc,
                            CustDetailUpd,DepAcctUpd,TimeDepAcctUpd,LnAcctUpd,DepAcctHistUpd,TimeDepAcctHistUpd,LnAcctHistUpd,AcctStmtUpd,EFTCardUpd,Cust_PhoneUpd,Cust_EmailUpd,Cust_AcctUpd,
                            Dep_MemoPostRmkUpd,Dep_EFTDescUpd,DepAcctMemo,TimeDepAcctMemo,LnAcctMemo,DepAcctMemoUpd,TimeDepAcctMemoUpd,LnAcctMemoUpd,Cust_UserDefDetail,
                            Cust_UserDefDetailUpd,Cust_SynapUserDefDetail,Cust_SynapUserDefDetailUpd,Dep_AcctTitle,Dep_AcctTitleUpd,Dep_UserDefDetail,Dep_UserDefDetailUpd,Dep_SynapUserDefDetail,Dep_SynapUserDefDetailUpd,
                            TimeDep_AcctTitle,TimeDep_AcctTitleUpd,TimeDep_UserDefDetail,TimeDep_UserDefDetailUpd,TimeDep_SynapUserDefDetail,TimeDep_SynapUserDefDetailUpd,Ln_AcctTitle,Ln_AcctTitleUpd,LnGLAppTrn,LnGLAppTrnUpd,
                            FASB91Acct,FASB91AcctUpd,Ln_UserDefDetail,Ln_UserDefDetailUpd,Ln_SynapUserDefDetail,Ln_SynapUserDefDetailUpd,DepTrn,DepTrnUpd,Dep_TrnCodeDetail,Dep_TrnCodeDetailUpd,TimeDep_MemoPostRmk,
                            TimeDep_MemoPostRmkUpd,TimeDep_EFTDesc,TimeDep_EFTDescUpd,TimeDepTrn,TimeDepTrnUpd,Ln_MemoPostRmk,Ln_MemoPostRmkUpd,Ln_EFTDesc,Ln_EFTDescUpd,LnTrn,LnTrnUpd,GLAcct,GLAcctUpd,
                            GLTrn,GLTrnUpd,InstDetail,InstDetailUpd,InstBrDetail,InstBrDetailUpd,Inst_OffCodeDetail,Inst_OffCodeDetailUpd,ProdCodeDetail,ProdCodeDetailUpd,PlnCodeDetail,PlnCodeDetailUpd,AcctRelCodeDetail,AcctRelCodeDetailUpd,
                            SafeDepAcct,SafeDepAcctUpd,SafeDep_UserDefDetail,SafeDep_UserDefDetailUpd,SafeDep_AcctTitle,SafeDep_AcctTitleUpd,Cust_IdVerifyDetail,Cust_IdVerifyDetailUpd,Cust_FileMainDetail,Cust_FileMainDetailUpd,
                            Cust_OffCodeDetail,CustOffCodeDetailUpd,Dep_StopChkDetail,Dep_StopChkDetailUpd,Dep_XferDetail,Dep_XferDetailUpd,Dep_AcctSweepDetail,Dep_AcctSweepDetailUpd,Dep_AcctWavDetail,Dep_AcctWavDetailUpd,
                            TimeDep_TaxPlnDetail,TimeDep_TaxPlnDetailUpd,TimeDep_StopChkDetail,TimeDep_StopChkDetailUpd,Ln_XferDetail,Ln_XferDetailUpd,LnBilDetail,LnBilDetailUpd,Ln_OffCodeDetail,Ln_OffCodeDetailUpd,LnFeeDetail,
                            LnFeeDetailUpd,LnPmtSchedDetail,LnPmtSchedDetailUpd,EscrwDetail,EscrwDetailUpd,IntRateIdxDetail,IntRateIdxDetailUpd,InstAppProcDetail,InstAppProcDetailUpd,TrckAcct,TrckAcctUpd,AcctAnlysStmt,AcctAnlysStmtUpd,
                            CollatTrackItem,CollatTrackItemUpd,LOCDetail,LOCDetailUpd,AcctAnlysStmtItem,AcctAnlysStmtItemUpd,AllItemsTrn,AllItemsTrnUpd,EFTCardAcctId,EFTCardAcctIdUpd,CurrTrnDetail,CurrTrnDetailUpd,CollatTrackItemDesc,
                            CollatTrackItemDescUpd,GLAcctMonthBalDetail,GLAcctMonthBalDetailUpd,GLAcctQtrBalDetail,GLAcctQtrBalDetailUpd,AcctFraud,AcctFraudUpd,CmprmCredFraud,CmprmCredFraudUpd,EFTPrePdCardFraud,EFTPrePdCardFraudUpd,
                            IPThreatPatnFraud,IPThreatPatnFraudUpd,HTTPHdrPatnFraud,HTTPHdrPatnFraudUpd
                        </DataExt>
                        FedStartUp,FedActNotif,FedShutDown
                    </CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PrvdFamName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The category or group that the event owner is associated
                        with</ElemDesc>
          <CanonicalVal>Core,CardServices,Wires,VR,JES,Fraud,BilPay</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PrvdName_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The owner name who submitted an event </ElemDesc>
          <CanonicalVal>SilverLake,CIF2020,Episys,Passport,jXchange,iTalk,ODI,YellowHammer</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PrvdSrcId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An Id that identifies the provider of the broadcasted
                event. The routing transit or ABA nine (9) digit number is recommended for financial
                institutions as assigned by the American Bankers Association. Any leading zeros must
                be provided for a complete routing and transit number.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PrvdSrcEnv_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>An identification provided by the provider of the event that defines
                        the environment in which the institution is operating.</ElemDesc>
          <CanonicalVal>PROD</CanonicalVal>
          <ElemUsage>This is the Environment in which the Institution is operating.
                        Example: [ PROD, TEST, AUDIT, SYM001, SYM101, ... ] The absence of this
                        element will equate to "PROD" = Production Environment. It will be the
                        responsibility of the sender to send the appropriate data to identify the
                        environment if necessary.</ElemUsage>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventTimeDt_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The date and time an event was delivered </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:dateTime" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventId_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">An unique identifier provided by service provider for
                registered events.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The event location in repository </ElemDesc>
          <CanonicalVal>first,last</CanonicalVal>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="BrdCstSrchResponse" type="BrdCstSrchRs_MType" />
  <xsd:complexType name="BrdCstSrchRs_MType">
    <xsd:sequence>
      <xsd:element name="SrchMsgRsHdr" type="SrchMsgRsHdr_CType" />
      <xsd:element minOccurs="0" name="BrdCstSrchRecArray" nillable="true" type="BrdCstSrchRecArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SrchMsgRsHdr_CType">
    <xsd:annotation>
      <xsd:documentation>Search specific message response headers</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="jXchangeHdr" type="jXchangeHdr_CType" />
      <xsd:element minOccurs="0" name="SentRec" type="SentRec_Type" />
      <xsd:element minOccurs="0" name="MoreRec" type="MoreRec_Type" />
      <xsd:element minOccurs="0" name="Cursor" type="Cursor_Type" />
      <xsd:element minOccurs="0" name="TotRec" type="TotRec_Type" />
      <xsd:element minOccurs="0" name="MsgRecInfoArray" type="MsgRecInfoArray_AType" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SentRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc> Number of records sent in the response</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Numer Sent Recs, Number Sent Recs, Sent Records</ElemLongName>
          <ElemDesc>Number of records sent in the response </ElemDesc>
          <ElemUsage>Number of records sent in the response </ElemUsage>
          <ElemType>Numeric</ElemType>
          <ElemLength>6</ElemLength>
          <ElemSPMap>JHFREFAPI/SENTREC</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MoreRec_Type">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Indicates if there are more records that could be returned<Jx xmlns="http://jackhenry.com/jxchange/TPG/2008"><CanonicalVal>true,false</CanonicalVal></Jx></xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="ClosedEnum_Type" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TotRec_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Indicates the total records the the request selected which could be
                        larger than MaxRec</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Total # Recs Exist</ElemLongName>
          <ElemDesc>Total # Recs Exist</ElemDesc>
          <ElemUsage>This is the total number of records that exist that meets the
                        required criteria.</ElemUsage>
          <ElemType>Integer</ElemType>
          <ElemLength>15</ElemLength>
          <ElemSPMap>JHFREFAPI/TOTRECS </ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:int" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="MsgRecInfoArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array - of messages that can be returned in a response
            </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="MsgRec" type="MsgRec_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MsgRec_CType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Message Record includes the Error responses - Usually
                can occur multiple times</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ErrCode" type="ErrCode_Type" />
      <xsd:element name="ErrCat" type="ErrCat_Type" />
      <xsd:element name="ErrDesc" type="ErrDesc_Type" />
      <xsd:element minOccurs="0" name="ErrElem" type="ErrElem_Type" />
      <xsd:element minOccurs="0" name="ErrElemVal" type="ErrElemVal_Type" />
      <xsd:element minOccurs="0" name="ErrLoc" type="ErrLoc_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrCode_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Code</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Error Code</ElemLongName>
          <ElemDesc>Error Code</ElemDesc>
          <ElemUsage>This is a numeric value that indicates the type of error returned
                        through jXchange.</ElemUsage>
          <ElemType>Message code: Numeric; Error Override?: Alpha</ElemType>
          <ElemLength>Message code: 7; Error Override?: 245</ElemLength>
          <ElemSPMap>Message code: N/A (%Messages.ErrCode), JXFREF/MSCODE
                        (%Messages.ErrOvrRd.ErrCode); Error Override?: JHFREFAPI/ERROVRRD
                        (ErrOvrRd.ErrCode)</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrCat_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Catagory</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Message Category</ElemLongName>
          <ElemDesc>Error Category</ElemDesc>
          <ElemUsage>This message will contain the type of the error message such as
                        Error, Falt Warning or Override.</ElemUsage>
          <ElemType>Alphabetic</ElemType>
          <ElemLength>20</ElemLength>
          <ElemSPMap>JXFREF/MSCTGY; N/A</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrDesc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Description</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Message Description</ElemLongName>
          <ElemDesc>Error Description </ElemDesc>
          <ElemUsage>Error Description </ElemUsage>
          <ElemType>Alpha </ElemType>
          <ElemLength>80</ElemLength>
          <ElemSPMap>JXFREF/MSDESC, N/A (MSDESC)</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrElem_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        element which is causing the error condition</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Element Error Name, XML Tag</ElemLongName>
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        element which is causing the error condition.</ElemDesc>
          <ElemUsage>When an Error or Fault occurs this optional element will contain the
                        element which is causing the error condition.</ElemUsage>
          <ElemType>Alpha </ElemType>
          <ElemLength>100, 256</ElemLength>
          <ElemSPMap>MSELENAME, JXFREF/MSTAG</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrElemVal_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        value of the element which is causing the error condition</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Element Error Value, XML Tag Value</ElemLongName>
          <ElemDesc>When an Error or Fault occurs this optional element will contain the
                        value of the element which is causing the error condition.</ElemDesc>
          <ElemUsage>When an Error or Fault occurs this optional element will contain the
                        value of the element which is causing the error condition.</ElemUsage>
          <ElemType>Alpha </ElemType>
          <ElemLength>100, 256</ElemLength>
          <ElemSPMap>MSELEVALUE, JXFREF/MSTAGVAL</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ErrLoc_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>Error Location - This is typically the program that generated the
                        error condition</ElemDesc>
        </Jx>
        <Silverlake xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemLongName>Procedure Name</ElemLongName>
          <ElemDesc>Error Location - This is typically the program that generated the
                        error condition.</ElemDesc>
          <ElemUsage>This is the source of the error code. The error code can come from
                        the consumer, the adapter or the service provider.</ElemUsage>
          <ElemType>Alphabetic</ElemType>
          <ElemLength>JXFREF: 100; N/A: 20</ElemLength>
          <ElemSPMap>JXFREF/MSPROC, N/A (Messages.ErrLoc)</ElemSPMap>
        </Silverlake>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="BrdCstSrchRecArray_AType">
    <xsd:annotation>
      <xsd:documentation>Array of responses for a broadcast search </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="BrdCstSrchRec" type="BrdCstSrchRec_CType" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BrdCstSrchRec_CType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="EventCode" type="EventCode_Type" />
      <xsd:element minOccurs="0" name="PrvdFamName" type="PrvdFamName_Type" />
      <xsd:element minOccurs="0" name="PrvdName" type="PrvdName_Type" />
      <xsd:element minOccurs="0" name="PrvdSrcId" type="PrvdSrcId_Type" />
      <xsd:element minOccurs="0" name="PrvdSrcEnv" type="PrvdSrcEnv_Type" />
      <xsd:element minOccurs="0" name="EventTimeDt" type="EventTimeDt_Type" />
      <xsd:element minOccurs="0" name="EventRef" type="EventRef_Type" />
      <xsd:element minOccurs="0" name="EventPkgContent" type="EventPkgContent_Type" />
      <xsd:element minOccurs="0" name="EventId" type="EventId_Type" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="Ver_1" type="Ver_1_CType" />
        <xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" />
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EventRef_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>URI location which an events object is located.</ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:anyURI" />
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventPkgContent_Type">
    <xsd:annotation>
      <xsd:documentation>
        <Jx xmlns="http://jackhenry.com/jxchange/TPG/2008">
          <ElemDesc>The package that contains the actual data for the referenced event
                    </ElemDesc>
        </Jx>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>