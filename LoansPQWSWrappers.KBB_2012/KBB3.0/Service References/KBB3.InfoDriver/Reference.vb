'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace KBB3.InfoDriver
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CPOMake", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CPOMake
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MakeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProgramsField() As KBB3.InfoDriver.CPOProgram
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Make() As String
            Get
                Return Me.MakeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MakeField, value) <> true) Then
                    Me.MakeField = value
                    Me.RaisePropertyChanged("Make")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Programs() As KBB3.InfoDriver.CPOProgram()
            Get
                Return Me.ProgramsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProgramsField, value) <> true) Then
                    Me.ProgramsField = value
                    Me.RaisePropertyChanged("Programs")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CPOProgram", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CPOProgram
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SectionHeaderField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ContentTextField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SequenceField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SectionHeader() As String
            Get
                Return Me.SectionHeaderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SectionHeaderField, value) <> true) Then
                    Me.SectionHeaderField = value
                    Me.RaisePropertyChanged("SectionHeader")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
        Public Property ContentText() As String
            Get
                Return Me.ContentTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ContentTextField, value) <> true) Then
                    Me.ContentTextField = value
                    Me.RaisePropertyChanged("ContentText")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public Property Sequence() As Integer
            Get
                Return Me.SequenceField
            End Get
            Set
                If (Me.SequenceField.Equals(value) <> true) Then
                    Me.SequenceField = value
                    Me.RaisePropertyChanged("Sequence")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ApplicationCategory", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum ApplicationCategory As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Consumer = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Dealer = 1
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CompetitiveVehicle", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CompetitiveVehicle
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YearField As KBB3.InfoDriver.IdStringPair
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MakeField As KBB3.InfoDriver.IdStringPair
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModelField As KBB3.InfoDriver.IdStringPair
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisplayNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VehicleIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NumberOfDoorsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OEMBodyStyleField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultEngineField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultDrivetrainField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultTransmissionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdditionalDataField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MarketNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BedLengthField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Year() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.YearField
            End Get
            Set
                If (Object.ReferenceEquals(Me.YearField, value) <> true) Then
                    Me.YearField = value
                    Me.RaisePropertyChanged("Year")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
        Public Property Make() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.MakeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MakeField, value) <> true) Then
                    Me.MakeField = value
                    Me.RaisePropertyChanged("Make")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public Property Model() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.ModelField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModelField, value) <> true) Then
                    Me.ModelField = value
                    Me.RaisePropertyChanged("Model")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public Property DisplayName() As String
            Get
                Return Me.DisplayNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DisplayNameField, value) <> true) Then
                    Me.DisplayNameField = value
                    Me.RaisePropertyChanged("DisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
        Public Property VehicleId() As Integer
            Get
                Return Me.VehicleIdField
            End Get
            Set
                If (Me.VehicleIdField.Equals(value) <> true) Then
                    Me.VehicleIdField = value
                    Me.RaisePropertyChanged("VehicleId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
        Public Property NumberOfDoors() As String
            Get
                Return Me.NumberOfDoorsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NumberOfDoorsField, value) <> true) Then
                    Me.NumberOfDoorsField = value
                    Me.RaisePropertyChanged("NumberOfDoors")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
        Public Property OEMBodyStyle() As String
            Get
                Return Me.OEMBodyStyleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OEMBodyStyleField, value) <> true) Then
                    Me.OEMBodyStyleField = value
                    Me.RaisePropertyChanged("OEMBodyStyle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
        Public Property DefaultEngine() As String
            Get
                Return Me.DefaultEngineField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultEngineField, value) <> true) Then
                    Me.DefaultEngineField = value
                    Me.RaisePropertyChanged("DefaultEngine")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
        Public Property DefaultDrivetrain() As String
            Get
                Return Me.DefaultDrivetrainField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultDrivetrainField, value) <> true) Then
                    Me.DefaultDrivetrainField = value
                    Me.RaisePropertyChanged("DefaultDrivetrain")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
        Public Property DefaultTransmission() As String
            Get
                Return Me.DefaultTransmissionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultTransmissionField, value) <> true) Then
                    Me.DefaultTransmissionField = value
                    Me.RaisePropertyChanged("DefaultTransmission")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
        Public Property AdditionalData() As String
            Get
                Return Me.AdditionalDataField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdditionalDataField, value) <> true) Then
                    Me.AdditionalDataField = value
                    Me.RaisePropertyChanged("AdditionalData")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
        Public Property MarketName() As String
            Get
                Return Me.MarketNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MarketNameField, value) <> true) Then
                    Me.MarketNameField = value
                    Me.RaisePropertyChanged("MarketName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
        Public Property BedLength() As String
            Get
                Return Me.BedLengthField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BedLengthField, value) <> true) Then
                    Me.BedLengthField = value
                    Me.RaisePropertyChanged("BedLength")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="IdStringPair", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class IdStringPair
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As String
            Get
                Return Me.ValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValueField, value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleConfiguration", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(KBB3.InfoDriver.Conversion))>  _
    Partial Public Class VehicleConfiguration
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private IdField As Integer
        
        Private VINField As String
        
        Private YearField As KBB3.InfoDriver.IdStringPair
        
        Private MakeField As KBB3.InfoDriver.IdStringPair
        
        Private ModelField As KBB3.InfoDriver.IdStringPair
        
        Private TrimField As KBB3.InfoDriver.IdStringPair
        
        Private MileageField As Integer
        
        Private OptionalEquipmentField() As KBB3.InfoDriver.EquipmentOption
        
        Private ConfiguredDateField As Date
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property VIN() As String
            Get
                Return Me.VINField
            End Get
            Set
                If (Object.ReferenceEquals(Me.VINField, value) <> true) Then
                    Me.VINField = value
                    Me.RaisePropertyChanged("VIN")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property Year() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.YearField
            End Get
            Set
                If (Object.ReferenceEquals(Me.YearField, value) <> true) Then
                    Me.YearField = value
                    Me.RaisePropertyChanged("Year")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=3)>  _
        Public Property Make() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.MakeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MakeField, value) <> true) Then
                    Me.MakeField = value
                    Me.RaisePropertyChanged("Make")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=4)>  _
        Public Property Model() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.ModelField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModelField, value) <> true) Then
                    Me.ModelField = value
                    Me.RaisePropertyChanged("Model")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=5)>  _
        Public Property Trim() As KBB3.InfoDriver.IdStringPair
            Get
                Return Me.TrimField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TrimField, value) <> true) Then
                    Me.TrimField = value
                    Me.RaisePropertyChanged("Trim")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=6)>  _
        Public Property Mileage() As Integer
            Get
                Return Me.MileageField
            End Get
            Set
                If (Me.MileageField.Equals(value) <> true) Then
                    Me.MileageField = value
                    Me.RaisePropertyChanged("Mileage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=7)>  _
        Public Property OptionalEquipment() As KBB3.InfoDriver.EquipmentOption()
            Get
                Return Me.OptionalEquipmentField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OptionalEquipmentField, value) <> true) Then
                    Me.OptionalEquipmentField = value
                    Me.RaisePropertyChanged("OptionalEquipment")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=8)>  _
        Public Property ConfiguredDate() As Date
            Get
                Return Me.ConfiguredDateField
            End Get
            Set
                If (Me.ConfiguredDateField.Equals(value) <> true) Then
                    Me.ConfiguredDateField = value
                    Me.RaisePropertyChanged("ConfiguredDate")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Conversion", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Conversion
        Inherits KBB3.InfoDriver.VehicleConfiguration
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConversionActionField As KBB3.InfoDriver.ConversionAction
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConversionAction() As KBB3.InfoDriver.ConversionAction
            Get
                Return Me.ConversionActionField
            End Get
            Set
                If (Me.ConversionActionField.Equals(value) <> true) Then
                    Me.ConversionActionField = value
                    Me.RaisePropertyChanged("ConversionAction")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EquipmentOption", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EquipmentOption
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisplayNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VehicleOptionIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsSelectedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OptionTypeDisplayNameField As KBB3.InfoDriver.OptionType
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OptionGroupNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisplayNameAdditionalDataField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ManufactureCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OptionAvailabilityDisplayNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsDefaultConfigurationField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DetailNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NonBoldNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FooterField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SortOrderField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DisplayName() As String
            Get
                Return Me.DisplayNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DisplayNameField, value) <> true) Then
                    Me.DisplayNameField = value
                    Me.RaisePropertyChanged("DisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VehicleOptionId() As Integer
            Get
                Return Me.VehicleOptionIdField
            End Get
            Set
                If (Me.VehicleOptionIdField.Equals(value) <> true) Then
                    Me.VehicleOptionIdField = value
                    Me.RaisePropertyChanged("VehicleOptionId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
        Public Property IsSelected() As Boolean
            Get
                Return Me.IsSelectedField
            End Get
            Set
                If (Me.IsSelectedField.Equals(value) <> true) Then
                    Me.IsSelectedField = value
                    Me.RaisePropertyChanged("IsSelected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
        Public Property OptionTypeDisplayName() As KBB3.InfoDriver.OptionType
            Get
                Return Me.OptionTypeDisplayNameField
            End Get
            Set
                If (Me.OptionTypeDisplayNameField.Equals(value) <> true) Then
                    Me.OptionTypeDisplayNameField = value
                    Me.RaisePropertyChanged("OptionTypeDisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
        Public Property OptionGroupName() As String
            Get
                Return Me.OptionGroupNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OptionGroupNameField, value) <> true) Then
                    Me.OptionGroupNameField = value
                    Me.RaisePropertyChanged("OptionGroupName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
        Public Property DisplayNameAdditionalData() As String
            Get
                Return Me.DisplayNameAdditionalDataField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DisplayNameAdditionalDataField, value) <> true) Then
                    Me.DisplayNameAdditionalDataField = value
                    Me.RaisePropertyChanged("DisplayNameAdditionalData")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
        Public Property ManufactureCode() As String
            Get
                Return Me.ManufactureCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ManufactureCodeField, value) <> true) Then
                    Me.ManufactureCodeField = value
                    Me.RaisePropertyChanged("ManufactureCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
        Public Property OptionAvailabilityDisplayName() As String
            Get
                Return Me.OptionAvailabilityDisplayNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OptionAvailabilityDisplayNameField, value) <> true) Then
                    Me.OptionAvailabilityDisplayNameField = value
                    Me.RaisePropertyChanged("OptionAvailabilityDisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
        Public Property IsDefaultConfiguration() As Boolean
            Get
                Return Me.IsDefaultConfigurationField
            End Get
            Set
                If (Me.IsDefaultConfigurationField.Equals(value) <> true) Then
                    Me.IsDefaultConfigurationField = value
                    Me.RaisePropertyChanged("IsDefaultConfiguration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
        Public Property DetailName() As String
            Get
                Return Me.DetailNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DetailNameField, value) <> true) Then
                    Me.DetailNameField = value
                    Me.RaisePropertyChanged("DetailName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
        Public Property NonBoldName() As String
            Get
                Return Me.NonBoldNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NonBoldNameField, value) <> true) Then
                    Me.NonBoldNameField = value
                    Me.RaisePropertyChanged("NonBoldName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
        Public Property Footer() As String
            Get
                Return Me.FooterField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FooterField, value) <> true) Then
                    Me.FooterField = value
                    Me.RaisePropertyChanged("Footer")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
        Public Property SortOrder() As Integer
            Get
                Return Me.SortOrderField
            End Get
            Set
                If (Me.SortOrderField.Equals(value) <> true) Then
                    Me.SortOrderField = value
                    Me.RaisePropertyChanged("SortOrder")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OptionType", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum OptionType As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        [Option] = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Engine = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        DriveTrain = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Transmission = 3
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ConversionAction", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum ConversionAction As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Unchanged = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Added = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Removed = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Replaced = 3
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Updated = 4
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="PriceType", [Namespace]:="http://www.kbb.com/VehicleInformationService/2008/09")>  _
    Public Enum PriceType As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        BaseWholesale = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Wholesale = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        BaseRetail = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Retail = 3
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        PrivatePartyExcellent = 4
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        PrivatePartyGood = 5
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        PrivatePartyVeryGood = 6
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        PrivatePartyFair = 7
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInExcellent = 8
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInGood = 9
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInVeryGood = 10
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInFair = 11
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        MSRP = 12
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Invoice = 13
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AuctionExcellent = 14
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AuctionGood = 15
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AuctionVeryGood = 16
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AuctionFair = 17
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        CPO = 18
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInExcellentRangeLow = 19
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInExcellentRangeHigh = 20
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInGoodRangeLow = 21
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInGoodRangeHigh = 22
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInVeryGoodRangeLow = 23
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInVeryGoodRangeHigh = 24
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInFairRangeLow = 25
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeInFairRangeHigh = 26
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        NewCarFairPurchasePrice = 27
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        NewCarFairPurchasePriceRangeLow = 28
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        NewCarFairPurchasePriceRangeHigh = 29
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        CPORangeLow = 30
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        CPORangeHigh = 31
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        UsedCarFairPurchasePrice = 32
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        UsedCarFairPurchasePriceRangeLow = 33
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        UsedCarFairPurchasePriceRangeHigh = 34
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Auction = 35
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        PrivateParty = 36
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        TradeIn = 37
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Freight = 38
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ConfiguredOptionValuation", [Namespace]:="http://schemas.datacontract.org/2004/07/KBB.VIS.Web.Service.R3.DataContract"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ConfiguredOptionValuation
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisplayNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsDefaultConfigurationField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsSelectedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceAdjustmentField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceTypeField As KBB3.InfoDriver.PriceType
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DisplayName() As String
            Get
                Return Me.DisplayNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DisplayNameField, value) <> true) Then
                    Me.DisplayNameField = value
                    Me.RaisePropertyChanged("DisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsDefaultConfiguration() As Boolean
            Get
                Return Me.IsDefaultConfigurationField
            End Get
            Set
                If (Me.IsDefaultConfigurationField.Equals(value) <> true) Then
                    Me.IsDefaultConfigurationField = value
                    Me.RaisePropertyChanged("IsDefaultConfiguration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsSelected() As Boolean
            Get
                Return Me.IsSelectedField
            End Get
            Set
                If (Me.IsSelectedField.Equals(value) <> true) Then
                    Me.IsSelectedField = value
                    Me.RaisePropertyChanged("IsSelected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PriceAdjustment() As Decimal
            Get
                Return Me.PriceAdjustmentField
            End Get
            Set
                If (Me.PriceAdjustmentField.Equals(value) <> true) Then
                    Me.PriceAdjustmentField = value
                    Me.RaisePropertyChanged("PriceAdjustment")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PriceType() As KBB3.InfoDriver.PriceType
            Get
                Return Me.PriceTypeField
            End Get
            Set
                If (Me.PriceTypeField.Equals(value) <> true) Then
                    Me.PriceTypeField = value
                    Me.RaisePropertyChanged("PriceType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OptionValuation", [Namespace]:="http://schemas.datacontract.org/2004/07/KBB.VIS.Web.Service.R3.DataContract"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OptionValuation
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceAdjustmentField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceTypeField As KBB3.InfoDriver.PriceType
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Price() As Decimal
            Get
                Return Me.PriceField
            End Get
            Set
                If (Me.PriceField.Equals(value) <> true) Then
                    Me.PriceField = value
                    Me.RaisePropertyChanged("Price")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PriceAdjustment() As Decimal
            Get
                Return Me.PriceAdjustmentField
            End Get
            Set
                If (Me.PriceAdjustmentField.Equals(value) <> true) Then
                    Me.PriceAdjustmentField = value
                    Me.RaisePropertyChanged("PriceAdjustment")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PriceType() As KBB3.InfoDriver.PriceType
            Get
                Return Me.PriceTypeField
            End Get
            Set
                If (Me.PriceTypeField.Equals(value) <> true) Then
                    Me.PriceTypeField = value
                    Me.RaisePropertyChanged("PriceType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleClass", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum VehicleClass As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        NewCar = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        UsedCar = 1
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleValuation", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VehicleValuation
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsInsufficientMarketDataField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsLimitedProductionField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MileageAdjustmentField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MileageZeroPointField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValuationPricesField() As KBB3.InfoDriver.Valuation
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValuationZipCodeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsInsufficientMarketData() As Boolean
            Get
                Return Me.IsInsufficientMarketDataField
            End Get
            Set
                If (Me.IsInsufficientMarketDataField.Equals(value) <> true) Then
                    Me.IsInsufficientMarketDataField = value
                    Me.RaisePropertyChanged("IsInsufficientMarketData")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsLimitedProduction() As Boolean
            Get
                Return Me.IsLimitedProductionField
            End Get
            Set
                If (Me.IsLimitedProductionField.Equals(value) <> true) Then
                    Me.IsLimitedProductionField = value
                    Me.RaisePropertyChanged("IsLimitedProduction")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MileageAdjustment() As Decimal
            Get
                Return Me.MileageAdjustmentField
            End Get
            Set
                If (Me.MileageAdjustmentField.Equals(value) <> true) Then
                    Me.MileageAdjustmentField = value
                    Me.RaisePropertyChanged("MileageAdjustment")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MileageZeroPoint() As Integer
            Get
                Return Me.MileageZeroPointField
            End Get
            Set
                If (Me.MileageZeroPointField.Equals(value) <> true) Then
                    Me.MileageZeroPointField = value
                    Me.RaisePropertyChanged("MileageZeroPoint")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ValuationPrices() As KBB3.InfoDriver.Valuation()
            Get
                Return Me.ValuationPricesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValuationPricesField, value) <> true) Then
                    Me.ValuationPricesField = value
                    Me.RaisePropertyChanged("ValuationPrices")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ValuationZipCode() As String
            Get
                Return Me.ValuationZipCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValuationZipCodeField, value) <> true) Then
                    Me.ValuationZipCodeField = value
                    Me.RaisePropertyChanged("ValuationZipCode")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Valuation", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Valuation
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsMaxDeductAppliedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PriceTypeField As KBB3.InfoDriver.PriceType
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsMaxDeductApplied() As Boolean
            Get
                Return Me.IsMaxDeductAppliedField
            End Get
            Set
                If (Me.IsMaxDeductAppliedField.Equals(value) <> true) Then
                    Me.IsMaxDeductAppliedField = value
                    Me.RaisePropertyChanged("IsMaxDeductApplied")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PriceType() As KBB3.InfoDriver.PriceType
            Get
                Return Me.PriceTypeField
            End Get
            Set
                If (Me.PriceTypeField.Equals(value) <> true) Then
                    Me.PriceTypeField = value
                    Me.RaisePropertyChanged("PriceType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As Decimal
            Get
                Return Me.ValueField
            End Get
            Set
                If (Me.ValueField.Equals(value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ReleaseVersion", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ReleaseVersion
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EditionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NewCarReleaseVersionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UsedCarReleaseVersionField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Edition() As String
            Get
                Return Me.EditionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EditionField, value) <> true) Then
                    Me.EditionField = value
                    Me.RaisePropertyChanged("Edition")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndDate() As Date
            Get
                Return Me.EndDateField
            End Get
            Set
                If (Me.EndDateField.Equals(value) <> true) Then
                    Me.EndDateField = value
                    Me.RaisePropertyChanged("EndDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NewCarReleaseVersion() As String
            Get
                Return Me.NewCarReleaseVersionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NewCarReleaseVersionField, value) <> true) Then
                    Me.NewCarReleaseVersionField = value
                    Me.RaisePropertyChanged("NewCarReleaseVersion")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartDate() As Date
            Get
                Return Me.StartDateField
            End Get
            Set
                If (Me.StartDateField.Equals(value) <> true) Then
                    Me.StartDateField = value
                    Me.RaisePropertyChanged("StartDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UsedCarReleaseVersion() As String
            Get
                Return Me.UsedCarReleaseVersionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UsedCarReleaseVersionField, value) <> true) Then
                    Me.UsedCarReleaseVersionField = value
                    Me.RaisePropertyChanged("UsedCarReleaseVersion")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleReview", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VehicleReview
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private ReviewItemsField() As KBB3.InfoDriver.VehicleReviewItem
        
        Private VehicleField As KBB3.InfoDriver.VehicleConfiguration
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property ReviewItems() As KBB3.InfoDriver.VehicleReviewItem()
            Get
                Return Me.ReviewItemsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReviewItemsField, value) <> true) Then
                    Me.ReviewItemsField = value
                    Me.RaisePropertyChanged("ReviewItems")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property Vehicle() As KBB3.InfoDriver.VehicleConfiguration
            Get
                Return Me.VehicleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.VehicleField, value) <> true) Then
                    Me.VehicleField = value
                    Me.RaisePropertyChanged("Vehicle")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleReviewItem", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VehicleReviewItem
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private ReviewTextField As String
        
        Private SectionHeaderField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property ReviewText() As String
            Get
                Return Me.ReviewTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReviewTextField, value) <> true) Then
                    Me.ReviewTextField = value
                    Me.RaisePropertyChanged("ReviewText")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property SectionHeader() As String
            Get
                Return Me.SectionHeaderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SectionHeaderField, value) <> true) Then
                    Me.SectionHeaderField = value
                    Me.RaisePropertyChanged("SectionHeader")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleTrim", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VehicleTrim
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdditionalDataField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BedLengthField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultDrivetrainField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultEngineField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DefaultTransmissionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DisplayNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ManufacturerCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MarketNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NumberOfDoorsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OEMBodyStyleField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VehicleIdField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdditionalData() As String
            Get
                Return Me.AdditionalDataField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdditionalDataField, value) <> true) Then
                    Me.AdditionalDataField = value
                    Me.RaisePropertyChanged("AdditionalData")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BedLength() As String
            Get
                Return Me.BedLengthField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BedLengthField, value) <> true) Then
                    Me.BedLengthField = value
                    Me.RaisePropertyChanged("BedLength")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DefaultDrivetrain() As String
            Get
                Return Me.DefaultDrivetrainField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultDrivetrainField, value) <> true) Then
                    Me.DefaultDrivetrainField = value
                    Me.RaisePropertyChanged("DefaultDrivetrain")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DefaultEngine() As String
            Get
                Return Me.DefaultEngineField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultEngineField, value) <> true) Then
                    Me.DefaultEngineField = value
                    Me.RaisePropertyChanged("DefaultEngine")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DefaultTransmission() As String
            Get
                Return Me.DefaultTransmissionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DefaultTransmissionField, value) <> true) Then
                    Me.DefaultTransmissionField = value
                    Me.RaisePropertyChanged("DefaultTransmission")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DisplayName() As String
            Get
                Return Me.DisplayNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DisplayNameField, value) <> true) Then
                    Me.DisplayNameField = value
                    Me.RaisePropertyChanged("DisplayName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ManufacturerCode() As String
            Get
                Return Me.ManufacturerCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ManufacturerCodeField, value) <> true) Then
                    Me.ManufacturerCodeField = value
                    Me.RaisePropertyChanged("ManufacturerCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MarketName() As String
            Get
                Return Me.MarketNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MarketNameField, value) <> true) Then
                    Me.MarketNameField = value
                    Me.RaisePropertyChanged("MarketName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NumberOfDoors() As String
            Get
                Return Me.NumberOfDoorsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NumberOfDoorsField, value) <> true) Then
                    Me.NumberOfDoorsField = value
                    Me.RaisePropertyChanged("NumberOfDoors")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OEMBodyStyle() As String
            Get
                Return Me.OEMBodyStyleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OEMBodyStyleField, value) <> true) Then
                    Me.OEMBodyStyleField = value
                    Me.RaisePropertyChanged("OEMBodyStyle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VehicleId() As Integer
            Get
                Return Me.VehicleIdField
            End Get
            Set
                If (Me.VehicleIdField.Equals(value) <> true) Then
                    Me.VehicleIdField = value
                    Me.RaisePropertyChanged("VehicleId")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Specification", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Specification
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryField As KBB3.InfoDriver.SpecificationCat
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryHeirarchyField() As KBB3.InfoDriver.SpecificationCat
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OptionAvailabilityField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UnitsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Category() As KBB3.InfoDriver.SpecificationCat
            Get
                Return Me.CategoryField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CategoryField, value) <> true) Then
                    Me.CategoryField = value
                    Me.RaisePropertyChanged("Category")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CategoryHeirarchy() As KBB3.InfoDriver.SpecificationCat()
            Get
                Return Me.CategoryHeirarchyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CategoryHeirarchyField, value) <> true) Then
                    Me.CategoryHeirarchyField = value
                    Me.RaisePropertyChanged("CategoryHeirarchy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OptionAvailability() As String
            Get
                Return Me.OptionAvailabilityField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OptionAvailabilityField, value) <> true) Then
                    Me.OptionAvailabilityField = value
                    Me.RaisePropertyChanged("OptionAvailability")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Units() As String
            Get
                Return Me.UnitsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UnitsField, value) <> true) Then
                    Me.UnitsField = value
                    Me.RaisePropertyChanged("Units")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As String
            Get
                Return Me.ValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValueField, value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SpecificationCat", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SpecificationCat
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DepthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Depth() As Integer
            Get
                Return Me.DepthField
            End Get
            Set
                If (Me.DepthField.Equals(value) <> true) Then
                    Me.DepthField = value
                    Me.RaisePropertyChanged("Depth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As Integer
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleCondition", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum VehicleCondition As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Excellent = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Good = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Fair = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Poor = 3
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        VeryGood = 4
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ValidationResponse", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ValidationResponse
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        Private ResponseTypeField As KBB3.InfoDriver.ValidationType
        
        Private ChooseRequiredOptionsField() As KBB3.InfoDriver.EquipmentOption
        
        Private ChangedOptionsField() As KBB3.InfoDriver.EquipmentOption
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true)>  _
        Public Property ResponseType() As KBB3.InfoDriver.ValidationType
            Get
                Return Me.ResponseTypeField
            End Get
            Set
                If (Me.ResponseTypeField.Equals(value) <> true) Then
                    Me.ResponseTypeField = value
                    Me.RaisePropertyChanged("ResponseType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=1)>  _
        Public Property ChooseRequiredOptions() As KBB3.InfoDriver.EquipmentOption()
            Get
                Return Me.ChooseRequiredOptionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChooseRequiredOptionsField, value) <> true) Then
                    Me.ChooseRequiredOptionsField = value
                    Me.RaisePropertyChanged("ChooseRequiredOptions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute(IsRequired:=true, Order:=2)>  _
        Public Property ChangedOptions() As KBB3.InfoDriver.EquipmentOption()
            Get
                Return Me.ChangedOptionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangedOptionsField, value) <> true) Then
                    Me.ChangedOptionsField = value
                    Me.RaisePropertyChanged("ChangedOptions")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ValidationType", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum ValidationType As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        RequiredOption = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        ChangeOption = 1
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINStatus", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService")>  _
    Public Enum VINStatus As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        I = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        V = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        N = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        E = 3
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="InternalOperationFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class InternalOperationFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SecurityFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SecurityFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DateOutOfRangeFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DateOutOfRangeFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VehicleIdNotFoundFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VehicleIdNotFoundFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="InvalidZipCodeFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class InvalidZipCodeFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="YearIdNotFoundFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class YearIdNotFoundFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MakeIdNotFoundFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MakeIdNotFoundFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ModelIdNotFoundFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ModelIdNotFoundFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINValidationInvalidCheckDigitFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VINValidationInvalidCheckDigitFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINValidationInvalidPatternFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VINValidationInvalidPatternFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InvalidPositionsField() As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PositionsCheckedField() As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValidPatternCharactersField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InvalidPositions() As Integer()
            Get
                Return Me.InvalidPositionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.InvalidPositionsField, value) <> true) Then
                    Me.InvalidPositionsField = value
                    Me.RaisePropertyChanged("InvalidPositions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PositionsChecked() As Integer()
            Get
                Return Me.PositionsCheckedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PositionsCheckedField, value) <> true) Then
                    Me.PositionsCheckedField = value
                    Me.RaisePropertyChanged("PositionsChecked")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ValidPatternCharacters() As String
            Get
                Return Me.ValidPatternCharactersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValidPatternCharactersField, value) <> true) Then
                    Me.ValidPatternCharactersField = value
                    Me.RaisePropertyChanged("ValidPatternCharacters")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINValidationTooShortFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VINValidationTooShortFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MinimumVINLengthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MinimumVINLength() As Integer
            Get
                Return Me.MinimumVINLengthField
            End Get
            Set
                If (Me.MinimumVINLengthField.Equals(value) <> true) Then
                    Me.MinimumVINLengthField = value
                    Me.RaisePropertyChanged("MinimumVINLength")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINValidationTooLongFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VINValidationTooLongFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaximumVINLengthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaximumVINLength() As Integer
            Get
                Return Me.MaximumVINLengthField
            End Get
            Set
                If (Me.MaximumVINLengthField.Equals(value) <> true) Then
                    Me.MaximumVINLengthField = value
                    Me.RaisePropertyChanged("MaximumVINLength")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="VINValidationInvalidCharactersFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class VINValidationInvalidCharactersFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InvalidPositionsField() As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValidVINCharactersField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InvalidPositions() As Integer()
            Get
                Return Me.InvalidPositionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.InvalidPositionsField, value) <> true) Then
                    Me.InvalidPositionsField = value
                    Me.RaisePropertyChanged("InvalidPositions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ValidVINCharacters() As String
            Get
                Return Me.ValidVINCharactersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValidVINCharactersField, value) <> true) Then
                    Me.ValidVINCharactersField = value
                    Me.RaisePropertyChanged("ValidVINCharacters")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="InvalidValueFault", [Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class InvalidValueFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReasonField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.CodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeField, value) <> true) Then
                    Me.CodeField = value
                    Me.RaisePropertyChanged("Code")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Reason() As String
            Get
                Return Me.ReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReasonField, value) <> true) Then
                    Me.ReasonField = value
                    Me.RaisePropertyChanged("Reason")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.kbb.com/2011/01/25/VehicleInformationService", ConfigurationName:="KBB3.InfoDriver.IVehicleInformationService2008R2")>  _
    Public Interface IVehicleInformationService2008R2
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetAvailableMethods", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetAvailableMethodsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetAvailableMethodsInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function GetAvailableMethods(ByVal AuthenticationKey As String) As String()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCPOPrograms", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCPOProgramsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCPOProgramsSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCPOProgramsDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCPOProgramsInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function GetCPOPrograms(ByVal AuthenticationKey As String, ByVal VersionDate As Date) As KBB3.InfoDriver.CPOMake()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetCompetitiveSetByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetCompetitiveSetByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.CompetitiveVehicle()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetConversionDataByVersionDate", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetConversionDataByVersionDateResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetConversionDataByVersionDateVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetConversionDataByVersionDateSecurityFaultFault", Name:="SecurityFault")>  _
        Function GetConversionDataByVersionDate(ByVal AuthenticationKey As String, ByVal ConfiguredVehicle As KBB3.InfoDriver.VehicleConfiguration, ByVal SourceVersionId As Integer, ByVal TargetVersionDate As Date) As KBB3.InfoDriver.Conversion
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetDrivetrainsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault")>  _
        Function GetDrivetrainsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEnginesByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetEnginesByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfiguration", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationInternalOperationFaultFaul"& _ 
            "t", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationVehicleIdNotFoundFaultFaul"& _ 
            "t", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionValuesByVehicleConfigurationInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetEquipmentOptionValuesByVehicleConfiguration(ByVal authenticationKey As String, ByVal vehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal zipCode As String, ByVal priceType As KBB3.InfoDriver.PriceType, ByVal applicationCategory As KBB3.InfoDriver.ApplicationCategory) As KBB3.InfoDriver.ConfiguredOptionValuation()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfiguration", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationInternalOperationFaultFau"& _ 
            "lt", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationVehicleIdNotFoundFaultFau"& _ 
            "lt", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValuesByVehicleConfigurationInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetEquipmentOptionsValuesByVehicleConfiguration(ByVal authenticationKey As String, ByVal vehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal zipCode As String, ByVal priceType As KBB3.InfoDriver.PriceType, ByVal applicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.ConfiguredOptionValuation()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault")>  _
        Function GetEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.EquipmentOption()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetEquipmentOptionsValueByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetEquipmentOptionsValueByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal PriceType As KBB3.InfoDriver.PriceType, ByVal VersionDate As Date, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory) As KBB3.InfoDriver.OptionValuation()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakes", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function GetMakes(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYear", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYearResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYearSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYearInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYearDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.YearIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetMakesByYearYearIdNotFoundFaultFault", Name:="YearIdNotFoundFault")>  _
        Function GetMakesByYear(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYears", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYearsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYearsInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYearsSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYearsDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.MakeIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByMakeAcrossAllYearsMakeIdNotFoundFaultFault", Name:="MakeIdNotFoundFault")>  _
        Function GetModelsByMakeAcrossAllYears(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal MakeId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMake", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMakeResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.YearIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMakeYearIdNotFoundFaultFault", Name:="YearIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMakeSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.MakeIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMakeMakeIdNotFoundFaultFault", Name:="MakeIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetModelsByYearAndMakeInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function GetModelsByYearAndMake(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal MakeId As Integer, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetNationalBaseMSRPValueByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetNationalBaseMSRPValueByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetNationalBaseMSRPValueByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetNationalBaseMSRPValueByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetNationalBaseMSRPValueByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function GetNationalBaseMSRPValueByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal VehicleId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReleaseVersionByVersionDate", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReleaseVersionByVersionDateResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReleaseVersionByVersionDateInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReleaseVersionByVersionDateSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReleaseVersionByVersionDateDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault")>  _
        Function GetReleaseVersionByVersionDate(ByVal AuthenticationKey As String, ByVal VersionDate As Date) As KBB3.InfoDriver.ReleaseVersion
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetReviewsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault")>  _
        Function GetReviewsByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleReview
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTransmissionsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetTransmissionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModel", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.ModelIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelModelIdNotFoundFaultFault", Name:="ModelIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.YearIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelYearIdNotFoundFaultFault", Name:="YearIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetTrimsAndVehicleIdsByYearAndModelDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault")>  _
        Function GetTrimsAndVehicleIdsByYearAndModel(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ModelId As Integer, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleTrim()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetUpdatedEquipmentOptionsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetUpdatedEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ChangedOptions() As KBB3.InfoDriver.EquipmentOption, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.EquipmentOption()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVIN", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidCheckDigitFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINVINValidationInvalidCheckDigitFaultFault", Name:="VINValidationInvalidCheckDigitFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidPatternFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINVINValidationInvalidPatternFaultFault", Name:="VINValidationInvalidPatternFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationTooShortFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINVINValidationTooShortFaultFault", Name:="VINValidationTooShortFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationTooLongFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINVINValidationTooLongFaultFault", Name:="VINValidationTooLongFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidCharactersFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINVINValidationInvalidCharactersFaultFault", Name:="VINValidationInvalidCharactersFault")>  _
        Function GetVehicleConfigurationByVIN(ByVal AuthenticationKey As String, ByVal VIN As String, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleConfiguration()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClass", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidPatternFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassVINValidationInvalidPatternFaultFaul"& _ 
            "t", Name:="VINValidationInvalidPatternFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationTooLongFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassVINValidationTooLongFaultFault", Name:="VINValidationTooLongFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationTooShortFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassVINValidationTooShortFaultFault", Name:="VINValidationTooShortFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidCharactersFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassVINValidationInvalidCharactersFaultF"& _ 
            "ault", Name:="VINValidationInvalidCharactersFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VINValidationInvalidCheckDigitFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVINAndClassVINValidationInvalidCheckDigitFaultF"& _ 
            "ault", Name:="VINValidationInvalidCheckDigitFault")>  _
        Function GetVehicleConfigurationByVINAndClass(ByVal AuthenticationKey As String, ByVal VIN As String, ByVal ZipCode As String, ByVal VersionDate As Date, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass) As KBB3.InfoDriver.VehicleConfiguration()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleConfigurationByVehicleIdSecurityFaultFault", Name:="SecurityFault")>  _
        Function GetVehicleConfigurationByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleConfiguration
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleSpecificationsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault")>  _
        Function GetVehicleSpecificationsByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.Specification()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfiguration", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetVehicleValuesByVehicleConfiguration(ByVal AuthenticationKey As String, ByVal VehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleCondition As KBB3.InfoDriver.VehicleCondition, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditions", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditionsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditionsDateOutOfRangeFaultFa"& _ 
            "ult", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditionsInternalOperationFaul"& _ 
            "tFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditionsSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleValuesByVehicleConfigurationAllConditionsInvalidZipCodeFaultFa"& _ 
            "ult", Name:="InvalidZipCodeFault")>  _
        Function GetVehicleValuesByVehicleConfigurationAllConditions(ByVal AuthenticationKey As String, ByVal VehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYears", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsResponse")>  _
        Function GetYears(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModel", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModelResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModelDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModelInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModelSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.ModelIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetYearsByModelModelIdNotFoundFaultFault", Name:="ModelIdNotFoundFault")>  _
        Function GetYearsByModel(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ModelId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetZeroPointMileageByYear", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetZeroPointMileageByYearResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetZeroPointMileageByYearInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetZeroPointMileageByYearSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.YearIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetZeroPointMileageByYearYearIdNotFoundFaultFault", Name:="YearIdNotFoundFault")>  _
        Function GetZeroPointMileageByYear(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal YearId As Integer, ByVal VersionDate As Date, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/GetVehicleTypicalMileageByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function GetVehicleTypicalMileageByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal VersionDate As Date) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/Login", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/LoginResponse")>  _
        Function Login(ByVal Username As String, ByVal Password As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleId", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.VehicleIdNotFoundFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdVehicleIdNotFoundFaultFault", Name:="VehicleIdNotFoundFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdInternalOperationFaultFault", Name:="InternalOperationFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.DateOutOfRangeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdDateOutOfRangeFaultFault", Name:="DateOutOfRangeFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidZipCodeFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateUpdatedEquipmentOptionsByVehicleIdInvalidZipCodeFaultFault", Name:="InvalidZipCodeFault")>  _
        Function ValidateUpdatedEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ChangedOptions() As KBB3.InfoDriver.EquipmentOption, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.ValidationResponse
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateVIN", ReplyAction:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateVINResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InvalidValueFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateVINInvalidValueFaultFault", Name:="InvalidValueFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.SecurityFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateVINSecurityFaultFault", Name:="SecurityFault"),  _
         System.ServiceModel.FaultContractAttribute(GetType(KBB3.InfoDriver.InternalOperationFault), Action:="http://www.kbb.com/2011/01/25/VehicleInformationService/IVehicleInformationServic"& _ 
            "e2008R2/ValidateVINInternalOperationFaultFault", Name:="InternalOperationFault")>  _
        Function ValidateVIN(ByVal AuthenticationKey As String, ByVal VIN As String) As KBB3.InfoDriver.VINStatus
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IVehicleInformationService2008R2Channel
        Inherits KBB3.InfoDriver.IVehicleInformationService2008R2, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class VehicleInformationService2008R2Client
        Inherits System.ServiceModel.ClientBase(Of KBB3.InfoDriver.IVehicleInformationService2008R2)
        Implements KBB3.InfoDriver.IVehicleInformationService2008R2
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetAvailableMethods(ByVal AuthenticationKey As String) As String() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetAvailableMethods
            Return MyBase.Channel.GetAvailableMethods(AuthenticationKey)
        End Function
        
        Public Function GetCPOPrograms(ByVal AuthenticationKey As String, ByVal VersionDate As Date) As KBB3.InfoDriver.CPOMake() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetCPOPrograms
            Return MyBase.Channel.GetCPOPrograms(AuthenticationKey, VersionDate)
        End Function
        
        Public Function GetCompetitiveSetByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.CompetitiveVehicle() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetCompetitiveSetByVehicleId
            Return MyBase.Channel.GetCompetitiveSetByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetConversionDataByVersionDate(ByVal AuthenticationKey As String, ByVal ConfiguredVehicle As KBB3.InfoDriver.VehicleConfiguration, ByVal SourceVersionId As Integer, ByVal TargetVersionDate As Date) As KBB3.InfoDriver.Conversion Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetConversionDataByVersionDate
            Return MyBase.Channel.GetConversionDataByVersionDate(AuthenticationKey, ConfiguredVehicle, SourceVersionId, TargetVersionDate)
        End Function
        
        Public Function GetDrivetrainsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetDrivetrainsByVehicleId
            Return MyBase.Channel.GetDrivetrainsByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetEnginesByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetEnginesByVehicleId
            Return MyBase.Channel.GetEnginesByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetEquipmentOptionValuesByVehicleConfiguration(ByVal authenticationKey As String, ByVal vehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal zipCode As String, ByVal priceType As KBB3.InfoDriver.PriceType, ByVal applicationCategory As KBB3.InfoDriver.ApplicationCategory) As KBB3.InfoDriver.ConfiguredOptionValuation() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetEquipmentOptionValuesByVehicleConfiguration
            Return MyBase.Channel.GetEquipmentOptionValuesByVehicleConfiguration(authenticationKey, vehicleConfiguration, zipCode, priceType, applicationCategory)
        End Function
        
        Public Function GetEquipmentOptionsValuesByVehicleConfiguration(ByVal authenticationKey As String, ByVal vehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal zipCode As String, ByVal priceType As KBB3.InfoDriver.PriceType, ByVal applicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.ConfiguredOptionValuation() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetEquipmentOptionsValuesByVehicleConfiguration
            Return MyBase.Channel.GetEquipmentOptionsValuesByVehicleConfiguration(authenticationKey, vehicleConfiguration, zipCode, priceType, applicationCategory, VersionDate)
        End Function
        
        Public Function GetEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.EquipmentOption() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetEquipmentOptionsByVehicleId
            Return MyBase.Channel.GetEquipmentOptionsByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetEquipmentOptionsValueByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal PriceType As KBB3.InfoDriver.PriceType, ByVal VersionDate As Date, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory) As KBB3.InfoDriver.OptionValuation() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetEquipmentOptionsValueByVehicleId
            Return MyBase.Channel.GetEquipmentOptionsValueByVehicleId(AuthenticationKey, VehicleId, ZipCode, PriceType, VersionDate, ApplicationCategory)
        End Function
        
        Public Function GetMakes(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetMakes
            Return MyBase.Channel.GetMakes(AuthenticationKey, VehicleClass, ApplicationCategory, VersionDate)
        End Function
        
        Public Function GetMakesByYear(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetMakesByYear
            Return MyBase.Channel.GetMakesByYear(AuthenticationKey, VehicleClass, ApplicationCategory, YearId, VersionDate)
        End Function
        
        Public Function GetModelsByMakeAcrossAllYears(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal MakeId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetModelsByMakeAcrossAllYears
            Return MyBase.Channel.GetModelsByMakeAcrossAllYears(AuthenticationKey, VehicleClass, ApplicationCategory, MakeId, VersionDate)
        End Function
        
        Public Function GetModelsByYearAndMake(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal MakeId As Integer, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetModelsByYearAndMake
            Return MyBase.Channel.GetModelsByYearAndMake(AuthenticationKey, VehicleClass, ApplicationCategory, MakeId, YearId, VersionDate)
        End Function
        
        Public Function GetNationalBaseMSRPValueByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal VehicleId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetNationalBaseMSRPValueByVehicleId
            Return MyBase.Channel.GetNationalBaseMSRPValueByVehicleId(AuthenticationKey, VehicleClass, VehicleId, VersionDate)
        End Function
        
        Public Function GetReleaseVersionByVersionDate(ByVal AuthenticationKey As String, ByVal VersionDate As Date) As KBB3.InfoDriver.ReleaseVersion Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetReleaseVersionByVersionDate
            Return MyBase.Channel.GetReleaseVersionByVersionDate(AuthenticationKey, VersionDate)
        End Function
        
        Public Function GetReviewsByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleReview Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetReviewsByVehicleId
            Return MyBase.Channel.GetReviewsByVehicleId(AuthenticationKey, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetTransmissionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetTransmissionsByVehicleId
            Return MyBase.Channel.GetTransmissionsByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetTrimsAndVehicleIdsByYearAndModel(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ModelId As Integer, ByVal YearId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleTrim() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetTrimsAndVehicleIdsByYearAndModel
            Return MyBase.Channel.GetTrimsAndVehicleIdsByYearAndModel(AuthenticationKey, VehicleClass, ApplicationCategory, ModelId, YearId, VersionDate)
        End Function
        
        Public Function GetUpdatedEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ChangedOptions() As KBB3.InfoDriver.EquipmentOption, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.EquipmentOption() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetUpdatedEquipmentOptionsByVehicleId
            Return MyBase.Channel.GetUpdatedEquipmentOptionsByVehicleId(AuthenticationKey, ApplicationCategory, ChangedOptions, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetVehicleConfigurationByVIN(ByVal AuthenticationKey As String, ByVal VIN As String, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleConfiguration() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleConfigurationByVIN
            Return MyBase.Channel.GetVehicleConfigurationByVIN(AuthenticationKey, VIN, ZipCode, VersionDate)
        End Function
        
        Public Function GetVehicleConfigurationByVINAndClass(ByVal AuthenticationKey As String, ByVal VIN As String, ByVal ZipCode As String, ByVal VersionDate As Date, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass) As KBB3.InfoDriver.VehicleConfiguration() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleConfigurationByVINAndClass
            Return MyBase.Channel.GetVehicleConfigurationByVINAndClass(AuthenticationKey, VIN, ZipCode, VersionDate, VehicleClass)
        End Function
        
        Public Function GetVehicleConfigurationByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleConfiguration Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleConfigurationByVehicleId
            Return MyBase.Channel.GetVehicleConfigurationByVehicleId(AuthenticationKey, ApplicationCategory, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function GetVehicleSpecificationsByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.Specification() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleSpecificationsByVehicleId
            Return MyBase.Channel.GetVehicleSpecificationsByVehicleId(AuthenticationKey, VehicleId, VersionDate)
        End Function
        
        Public Function GetVehicleValuesByVehicleConfiguration(ByVal AuthenticationKey As String, ByVal VehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VehicleCondition As KBB3.InfoDriver.VehicleCondition, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleValuesByVehicleConfiguration
            Return MyBase.Channel.GetVehicleValuesByVehicleConfiguration(AuthenticationKey, VehicleConfiguration, ApplicationCategory, VehicleCondition, ZipCode, VersionDate)
        End Function
        
        Public Function GetVehicleValuesByVehicleConfigurationAllConditions(ByVal AuthenticationKey As String, ByVal VehicleConfiguration As KBB3.InfoDriver.VehicleConfiguration, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.VehicleValuation Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleValuesByVehicleConfigurationAllConditions
            Return MyBase.Channel.GetVehicleValuesByVehicleConfigurationAllConditions(AuthenticationKey, VehicleConfiguration, ApplicationCategory, ZipCode, VersionDate)
        End Function
        
        Public Function GetYears(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetYears
            Return MyBase.Channel.GetYears(AuthenticationKey, VehicleClass, ApplicationCategory, VersionDate)
        End Function
        
        Public Function GetYearsByModel(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ModelId As Integer, ByVal VersionDate As Date) As KBB3.InfoDriver.IdStringPair() Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetYearsByModel
            Return MyBase.Channel.GetYearsByModel(AuthenticationKey, VehicleClass, ApplicationCategory, ModelId, VersionDate)
        End Function
        
        Public Function GetZeroPointMileageByYear(ByVal AuthenticationKey As String, ByVal VehicleClass As KBB3.InfoDriver.VehicleClass, ByVal YearId As Integer, ByVal VersionDate As Date, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory) As Integer Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetZeroPointMileageByYear
            Return MyBase.Channel.GetZeroPointMileageByYear(AuthenticationKey, VehicleClass, YearId, VersionDate, ApplicationCategory)
        End Function
        
        Public Function GetVehicleTypicalMileageByVehicleId(ByVal AuthenticationKey As String, ByVal VehicleId As Integer, ByVal VersionDate As Date) As Integer Implements KBB3.InfoDriver.IVehicleInformationService2008R2.GetVehicleTypicalMileageByVehicleId
            Return MyBase.Channel.GetVehicleTypicalMileageByVehicleId(AuthenticationKey, VehicleId, VersionDate)
        End Function
        
        Public Function Login(ByVal Username As String, ByVal Password As String) As String Implements KBB3.InfoDriver.IVehicleInformationService2008R2.Login
            Return MyBase.Channel.Login(Username, Password)
        End Function
        
        Public Function ValidateUpdatedEquipmentOptionsByVehicleId(ByVal AuthenticationKey As String, ByVal ApplicationCategory As KBB3.InfoDriver.ApplicationCategory, ByVal ChangedOptions() As KBB3.InfoDriver.EquipmentOption, ByVal VehicleId As Integer, ByVal ZipCode As String, ByVal VersionDate As Date) As KBB3.InfoDriver.ValidationResponse Implements KBB3.InfoDriver.IVehicleInformationService2008R2.ValidateUpdatedEquipmentOptionsByVehicleId
            Return MyBase.Channel.ValidateUpdatedEquipmentOptionsByVehicleId(AuthenticationKey, ApplicationCategory, ChangedOptions, VehicleId, ZipCode, VersionDate)
        End Function
        
        Public Function ValidateVIN(ByVal AuthenticationKey As String, ByVal VIN As String) As KBB3.InfoDriver.VINStatus Implements KBB3.InfoDriver.IVehicleInformationService2008R2.ValidateVIN
            Return MyBase.Channel.ValidateVIN(AuthenticationKey, VIN)
        End Function
    End Class
End Namespace
